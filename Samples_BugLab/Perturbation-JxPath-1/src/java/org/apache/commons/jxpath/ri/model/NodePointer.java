[BugLab_Wrong_Literal]^private boolean attribute = true;^47^^^^^42^52^private boolean attribute = false;^[CLASS] NodePointer   [VARIABLES] 
[BugLab_Variable_Misuse]^if  ( rootNode == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( bean != null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = new NullPointer ( locale, name ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return parent;^63^^^^^55^77^return pointer;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( parent != null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( pointer == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return parent;^71^^^^^55^77^return pointer;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= factories.length; i++ )  {^68^^^^^55^77^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^for  ( int i = WHOLE_COLLECTION; i < factories.length; i++ )  {^68^^^^^55^77^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^pointer = factories[i].createNodePointer ( name, rootNode, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = factories[i].createNodePointer ( bean, name, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = locale[i].createNodePointer ( name, bean, factories ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = name[i].createNodePointer ( factories, bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = factories[i].createNodePointer ( name, locale, bean ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = factories[i].createNodePointer ( locale, bean, name ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^pointer = bean[i].createNodePointer ( name, factories, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Could not allocate a NodePointer for object of " + rootNode.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  <  bean.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  |  bean.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^+ rootNode.getClass (  )  ) ;^76^^^^^55^77^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( pointer == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return parent;^94^^^^^83^100^return pointer;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^for  ( int i = WHOLE_COLLECTION; i < factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( parent != null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^NodePointer pointer = factories[i].createNodePointer ( parent, name, rootNode ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^NodePointer pointer = parent[i].createNodePointer ( factories, name, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^NodePointer pointer = factories[i].createNodePointer ( parent, bean, name ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^factories[i].createNodePointer ( pointer, name, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^factories[i].createNodePointer ( parent, name, rootNode ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^factories[i].createNodePointer ( name, parent, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^factories[i].createNodePointer ( parent, bean, name ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^for  ( int i = i; i < factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^NodePointer pointer = name[i].createNodePointer ( parent, factories, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Could not allocate a NodePointer for object of " + rootNode.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  <<  bean.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "   instanceof   bean.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^+ rootNode.getClass (  )  ) ;^99^^^^^83^100^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( namespaceResolver == null && pointer != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^if  ( parent == null && namespaceResolver != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( namespaceResolver == null || parent != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( namespaceResolver != null && parent != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( namespaceResolver == null && parent == null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^namespaceResolver = pointer.getNamespaceResolver (  ) ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^while  ( parent != null && pointer.isContainer (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^while  ( pointer != null || pointer.isContainer (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^while  ( pointer == null && pointer.isContainer (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^pointer = parent.getImmediateParentPointer (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return pointer;^135^^^^^134^136^return parent;^[CLASS] NodePointer  [METHOD] getImmediateParentPointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return pointer == null;^156^^^^^155^157^return parent == null;^[CLASS] NodePointer  [METHOD] isRoot [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^return parent != null;^156^^^^^155^157^return parent == null;^[CLASS] NodePointer  [METHOD] isRoot [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return true;^176^^^^^175^177^return false;^[CLASS] NodePointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return i;^187^^^^^186^188^return index;^[CLASS] NodePointer  [METHOD] getIndex [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^this.index = i;^191^^^^^190^192^this.index = index;^[CLASS] NodePointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( pointer != this )  {^214^^^^^212^219^if  ( valuePointer != this )  {^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( valuePointer <= this )  {^214^^^^^212^219^if  ( valuePointer != this )  {^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return pointer.getValue (  ) ;^215^^^^^212^219^return valuePointer.getValue (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( valuePointer != this )  {^240^^^^^238^244^if  ( ivp != this )  {^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( ivp < this )  {^240^^^^^238^244^if  ( ivp != this )  {^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return valuePointer.getValuePointer (  ) ;^241^^^^^238^244^return ivp.getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( i == WHOLE_COLLECTION )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( index == i )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( index <= WHOLE_COLLECTION )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return i >= 0 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^return index >= 0 || index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^return index > 0 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^return index >= 0 && index <= getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return index >= -1 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return false;^271^^^^^269^276^return true;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( rootNode != null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( valuePointer != null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^rootNode = valuePointer.getRootNode (  ) ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return bean;^318^^^^^309^319^return rootNode;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return true;^349^^^^^334^364^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( testName == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Operator]^if  ( nodeName != null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Literal]^return true;^355^^^^^340^370^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( !equalStrings ( nodePrefix, nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( !equalStrings ( testPrefix, testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^if  ( !equalStrings ( nodePrefix, testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( !equalStrings ( testPrefix, nodeNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( !equalStrings ( testNS, testPrefix )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^if  ( !equalStrings ( nodeNS, testNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Literal]^return true;^364^^^^^349^379^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^String testNS = getNamespaceURI ( nodePrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^String testNS = getNamespaceURI ( testNS ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^String nodeNS = getNamespaceURI ( testPrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Literal]^return false;^368^^^^^353^383^return true;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^return nodeName.getName (  ) .equals ( testName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^String testPrefix = nodeName.getPrefix (  ) ;^358^^^^^343^373^String testPrefix = testName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^String nodePrefix = testName.getPrefix (  ) ;^359^^^^^344^374^String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( !equalStrings ( testNS, nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( !equalStrings ( testPrefix, testNS )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return nodeName.getName (  ) .equals ( nodeName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return testName.getName (  ) .equals ( testName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^String nodeNS = getNamespaceURI ( testNS ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Literal]^return false;^345^^^^^330^360^return true;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Literal]^return true;^378^^^^^363^393^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( testNS == null && s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( s1 == null && testPrefix != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^if  ( s2 == null && s1 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( s1 == null || s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( s1 != null && s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( s1 == null && s2 == null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return true;^383^^^^^381^389^return false;^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( testNS != null && !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( s1 != null && !s1.equals ( testNS )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^if  ( s2 != null && !s1.equals ( s1 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( s1 != null || !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( s1 == null && !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return true;^386^^^^^381^389^return false;^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return false;^388^^^^^381^389^return true;^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^setValue ( rootNode ) ;^396^^^^^395^398^setValue ( value ) ;^[CLASS] NodePointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( i + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + index + "[" +  ( name + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  <  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  !=  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  |  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ^  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  >=  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path "  |  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  >  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ==  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  &&  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  >>  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path "   instanceof   asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  >>  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( i + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + index + "[" +  ( name + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (   instanceof   )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ^  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ==  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ||  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  >>  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  &  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path "  <  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  >=  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + WHOLE_COLLECTION )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  !=  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  <  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path "  !=  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  ^  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + index )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  &&  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  <  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  |  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path "  <<  asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (   instanceof   )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  >=  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot create an attribute for path "  >>  asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( locale != null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( pointer2 != null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^locale = valuePointer.getLocale (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^locale = pointer2.getLocale (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( valuePointer != null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^String name = locale.toString (  ) .replace ( '_', '-' ) ;^477^^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return testNS.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return name.toUpperCase (  ) .startsWith ( s2.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^return lang.toUpperCase (  ) .startsWith ( name.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return testPrefix.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return name.toUpperCase (  ) .startsWith ( testPrefix.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return name.toUpperCase (  ) .startsWith ( testNS.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( startWith != null && valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Operator]^if  ( valuePointer != null || valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Operator]^if  ( valuePointer == null && valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Wrong_Operator]^if  ( valuePointer != null && valuePointer == this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return pointer2.childIterator ( test, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return valuePointer.childIterator ( test, attribute, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return valuePointer.childIterator ( test, reverse, pointer2 ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^return startWith.childIterator ( test, reverse, valuePointer ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^return test.childIterator ( valuePointer, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^return valuePointer.childIterator ( reverse, test, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^return valuePointer.childIterator ( startWith, reverse, test ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return pointer1.childIterator ( test, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Argument_Swapping]^return valuePointer.childIterator ( test, startWith, reverse ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^return valuePointer.childIterator ( test, reverse, valuePointer ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[BugLab_Variable_Misuse]^if  ( startWith != null && valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( valuePointer != null || valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( valuePointer == null && valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( valuePointer != null && valuePointer == this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return startWith.attributeIterator ( qname ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^return qname.attributeIterator ( valuePointer ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return pointer2.attributeIterator ( qname ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( nodePrefix == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( prefix != null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return false;^569^^^^^567^578^return true;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^String namespace = getNamespaceURI ( s2 ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^String namespace = getNamespaceURI ( nodePrefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( testPrefix == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( namespace != null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^return true;^574^^^^^567^578^return false;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return prefix.equals ( getDefaultNamespaceURI (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return s2.equals ( getDefaultNamespaceURI (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return context.getPointerByID ( s2 ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^return id.getPointerByID ( context ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return context.getPointerByKey ( s1, value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return context.getPointerByKey ( key, prefix ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^return key.getPointerByKey ( context, value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^return context.getPointerByKey ( value, key ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Argument_Swapping]^return value.getPointerByKey ( key, context ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( valuePointer != null && parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( parent != null || parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( parent == null && parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return valuePointer.asPath (  ) ;^609^^^^^605^630^return parent.asPath (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^return pointer2.asPath (  ) ;^609^^^^^605^630^return parent.asPath (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^buffer.append ( valuePointer.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^buffer.append ( pointer2.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( buffer.length (  )  == 0 && buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( buffer.length (  )  >= 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  < '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   ^  1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^|| buffer.charAt ( buffer.length (  )   !=  1 )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^|| buffer.charAt ( buffer.length (  )   )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( reverse )  {^621^^^^^605^630^if  ( attribute )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( i != WHOLE_COLLECTION && isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION || isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^if  ( index < WHOLE_COLLECTION && isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^buffer.append ( '[' ) .append ( i + 1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^buffer.append ( '[' ) .append ( index  >=  1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^buffer.append ( '[' ) .append ( index  ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^buffer.append ( '[' ) .append ( index  >  1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^buffer.append ( '[' ) .append ( index + index ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^buffer.append ( '[' ) .append ( index   instanceof   1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Literal]^buffer.append ( '[' ) .append ( index + i ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Wrong_Operator]^buffer.append ( '[' ) .append ( index  ||  1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[BugLab_Variable_Misuse]^if  ( startWith != null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[BugLab_Variable_Misuse]^ptr.parent =  ( NodePointer )  startWith.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[BugLab_Variable_Misuse]^ptr.parent =  ( NodePointer )  valuePointer.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[BugLab_Variable_Misuse]^if  ( valuePointer != null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[BugLab_Variable_Misuse]^return valuePointer;^638^^^^^632^645^return ptr;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[BugLab_Variable_Misuse]^if  ( parent == valuePointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^if  ( valuePointer == pointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^if  ( parent == ptr )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^if  ( pointer == parent.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^if  ( pointer.parent == parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^if  ( parent == pointer )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Operator]^if  ( parent >= pointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Operator]^if  ( parent < pointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^if  ( ptr == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Operator]^if  ( parent != null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Literal]^return index;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Literal]^return WHOLE_COLLECTION;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return parent.compareChildNodePointers ( this, startWith ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return valuePointer.compareChildNodePointers ( this, pointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^return pointer.compareChildNodePointers ( this, parent ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return parent.compareChildNodePointers ( this, valuePointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^if  ( pointer2 == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Literal]^return i;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return startWith.compareChildNodePointers ( this, pointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return parent.compareChildNodePointers ( this, ptr ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Literal]^int depth1 = 1;^662^^^^^651^675^int depth1 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^while  ( pointer2 != null )  {^664^^^^^651^675^while  ( p1 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Operator]^while  ( p1 == null )  {^664^^^^^651^675^while  ( p1 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^p1 = p1.parent.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^p1 = p1;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^p1 = startWith.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^p1 = startWith;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Literal]^int depth2 = i;^668^^^^^651^675^int depth2 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^NodePointer p2 = valuePointer;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^while  ( ptr != null )  {^670^^^^^651^675^while  ( p2 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Wrong_Operator]^while  ( p2 == null )  {^670^^^^^651^675^while  ( p2 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^p2 = valuePointer.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^p2 = pointer2;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^p2 = p2.parent.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^p2 = p2;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return compareNodePointers ( this, index, pointer, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return compareNodePointers ( this, depth1, pointer, index ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^return compareNodePointers ( this, depth2, pointer, depth1 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^return compareNodePointers ( this, depth1, depth2, pointer ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^return compareNodePointers ( this, depth1, valuePointer, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Argument_Swapping]^return compareNodePointers ( this, pointer, depth1, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[BugLab_Variable_Misuse]^if  ( index < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( depth1 < index )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^if  ( depth2 < depth1 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( depth1 <= depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( depth2 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( depth0 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( depthdepth1 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^else if  ( index > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^else if  ( depth1 > index )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^else if  ( depth2 > depth1 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^else if  ( depth1 >= depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^else if  ( depth0 > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( index != 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( r < 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( r != r )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return index;^693^^^^^678^708^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return i;^693^^^^^678^708^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return 2;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( pointer2.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, index - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, startWith, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, index ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( pointer1, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1.parent.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( depth1.parent, p1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p2, depth1 - 1, p1.parent, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1.parent, depth2 - 1, p2, depth1 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  <  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pindex.parent, depthindex - index, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, pointer2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, r ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( pointer2, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( depth1, p1.parent - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1.parent, depth1 - 1, depth2, p2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pWHOLE_COLLECTION.parent, depthWHOLE_COLLECTION - WHOLE_COLLECTION, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( r == 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( r != depth1 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return index;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( ptr.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( startWith, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p2.parent, depth1 - 1, p1, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( depth2, depth1 - 1, p2, p1.parent ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  ^  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( p1.parent, depth1 , p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( valuePointer.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, r - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1.parent, p2 - 1, depth1, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( depth2.parent, depth1 - 1, p2, p1 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  >>  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pr.parent, depthr - r, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( i != 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( r <= 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( r != index )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return i;^686^^^^^671^701^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return index;^686^^^^^671^701^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return -depth2;^688^^^^^673^703^return -1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( valuePointer, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, index, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, depth1, valuePointer.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, depth1, p2.parent, index - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, depth1, pointer2, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p2.parent, depth1, p1, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1, depth2, p2.parent, depth1 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p2, depth1, p1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  ==  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( startWith, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, r, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, depth1, pointer2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, depth1, p2.parent, r - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1, p2, depth1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1, depth1, p2.parent.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1, depth1, p2, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  >  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( index != 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( r == 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( r != r )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return depth1;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, valuePointer, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  !=  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  &  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pdepth1.parent, depthdepth1 - depth1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( r > 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1, depth1, pointer1, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  !=  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pindex, depthindex, p2.parent, depth2 - index ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( valuePointer, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  |  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pi.parent, depthi - i, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  ^  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  ==  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( ptr == null && p2 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( p1 == null && startWith == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^if  ( p2 == null && p1 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( p1 == null || p2 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( p1 != null && p2 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( p1 == null && p2 != null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return i;^698^^^^^683^713^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( ptr != null && p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( p1 != null && p1.equals ( valuePointer )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^if  ( p2 != null && p1.equals ( p1 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( p1 != null || p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( p1 == null && p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return depth2;^702^^^^^687^717^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^return r;^702^^^^^687^717^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( index == 1 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( depth1 > 1 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( depth0 == 0 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + valuePointer + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + startWith + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p2 + "' and '" + p1 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  <=  p1  <=  "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  &&  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + ptr + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  !=  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + valuePointer + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"   instanceof   p1   instanceof   "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  ==  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + ptr + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  ==  p1  ==  "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  <  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, index - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, startWith.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( valuePointer, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^int r = compareNodePointers ( p1.parent, depth1 - 1, pointer2, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p2.parent.parent, depth1 - 1, p1, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( depth1, p1.parent - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p1.parent, depth1 - 1, depth2.parent, p2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^int r = compareNodePointers ( p2.parent, depth1 - 1, p1.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1  !=  1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2  !=  1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( p1.parent, depth1 , p2.parent, depth2  ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^int r = compareNodePointers ( pWHOLE_COLLECTION.parent, depthWHOLE_COLLECTION - WHOLE_COLLECTION, p2.parent, depth2 - WHOLE_COLLECTION ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^compareNodePointers ( p1.parent, r - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, r - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^compareNodePointers ( p1.parent, depth1 - 1, valuePointer, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^compareNodePointers ( p2.parent.parent, depth1 - 1, p1, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^compareNodePointers ( p1.parent, depth2 - 1, p2.parent, depth1 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^compareNodePointers ( p2, depth1 - 1, p1.parent.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^compareNodePointers ( p1.parent, depth1 - 1, depth2.parent, p2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^compareNodePointers ( p2.parent, depth1 - 1, p1.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^compareNodePointers ( p1.parent, depth1  &  1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2  <<  1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^compareNodePointers ( p1.parent, depth1 , p2.parent, depth2  ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^compareNodePointers ( pdepth1.parent, depthdepth1 - depth1, p2.parent, depth2 - depth1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( i != 0 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( r <= 0 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( r != 1 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return index;^713^^^^^698^728^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return p1.parent.compareChildNodePointers ( p1, startWith ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return ptr.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^return p2.parent.compareChildNodePointers ( p1, p1 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^return p2.compareChildNodePointers ( p1, p1.parent ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^return p1.compareChildNodePointers ( p1.parent, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^return pointer2.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^return p1.parent.parent.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( prefix.length (  )  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( indent.length (  )  != 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Literal]^if  ( indent.length (  )  ==  )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^System.err.println ( nodePrefix + " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^System.err.println ( indent + " of " + valuePointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^System.err.println ( pointer + " of " + indent^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^System.err.println ( indent  >=  " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^+ pointer2.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^System.err.println ( "POINTER: " + pointer2 + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^System.err.println ( "POINTER: "  ||  pointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^+ valuePointer.getClass (  ) .getName (  ) + " ) " ) ;^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^System.err.println ( "POINTER: " + valuePointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^System.err.println ( "POINTER: "  <<  pointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^+ pointer2.getClass (  ) .getName (  ) + " ) " ) ;^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^System.err.println ( indent + " of " + pointer2^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^System.err.println ( indent  <=  " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^+ valuePointer.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( valuePointer.getImmediateParentPointer (  )  != null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^if  ( pointer.getImmediateParentPointer (  )  == null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^printDeep ( valuePointer.getImmediateParentPointer (  ) , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^printDeep ( pointer.getImmediateParentPointer (  ) , prefix + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Argument_Swapping]^printDeep ( indent.getImmediateParentPointer (  ) , pointer + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^printDeep ( pointer.getImmediateParentPointer (  ) , indent  <=  "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^if  ( ptr.getImmediateParentPointer (  )  != null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^printDeep ( pointer.getImmediateParentPointer (  ) , value + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Wrong_Operator]^printDeep ( pointer.getImmediateParentPointer (  ) , indent  ^  "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[BugLab_Variable_Misuse]^printDeep ( ptr.getImmediateParentPointer (  ) , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
