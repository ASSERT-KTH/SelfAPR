[buglab_swap_variables]^pointer = new NullPointer ( locale, name ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = new NullPointer (  locale ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = new NullPointer ( name ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = locale[i].createNodePointer ( name, bean, factories ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = factories[i].createNodePointer ( bean, name, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = factories[i].createNodePointer (  bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = factories[i].createNodePointer ( name,  locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = factories[i].createNodePointer ( name, bean ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = bean[i].createNodePointer ( name, factories, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = factories[i].createNodePointer ( name, locale, bean ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = name[i].createNodePointer ( factories, bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^pointer = factories[i].createNodePointer ( locale, bean, name ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = parent[i].createNodePointer ( factories, name, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = factories[i].createNodePointer ( name, parent, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = factories[i].createNodePointer (  name, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = factories[i].createNodePointer ( parent, bean, name ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = factories[i].createNodePointer ( parent,  bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = factories[i].createNodePointer ( parent, name ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^factories[i].createNodePointer ( bean, name, parent ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^factories[i].createNodePointer (  name, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^factories[i].createNodePointer ( parent,  bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^factories[i].createNodePointer ( parent, bean, name ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^factories[i].createNodePointer ( parent, name ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^NodePointer pointer = name[i].createNodePointer ( parent, factories, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^factories[i].createNodePointer ( name, parent, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^if  ( parent == null && namespaceResolver != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION == index )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^if  ( !equalStrings (  nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^if  ( !equalStrings ( nodePrefix, testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^if  ( !equalStrings ( testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^if  ( !equalStrings ( nodeNS, testNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^if  ( !equalStrings (  nodeNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^if  ( !equalStrings ( testNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return nodeName.getName (  ) .equals ( testName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^if  ( s2 == null && s1 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^if  ( s2 != null && !s1.equals ( s1 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + index + "[" +  ( name + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + index + "[" +  ( name + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return lang.toUpperCase (  ) .startsWith ( name.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return startWith.childIterator ( test, reverse, valuePointer ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return valuePointer.childIterator ( reverse, test, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return valuePointer.childIterator (  reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return valuePointer.childIterator ( test, startWith, reverse ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return valuePointer.childIterator ( test,  startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return valuePointer.childIterator ( startWith, reverse, test ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return valuePointer.childIterator ( test, reverse ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return test.childIterator ( valuePointer, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[buglab_swap_variables]^return qname.attributeIterator ( valuePointer ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return id.getPointerByID ( context ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return value.getPointerByKey ( key, context ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return context.getPointerByKey ( value, key ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return context.getPointerByKey (  value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^return context.getPointerByKey ( key ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[buglab_swap_variables]^if  ( parent == pointer.parent.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^if  ( pointer.parent == parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^if  ( parent == pointer )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return pointer.compareChildNodePointers ( this, parent ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return parent.compareChildNodePointers ( this ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^p1 = p1.parent.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^p1 = p1;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^p2 = p2.parent.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^p2 = p2;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return compareNodePointers ( this, depth2, pointer, depth1 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return compareNodePointers ( this,  pointer, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return compareNodePointers ( this, depth1, depth2, pointer ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return compareNodePointers ( this, depth1,  depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return compareNodePointers ( this, depth1, pointer ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^return compareNodePointers ( this, pointer, depth1, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[buglab_swap_variables]^if  ( depth2 < depth1 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^else if  ( depth2 > depth1 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( depth1.parent, p1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth2 - 1, p2, depth1 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, p2 - 1, depth1, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1,  depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers (  depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( depth2.parent, depth1 - 1, p2, p1 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( depth1, p1.parent - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p2, depth1 - 1, p1.parent, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p2.parent, depth1 - 1, p1, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p2.parent, depth1, p1, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers (  depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, p2.parent, depth1, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1,  p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth1, p2.parent.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth2, p2.parent, depth1 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth1, p2.parent - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth1,  depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( depth1, p1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1, depth1, p2, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( depth2, depth1 - 1, p2, p1.parent ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1, depth2, p2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p2, depth1, p1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( depth2, depth1, p2.parent, p1 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^if  ( p2 == null && p1 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^if  ( p2 != null && p1.equals ( p1 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p2 + "' and '" + p1 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth2 - 1, p2.parent, depth1 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p2.parent, depth1 - 1, p1.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p2, depth1 - 1, p1.parent.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers (  depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^int r = compareNodePointers ( p1.parent, depth1 - 1,  depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( depth1, p1.parent - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent, depth1 - 1.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent, depth2 - 1, p2.parent, depth1 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p2, depth1 - 1, p1.parent.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers (  depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p2.parent, depth1 - 1, p1.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^compareNodePointers ( p1.parent, depth1 - 1,  depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^return p2.parent.compareChildNodePointers ( p1, p1 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^return p1.parent.compareChildNodePointers (  p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^return p1.parent.compareChildNodePointers ( p1 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^return p2.compareChildNodePointers ( p1, p1.parent ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^return p1.compareChildNodePointers ( p1.parent, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^System.err.println ( pointer + " of " + indent^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^printDeep ( indent.getImmediateParentPointer (  ) , pointer + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[buglab_swap_variables]^printDeep ( pointer.getImmediateParentPointer (  )  + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
