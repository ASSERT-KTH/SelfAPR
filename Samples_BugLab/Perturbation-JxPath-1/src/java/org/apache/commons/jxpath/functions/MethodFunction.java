[buglab_swap_variables]^for  ( parameters.lengthnt i = 1; i < i; i++ )  {^83^^^^^68^98^for  ( int i = 1; i < parameters.length; i++ )  {^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + i - 1] = TypeUtils.convert ( parameters[i], pi[i + types - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + pi - 1] = TypeUtils.convert ( parameters[i], types[i + i - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + types - 1] = TypeUtils.convert ( parameters[i], i[i + pi - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + i - 1] = TypeUtils.convert ( parameters[i][i + pi - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( types[i], parameters[i + pi - 1] ) ;^85^^^^^70^100^TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( parameters[i][i + pi - 1] ) ;^85^^^^^70^100^TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^target = TypeUtils.convert ( method[0], parameters.getDeclaringClass (  )  ) ;^75^76^77^78^^60^90^target = TypeUtils.convert ( parameters[0], method.getDeclaringClass (  )  ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^target = TypeUtils.convert ( parameters[0].getDeclaringClass (  )  ) ;^75^76^77^78^^60^90^target = TypeUtils.convert ( parameters[0], method.getDeclaringClass (  )  ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + i - 1] = TypeUtils.convert ( pi[i], types[i + parameters - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( method[0], parameters.getDeclaringClass (  )  ) ;^76^77^78^^^61^91^TypeUtils.convert ( parameters[0], method.getDeclaringClass (  )  ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( parameters[0].getDeclaringClass (  )  ) ;^76^77^78^^^61^91^TypeUtils.convert ( parameters[0], method.getDeclaringClass (  )  ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[i + pi] = TypeUtils.convert ( parameters[i][i + pi] ) ;^64^65^^^^49^79^args[i + pi] = TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( pi[i], types[i + parameters] ) ;^65^^^^^50^80^TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( parameters[i][i + pi] ) ;^65^^^^^50^80^TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[i + pi] = TypeUtils.convert ( types[i], parameters[i + pi] ) ;^64^65^^^^49^79^args[i + pi] = TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[i + types] = TypeUtils.convert ( parameters[i], pi[i + pi] ) ;^64^65^^^^49^79^args[i + pi] = TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( types[i], parameters[i + pi] ) ;^65^^^^^50^80^TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^if  ( types >= 1 && ExpressionContext.class.isAssignableFrom ( types.length[0] )  )  {^71^72^^^^56^86^if  ( types.length >= 1 && ExpressionContext.class.isAssignableFrom ( types[0] )  )  {^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^for  ( parameters.lengthnt i = 0; i < i; i++ )  {^63^^^^^48^78^for  ( int i = 0; i < parameters.length; i++ )  {^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^for  ( int i = 0; i < parameters.length.length; i++ )  {^63^^^^^48^78^for  ( int i = 0; i < parameters.length; i++ )  {^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + i - 1] = TypeUtils.convert ( types[i], parameters[i + pi - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( pi[i], types[i + parameters - 1] ) ;^85^^^^^70^100^TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^if  ( types.length.length >= 1 && ExpressionContext.class.isAssignableFrom ( types[0] )  )  {^71^72^^^^56^86^if  ( types.length >= 1 && ExpressionContext.class.isAssignableFrom ( types[0] )  )  {^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^if  ( types.length.length >= 1 && ExpressionContext.class.isAssignableFrom ( types[0] )  )  {^55^56^^^^40^70^if  ( types.length >= 1 && ExpressionContext.class.isAssignableFrom ( types[0] )  )  {^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^args[pi + parameters - 1] = TypeUtils.convert ( i[i], types[i + pi - 1] ) ;^84^85^^^^69^99^args[pi + i - 1] = TypeUtils.convert ( parameters[i], types[i + pi - 1] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^return target.invoke ( method, args ) ;^89^^^^^74^104^return method.invoke ( target, args ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^return method.invoke (  args ) ;^89^^^^^74^104^return method.invoke ( target, args ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^return method.invoke ( args, target ) ;^89^^^^^74^104^return method.invoke ( target, args ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^return method.invoke ( target ) ;^89^^^^^74^104^return method.invoke ( target, args ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^return args.invoke ( target, method ) ;^89^^^^^74^104^return method.invoke ( target, args ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^TypeUtils.convert ( parameters[i], pi[i + types] ) ;^65^^^^^50^80^TypeUtils.convert ( parameters[i], types[i + pi] ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^throw new JXPathInvalidAccessException ( "Cannot invoke " + ex, method ) ;^95^96^^^^80^110^throw new JXPathInvalidAccessException ( "Cannot invoke " + method, ex ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^throw new JXPathInvalidAccessException ( "Cannot invoke " + method ) ;^95^96^^^^80^110^throw new JXPathInvalidAccessException ( "Cannot invoke " + method, ex ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
[buglab_swap_variables]^throw new JXPathInvalidAccessException ( "Cannot invoke " +  ex ) ;^95^96^^^^80^110^throw new JXPathInvalidAccessException ( "Cannot invoke " + method, ex ) ;^[CLASS] MethodFunction  [METHOD] invoke [RETURN_TYPE] Object   ExpressionContext context Object[] parameters [VARIABLES] Class[]  types  boolean  ExpressionContext  context  Throwable  ex  Object  target  Method  method  Object[]  EMPTY_ARRAY  args  parameters  int  i  pi  
