[buglab_swap_variables]^for  ( int i = 0; i < args; i++ )  {^79^^^^^75^92^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^parameters[i] = convert ( context[i].compute ( args )  ) ;^80^^^^^75^92^parameters[i] = convert ( args[i].compute ( context )  ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < args.length.length; i++ )  {^79^^^^^75^92^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^Function function = parameters.getRootContext (  ) .getFunction ( functionName, context ) ;^84^85^^^^75^92^Function function = context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^Function function = context.getRootContext (  ) .getFunction ( parameters, functionName ) ;^84^85^^^^75^92^Function function = context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^Function function = context.getRootContext (  ) .getFunction ( functionName ) ;^84^85^^^^75^92^Function function = context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^Function function = context.getRootContext (  ) .getFunction (  parameters ) ;^84^85^^^^75^92^Function function = context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^context.getRootContext (  ) .getFunction ( functionName ) ;^85^^^^^75^92^context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^context.getRootContext (  ) .getFunction ( parameters, functionName ) ;^85^^^^^75^92^context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^context.getRootContext (  ) .getFunction (  parameters ) ;^85^^^^^75^92^context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^throw new JXPathFunctionNotFoundException ( "No such function: " + parameters + Arrays.asList ( functionName )  ) ;^87^88^^^^75^92^throw new JXPathFunctionNotFoundException ( "No such function: " + functionName + Arrays.asList ( parameters )  ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^return parameters.invoke ( context, function ) ;^91^^^^^75^92^return function.invoke ( context, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^return context.invoke ( function, parameters ) ;^91^^^^^75^92^return function.invoke ( context, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^return function.invoke (  parameters ) ;^91^^^^^75^92^return function.invoke ( context, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^return function.invoke ( parameters, context ) ;^91^^^^^75^92^return function.invoke ( context, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
[buglab_swap_variables]^return function.invoke ( context ) ;^91^^^^^75^92^return function.invoke ( context, parameters ) ;^[CLASS] ExtensionFunction  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  Function  function  boolean  QName  functionName  Object[]  parameters  int  i  
