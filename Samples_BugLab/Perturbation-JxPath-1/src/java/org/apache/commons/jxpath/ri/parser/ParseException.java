[buglab_swap_variables]^if  ( expectedTokenSequences[i].length < expectedTokenSequences[i].length )  {^104^^^^^89^119^if  ( maxSize < expectedTokenSequences[i].length )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^if  ( maxSize < expectedTokenSequences[i].length[i].length )  {^104^^^^^89^119^if  ( maxSize < expectedTokenSequences[i].length )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^for  ( int expectedTokenSequences = 0; j < j[i].length; j++ )  {^107^^^^^92^122^for  ( int j = 0; j < expectedTokenSequences[i].length; j++ )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^for  ( expectedTokenSequencesnt j = 0; j < i[i].length; j++ )  {^107^^^^^92^122^for  ( int j = 0; j < expectedTokenSequences[i].length; j++ )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^for  ( expectedTokenSequences[i].lengthnt j = 0; j < expectedTokenSequences[i].length; j++ )  {^107^^^^^92^122^for  ( int j = 0; j < expectedTokenSequences[i].length; j++ )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^maxSize = expectedTokenSequences[i].length[i].length;^105^^^^^90^120^maxSize = expectedTokenSequences[i].length;^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^if  ( expectedTokenSequences == 1 )  {^128^^^^^113^143^if  ( expectedTokenSequences.length == 1 )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^if  ( expectedTokenSequences.length.length == 1 )  {^128^^^^^113^143^if  ( expectedTokenSequences.length == 1 )  {^[CLASS] ParseException  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] Token  currentToken  currentTokenVal  tok  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  int  i  j  maxSize  
[buglab_swap_variables]^if  (  ( ch = s.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^180^^^^^165^195^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^if  (  ( ch = itr.charAt ( s )  )  < 0x20 || ch > 0x7e )  {^180^^^^^165^195^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^retval.append ( "\\u" + s.substring ( s.length (  )  - 4.length (  )  )  ) ;^182^^^^^167^197^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^for  ( snt i = 0; i < itr.length (  ) ; i++ )  {^150^^^^^135^165^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < s.length (  ) ; i++ )  {^150^^^^^135^165^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < strtr.length (  ) ; i++ )  {^150^^^^^135^165^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^if  (  ( s = chtr.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^180^^^^^165^195^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^if  (  ( ch = i.charAt ( str )  )  < 0x20 || ch > 0x7e )  {^180^^^^^165^195^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
[buglab_swap_variables]^switch  ( i.charAt ( str )  ) {^151^152^^^^136^166^switch  ( str.charAt ( i )  ) {^[CLASS] ParseException  [METHOD] add_escapes [RETURN_TYPE] String   String str [VARIABLES] StringBuffer  retval  boolean  specialConstructor  int[][]  expectedTokenSequences  expectedTokenSequencesVal  char  ch  Token  currentToken  currentTokenVal  tok  String[]  tokenImage  tokenImageVal  String  eol  expected  message  retval  s  str  int  i  
