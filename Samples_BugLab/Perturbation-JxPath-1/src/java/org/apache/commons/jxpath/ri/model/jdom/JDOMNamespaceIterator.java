[BugLab_Wrong_Literal]^private int position = -1;^40^^^^^35^45^private int position = 0;^[CLASS] JDOMNamespaceIterator   [VARIABLES] 
[BugLab_Wrong_Operator]^if  ( node  >=  Document )  {^45^^^^^42^53^if  ( node instanceof Document )  {^[CLASS] JDOMNamespaceIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent [VARIABLES] List  namespaces  Object  node  Set  prefixes  NodePointer  parent  boolean  int  position  
[BugLab_Wrong_Operator]^if  ( node  &  Element )  {^48^^^^^42^53^if  ( node instanceof Element )  {^[CLASS] JDOMNamespaceIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent [VARIABLES] List  namespaces  Object  node  Set  prefixes  NodePointer  parent  boolean  int  position  
[BugLab_Wrong_Operator]^if  ( ns != null || !prefixes.contains ( ns.getPrefix (  )  )  )  {^57^^^^^55^73^if  ( ns != null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Operator]^if  ( ns == null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^57^^^^^55^73^if  ( ns != null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Operator]^if  ( ns != null || !prefixes.contains ( ns.getPrefix (  )  )  )  {^64^^^^^55^73^if  ( ns != null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Operator]^if  ( ns == null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^64^^^^^55^73^if  ( ns != null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Variable_Misuse]^for  ( positionnt i = 0; i < others.size (  ) ; i++ )  {^62^^^^^55^73^for  ( int i = 0; i < others.size (  ) ; i++ )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < namespaces.size (  ) ; i++ )  {^62^^^^^55^73^for  ( int i = 0; i < others.size (  ) ; i++ )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Argument_Swapping]^for  ( othersnt i = 0; i < i.size (  ) ; i++ )  {^62^^^^^55^73^for  ( int i = 0; i < others.size (  ) ; i++ )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= others.size (  ) ; i++ )  {^62^^^^^55^73^for  ( int i = 0; i < others.size (  ) ; i++ )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Literal]^for  ( int i = i; i < others.size (  ) ; i++ )  {^62^^^^^55^73^for  ( int i = 0; i < others.size (  ) ; i++ )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Variable_Misuse]^ns =  ( Namespace )  namespaces.get ( i ) ;^63^^^^^55^73^ns =  ( Namespace )  others.get ( i ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Variable_Misuse]^ns =  ( Namespace )  others.get ( position ) ;^63^^^^^55^73^ns =  ( Namespace )  others.get ( i ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Argument_Swapping]^ns =  ( Namespace )  i.get ( others ) ;^63^^^^^55^73^ns =  ( Namespace )  others.get ( i ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Literal]^for  ( int i = position; i < others.size (  ) ; i++ )  {^62^^^^^55^73^for  ( int i = 0; i < others.size (  ) ; i++ )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Wrong_Operator]^if  ( parent  ==  Element )  {^70^^^^^55^73^if  ( parent instanceof Element )  {^[CLASS] JDOMNamespaceIterator  [METHOD] collectNamespaces [RETURN_TYPE] void   Element element [VARIABLES] Set  prefixes  boolean  Element  element  List  namespaces  others  Object  parent  NodePointer  parent  int  i  position  Namespace  ns  
[BugLab_Variable_Misuse]^if  ( index == 0 )  {^76^^^^^75^88^if  ( position == 0 )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Operator]^if  ( position < 0 )  {^76^^^^^75^88^if  ( position == 0 )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^if  ( position == -1 )  {^76^^^^^75^88^if  ( position == 0 )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^if  ( !setPosition ( index )  )  {^77^^^^^75^88^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^position = -1;^80^^^^^75^88^position = 0;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 0 )  )  {^77^^^^^75^88^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Variable_Misuse]^int index = i - 1;^82^^^^^75^88^int index = position - 1;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Operator]^int index = position  <  1;^82^^^^^75^88^int index = position - 1;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^int index = position - position;^82^^^^^75^88^int index = position - 1;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Operator]^if  ( index > 0 )  {^83^^^^^75^88^if  ( index < 0 )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^if  ( index < -1 )  {^83^^^^^75^88^if  ( index < 0 )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^if  ( index < index )  {^83^^^^^75^88^if  ( index < 0 )  {^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^index = -1;^84^^^^^75^88^index = 0;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Wrong_Literal]^index = i;^84^^^^^75^88^index = 0;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Variable_Misuse]^Namespace ns =  ( Namespace )  namespaces.get ( position ) ;^86^^^^^75^88^Namespace ns =  ( Namespace )  namespaces.get ( index ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Variable_Misuse]^Namespace ns =  ( Namespace )  others.get ( index ) ;^86^^^^^75^88^Namespace ns =  ( Namespace )  namespaces.get ( index ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Argument_Swapping]^Namespace ns =  ( Namespace )  index.get ( namespaces ) ;^86^^^^^75^88^Namespace ns =  ( Namespace )  namespaces.get ( index ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Argument_Swapping]^return new JDOMNamespacePointer ( ns, parent.getPrefix (  ) , ns.getURI (  )  ) ;^87^^^^^75^88^return new JDOMNamespacePointer ( parent, ns.getPrefix (  ) , ns.getURI (  )  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  Namespace  ns  
[BugLab_Variable_Misuse]^return index;^91^^^^^90^92^return position;^[CLASS] JDOMNamespaceIterator  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Variable_Misuse]^if  ( others == null )  {^95^^^^^94^100^if  ( namespaces == null )  {^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Wrong_Operator]^if  ( namespaces != null )  {^95^^^^^94^100^if  ( namespaces == null )  {^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Wrong_Literal]^return true;^96^^^^^94^100^return false;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Variable_Misuse]^this.position = index;^98^^^^^94^100^this.position = position;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Variable_Misuse]^return index >= 1 && position <= namespaces.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Variable_Misuse]^return position >= 1 && position <= others.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Argument_Swapping]^return namespaces >= 1 && position <= position.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Wrong_Operator]^return position >= 1 || position <= namespaces.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Wrong_Operator]^return position > 1 && position <= namespaces.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Wrong_Operator]^return position >= 1 && position < namespaces.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
[BugLab_Wrong_Literal]^return position >=  && position <= namespaces.size (  ) ;^99^^^^^94^100^return position >= 1 && position <= namespaces.size (  ) ;^[CLASS] JDOMNamespaceIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  namespaces  others  Set  prefixes  NodePointer  parent  boolean  int  i  index  position  
