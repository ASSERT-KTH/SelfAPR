[buglab_swap_variables]^Object candidates = namespace.get ( byNamespace ) ;^77^^^^^73^99^Object candidates = byNamespace.get ( namespace ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^for  ( countnt i = 0; i < i; i++ )  {^87^^^^^73^99^for  ( int i = 0; i < count; i++ )  {^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  i.get ( list )  ) .getFunction ( namespace, name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  list.get ( name )  ) .getFunction ( ispace, name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  list.get ( namespace )  ) .getFunction ( i, name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  list.get ( i )  ) .getFunction (  name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  name.get ( i )  ) .getFunction ( listspace, name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( parameters )  ) .getFunction ( namespace, name, i ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction ( name, namespace, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction (  name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction ( namespacespace, name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace,  parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction ( parametersspace, name, name ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  i.get ( list )  ) .getFunction ( namespace, name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  name.get ( i )  ) .getFunction ( listspace, name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  namespace.get ( i )  ) .getFunction ( list, name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespacespace, name,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( namespace )  ) .getFunction ( i, name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( name )  ) .getFunction ( ispace, name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  parameters.get ( i )  ) .getFunction ( namespace, name, list ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( name, namespace,^88^89^90^91^^73^99^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction ( parameters, name, namespace ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction (  name, parameters ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction ( namespacespace, name, parameters ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction ( namespace,  parameters ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction ( namespace, name ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction ( name, namespace, parameters ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^return  (  ( Functions )  candidates ) .getFunction ( parametersspace, name, name ) ;^79^80^81^82^^73^99^return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  namespace.get ( i )  ) .getFunction ( list, name, parameters ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^(  ( Functions )  list.get ( i )  ) .getFunction ( parameters, name, namespace ) ;^89^90^91^92^^73^99^(  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name, parameters ) ;^[CLASS] FunctionLibrary  [METHOD] getFunction [RETURN_TYPE] Function   String namespace String name Object[] parameters [VARIABLES] Function  function  boolean  HashMap  byNamespace  List  allFunctions  list  Object  candidates  String  name  namespace  Object[]  parameters  int  count  i  
[buglab_swap_variables]^byNamespace.put ( lst, ns ) ;^117^^^^^101^124^byNamespace.put ( ns, lst ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^byNamespace.put (  lst ) ;^117^^^^^101^124^byNamespace.put ( ns, lst ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^byNamespace.put ( ns ) ;^117^^^^^101^124^byNamespace.put ( ns, lst ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^byNamespace.put (  funcs ) ;^111^^^^^101^124^byNamespace.put ( ns, funcs ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^byNamespace.put ( funcs, ns ) ;^111^^^^^101^124^byNamespace.put ( ns, funcs ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^byNamespace.put ( ns ) ;^111^^^^^101^124^byNamespace.put ( ns, funcs ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^for  ( countnt i = 0; i < i; i++ )  {^104^^^^^101^124^for  ( int i = 0; i < count; i++ )  {^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^Object candidates = ns.get ( byNamespace ) ;^109^^^^^101^124^Object candidates = byNamespace.get ( ns ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
[buglab_swap_variables]^Functions funcs =  ( Functions )  i.get ( allFunctions ) ;^105^^^^^101^124^Functions funcs =  ( Functions )  allFunctions.get ( i ) ;^[CLASS] FunctionLibrary  [METHOD] prepareCache [RETURN_TYPE] void   [VARIABLES] Set  namespaces  boolean  HashMap  byNamespace  Iterator  it  List  allFunctions  list  lst  Functions  funcs  Object  candidates  String  ns  int  count  i  
