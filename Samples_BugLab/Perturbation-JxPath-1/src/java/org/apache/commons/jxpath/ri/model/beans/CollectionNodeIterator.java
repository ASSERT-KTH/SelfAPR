[BugLab_Wrong_Operator]^if  ( collection != null )  {^61^^^^^60^70^if  ( collection == null )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Argument_Swapping]^if  ( collection < 1 || position > position.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^if  ( position < 1 && position > collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^if  ( position <= 1 || position > collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^if  ( position < 1 || position < collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^return true;^66^^^^^60^70^return false;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^return false;^69^^^^^60^70^return true;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^if  ( position != 0 )  {^73^^^^^72^77^if  ( position == 0 )  {^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^if  ( position == 1 )  {^73^^^^^72^77^if  ( position == 0 )  {^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Argument_Swapping]^return  ( NodePointer )  position.get ( collection - 1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^return  ( NodePointer )  collection.get ( position  ==  1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^return  ( NodePointer )  collection.get ( position - position ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^return  ( NodePointer )  collection.get ( position  &&  1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^return  ( NodePointer )  collection.get ( position  ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^int length = startWith.getLength (  ) ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^collection.add ( startWith ) ;^94^^^^^90^95^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^collection.add ( 0, startWith ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.add ( -1, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^for  ( lengthnt i = 0; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < position; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Argument_Swapping]^for  ( lengthnt i = 0; i < i; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int i = index; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.add ( index, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^for  ( int position = 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int j = position; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.add ( 1, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^collection.add ( startWith ) ;^94^^^^^79^109^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^NodePointer elementPointer = startWith.getValuePointer (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^NodeIterator iter = getElementNodeIterator ( startWith ) ;^86^^^^^71^101^NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int j = 2; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^ptr.setIndex ( position ) ;^84^^^^^69^99^ptr.setIndex ( i ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Argument_Swapping]^for  ( int iter = 1; j.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int j = index; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.add ( length, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int i = i; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^for  ( int j = length; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^for  ( int length = 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.add ( j, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^while  ( collection.size (  )  > position )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Argument_Swapping]^while  ( index.size (  )  > collection )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^while  ( collection.size (  )  < index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( j ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^collection.remove ( collection.size (  )   ||  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( collection.size (  )   ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^collection.remove ( collection.size (  )   <<  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( collection.size (  )  - index ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( i ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^if  ( ptr != null )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^if  ( startWith == null )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^while  ( collection.size (  )  >= index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( collection.size (  )  - position ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( collection.size (  )  - j ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^if  ( length == -1 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^if  ( index != -1 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^if  ( index == -0 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^throw new JXPathException ( "Invalid starting pointer for iterator: " + ptr ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  ||  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  &  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( length ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( collection.size (  )  - length ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  >>  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Variable_Misuse]^int index = collection.indexOf ( ptr ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Argument_Swapping]^int index = startWith.indexOf ( collection ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  !=  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^collection.remove ( collection.size (  )   &&  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^collection.remove ( length ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Literal]^if  ( index == -i )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  >=  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "   instanceof   startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^collection.remove ( collection.size (  )   <  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  ==  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  <=  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
