[BugLab_Variable_Misuse]^this.startFromParentLocation = reverse;^46^^^^^38^48^this.startFromParentLocation = startFromParentLocation;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^this.reverse = startFromParentLocation;^47^^^^^38^48^this.reverse = reverse;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^if  ( 4 == 0 )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( position != 0 )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 0 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 3 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^if  ( !setPosition (  )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( iterator == null )  {^56^^^^^50^62^if  ( iterator != null )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( iterator != null )  {^75^^^^^71^87^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( pointer == null )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^if  ( null == 0 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( position <= 0 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( position >= 0 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^if  ( position == -1 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^return setPosition ( getCurrentPosition (  )   <<  1 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^return setPosition ( getCurrentPosition (  )   ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^return setPosition ( getCurrentPosition (  )   &&  1 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( oldPosition != 0 )  {^101^^^^^98^108^if  ( oldPosition == 0 )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[BugLab_Wrong_Operator]^if  ( iterator != null )  {^104^^^^^98^108^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[BugLab_Wrong_Literal]^return true;^105^^^^^98^108^return false;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[BugLab_Variable_Misuse]^return iterator.setPosition ( oldPosition ) ;^107^^^^^98^108^return iterator.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[BugLab_Argument_Swapping]^return position.setPosition ( iterator ) ;^107^^^^^98^108^return iterator.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[BugLab_Variable_Misuse]^if  ( pointer == null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( parent != null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^if  ( reverse )  {^118^^^^^113^125^if  ( startFromParentLocation )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^iterator = pointer.childIterator ( nodeTest, reverse, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^iterator = parent.childIterator ( nodeTest, startFromParentLocation, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = reverse.childIterator ( nodeTest, parent, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = nodeTest.childIterator ( parent, reverse, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = parent.childIterator ( reverse, nodeTest, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^iterator = pointer.childIterator ( nodeTest, startFromParentLocation, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = parent.childIterator ( nodeTest, reverse, pointer ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = nodeTest.childIterator ( pointer, reverse, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = pointer.childIterator ( nodeTest, parent, reverse ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^NodePointer pointer = pointer.getParent (  ) ;^119^^^^^113^125^NodePointer pointer = parent.getParent (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^iterator = pointer.childIterator ( nodeTest, reverse, pointer ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = reverse.childIterator ( nodeTest, pointer, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = pointer.childIterator ( parent, reverse, nodeTest ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^iterator = pointer.childIterator ( reverse, nodeTest, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^iterator = parent.childIterator ( nodeTest, reverse, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
