[BugLab_Variable_Misuse]^super ( valuePointer ) ;^48^^^^^47^50^super ( parent ) ;^[CLASS] CollectionPointer  [METHOD] <init> [RETURN_TYPE] Object)   NodePointer parent Object collection [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Literal]^return false;^61^^^^^60^62^return true;^[CLASS] CollectionPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^return collection == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^return value == null && JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^return value != null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^|| JXPathIntrospector.getBeanInfo ( collection.getClass (  )  ) .isAtomic (  ) ;^71^^^^^68^72^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^return WHOLE_COLLECTION != index;^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^return index == WHOLE_COLLECTION;^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION != index )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index == WHOLE_COLLECTION )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^return ValueUtils.getValue ( value ) ;^83^^^^^78^85^return ValueUtils.getValue ( collection ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^return ValueUtils.getValue ( value, index ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^return ValueUtils.getValue ( index, collection ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index > WHOLE_COLLECTION )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^ValueUtils.setValue ( collection, value, index ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^ValueUtils.setValue ( value, index, collection ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^ValueUtils.setValue ( index, collection, value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^parent.setValue ( collection ) ;^89^^^^^87^94^parent.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( collectionPointer == null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( value == null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( valuePointer != null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , collection ) ;^108^109^^^^101^113^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^NodePointer.newChildNodePointer ( this, getName (  ) , collection ) ;^109^^^^^101^113^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( ValueUtils.getLength ( value )  <= index )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Argument_Swapping]^if  ( ValueUtils.getLength ( index )  <= collection )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Wrong_Operator]^if  ( ValueUtils.getLength ( collection )  < index )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Wrong_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  <<  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Wrong_Literal]^collection = ValueUtils.expandCollection ( getNode (  ) , index  ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Wrong_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  >  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Variable_Misuse]^collection = ValueUtils.expandCollection ( getNode (  ) , 2 + 1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Wrong_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  <  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Variable_Misuse]^collection = ValueUtils.expandCollection ( getNode (  ) , 0 + 1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Wrong_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  >=  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[BugLab_Variable_Misuse]^ptr.setValue ( collection ) ;^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[BugLab_Variable_Misuse]^return valuePointer;^126^^^^^123^127^return ptr;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[BugLab_Variable_Misuse]^return valuePointer.createPath ( context, value ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Variable_Misuse]^return ptr.createPath ( context, collection ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Argument_Swapping]^return value.createPath ( context, ptr ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Argument_Swapping]^return ptr.createPath ( value, context ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Argument_Swapping]^return context.createPath ( ptr, value ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Variable_Misuse]^return valuePointer.createPath ( context ) ;^147^^^^^140^148^return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Argument_Swapping]^return context.createPath ( ptr ) ;^147^^^^^140^148^return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[BugLab_Variable_Misuse]^return System.identityHashCode ( value )  + index;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[BugLab_Argument_Swapping]^return System.identityHashCode ( index )  + collection;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[BugLab_Wrong_Operator]^return System.identityHashCode ( collection )  <<  + index;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( value == this )  {^155^^^^^154^165^if  ( object == this )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Wrong_Operator]^if  ( object != this )  {^155^^^^^154^165^if  ( object == this )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Wrong_Literal]^return false;^156^^^^^154^165^return true;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Variable_Misuse]^if  ( ! ( value instanceof CollectionPointer )  )  {^159^^^^^154^165^if  ( ! ( object instanceof CollectionPointer )  )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Wrong_Operator]^if  ( ! ( object  !=  CollectionPointer )  )  {^159^^^^^154^165^if  ( ! ( object instanceof CollectionPointer )  )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Wrong_Literal]^return true;^160^^^^^154^165^return false;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Wrong_Operator]^return collection == other.collection || index == other.index;^164^^^^^154^165^return collection == other.collection && index == other.index;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Wrong_Operator]^return collection != other.collection && index == other.index;^164^^^^^154^165^return collection == other.collection && index == other.index;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^170^^^^^167^180^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^170^^^^^167^180^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Variable_Misuse]^return getValuePointer (  ) .childIterator ( test, reverse, valuePointer ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Argument_Swapping]^return getValuePointer (  ) .childIterator ( startWith, reverse, test ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Argument_Swapping]^return getValuePointer (  ) .childIterator ( reverse, test, startWith ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Argument_Swapping]^return getValuePointer (  ) .childIterator ( test, startWith, reverse ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Argument_Swapping]^return new CollectionChildNodeIterator ( this, reverse, test,^171^172^173^174^^167^180^return new CollectionChildNodeIterator ( this, test, reverse,^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^190^^^^^189^194^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index <= WHOLE_COLLECTION )  {^190^^^^^189^194^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^197^^^^^196^201^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^197^^^^^196^201^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[BugLab_Wrong_Literal]^return false;^213^^^^^203^219^return true;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[BugLab_Wrong_Literal]^return true;^209^^^^^203^219^return false;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[BugLab_Wrong_Literal]^return false;^206^^^^^203^219^return true;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[BugLab_Wrong_Literal]^return true;^216^^^^^203^219^return false;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[BugLab_Variable_Misuse]^return valuePointer.getIndex (  )  - pointer2.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^return pointer1.getIndex (  )  - valuePointer.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Argument_Swapping]^return pointer2.getIndex (  )  - pointer1.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^return pointer1.getIndex (  )   ==  pointer2.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( startWith != null )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION != index )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index <= WHOLE_COLLECTION )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index  !=  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Literal]^buffer.append ( "/.[" ) .append ( index  ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^buffer.append ( "/.[" ) .append ( 4 + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index  >>  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^buffer.append ( "/.[" ) .append ( 1 + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index   instanceof   1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index  >=  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION != index )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index < WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index <= WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( startWith.getIndex (  )  != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION.getIndex (  )  != parent )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( parent.getIndex (  )  == WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( valuePointer.getIndex (  )  != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "[" ) .append ( index  <<  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Literal]^buffer.append ( "[" ) .append ( index + 0 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "[" ) .append ( index  >=  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Literal]^buffer.append ( "[" ) .append ( index  ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( parent.getIndex (  )  >= WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^buffer.append ( startWith.asPath (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "[" ) .append ( index  >>  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^if  ( index != null )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index == WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "[" ) .append ( index  &  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "[" ) .append ( index  |  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^if  ( index == WHOLE_COLLECTION )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index  &&  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index  <=  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Variable_Misuse]^buffer.append ( valuePointer.asPath (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[BugLab_Wrong_Operator]^buffer.append ( "/.[" ) .append ( index  <  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
