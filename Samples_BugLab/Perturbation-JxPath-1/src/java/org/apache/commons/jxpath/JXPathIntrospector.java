[buglab_swap_variables]^byClass.put (  new JXPathBasicBeanInfo ( beanClass, true )  ) ;^67^^^^^66^68^byClass.put ( beanClass, new JXPathBasicBeanInfo ( beanClass, true )  ) ;^[CLASS] JXPathIntrospector  [METHOD] registerAtomicClass [RETURN_TYPE] void   Class beanClass [VARIABLES] HashMap  byClass  byInterface  Class  beanClass  boolean  
[buglab_swap_variables]^new JXPathBasicBeanInfo ( dynamicPropertyHandlerClass, beanClass ) ;^79^^^^^74^86^new JXPathBasicBeanInfo ( beanClass, dynamicPropertyHandlerClass ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^new JXPathBasicBeanInfo (  dynamicPropertyHandlerClass ) ;^79^^^^^74^86^new JXPathBasicBeanInfo ( beanClass, dynamicPropertyHandlerClass ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^new JXPathBasicBeanInfo ( beanClass ) ;^79^^^^^74^86^new JXPathBasicBeanInfo ( beanClass, dynamicPropertyHandlerClass ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo ( dynamicPropertyHandlerClass, beanClass ) ;^78^79^^^^74^86^JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo ( beanClass, dynamicPropertyHandlerClass ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo (  dynamicPropertyHandlerClass ) ;^78^79^^^^74^86^JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo ( beanClass, dynamicPropertyHandlerClass ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo ( beanClass ) ;^78^79^^^^74^86^JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo ( beanClass, dynamicPropertyHandlerClass ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byClass.put (  bi ) ;^84^^^^^74^86^byClass.put ( beanClass, bi ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byClass.put ( bi, beanClass ) ;^84^^^^^74^86^byClass.put ( beanClass, bi ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byClass.put ( beanClass ) ;^84^^^^^74^86^byClass.put ( beanClass, bi ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byInterface.put ( bi, beanClass ) ;^81^^^^^74^86^byInterface.put ( beanClass, bi ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byInterface.put (  bi ) ;^81^^^^^74^86^byInterface.put ( beanClass, bi ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byInterface.put ( beanClass ) ;^81^^^^^74^86^byInterface.put ( beanClass, bi ) ;^[CLASS] JXPathIntrospector  [METHOD] registerDynamicClass [RETURN_TYPE] void   Class beanClass Class dynamicPropertyHandlerClass [VARIABLES] Class  beanClass  dynamicPropertyHandlerClass  JXPathBasicBeanInfo  bi  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^JXPathBeanInfo beanInfo =  ( JXPathBeanInfo )  beanClass.get ( byClass ) ;^102^^^^^101^114^JXPathBeanInfo beanInfo =  ( JXPathBeanInfo )  byClass.get ( beanClass ) ;^[CLASS] JXPathIntrospector  [METHOD] getBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byClass.put ( beanInfo, beanClass ) ;^111^^^^^101^114^byClass.put ( beanClass, beanInfo ) ;^[CLASS] JXPathIntrospector  [METHOD] getBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byClass.put (  beanInfo ) ;^111^^^^^101^114^byClass.put ( beanClass, beanInfo ) ;^[CLASS] JXPathIntrospector  [METHOD] getBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^byClass.put ( beanClass ) ;^111^^^^^101^114^byClass.put ( beanClass, beanInfo ) ;^[CLASS] JXPathIntrospector  [METHOD] getBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  boolean  HashMap  byClass  byInterface  
[buglab_swap_variables]^beanInfo =  ( JXPathBeanInfo )  beanClass.get ( byInterface ) ;^123^^^^^120^148^beanInfo =  ( JXPathBeanInfo )  byInterface.get ( beanClass ) ;^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^if  ( i != null )  {^130^^^^^120^148^if  ( interfaces != null )  {^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^for  ( interfaces.lengthnt i = 0; i < i; i++ )  {^131^^^^^120^148^for  ( int i = 0; i < interfaces.length; i++ )  {^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < interfaces.length.length; i++ )  {^131^^^^^120^148^for  ( int i = 0; i < interfaces.length; i++ )  {^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^beanInfo = findDynamicBeanInfo ( i[i] ) ;^132^^^^^120^148^beanInfo = findDynamicBeanInfo ( interfaces[i] ) ;^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^beanInfo = findDynamicBeanInfo ( interfacesnterfaces[i] ) ;^132^^^^^120^148^beanInfo = findDynamicBeanInfo ( interfaces[i] ) ;^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^for  ( interfacesnt i = 0; i < i.length; i++ )  {^131^^^^^120^148^for  ( int i = 0; i < interfaces.length; i++ )  {^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^beanInfo =  ( JXPathBeanInfo )  sup.get ( byClass ) ;^141^^^^^120^148^beanInfo =  ( JXPathBeanInfo )  byClass.get ( sup ) ;^[CLASS] JXPathIntrospector  [METHOD] findDynamicBeanInfo [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] JXPathBeanInfo  beanInfo  Class  beanClass  sup  Class[]  interfaces  boolean  HashMap  byClass  byInterface  int  i  
[buglab_swap_variables]^return  ( JXPathBeanInfo )  instantiate ( name, beanClass ) ;^153^^^^^150^170^return  ( JXPathBeanInfo )  instantiate ( beanClass, name ) ;^[CLASS] JXPathIntrospector  [METHOD] findInformant [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] Class  beanClass  String  name  boolean  HashMap  byClass  byInterface  Exception  ex  
[buglab_swap_variables]^return  ( JXPathBeanInfo )  instantiate (  name ) ;^153^^^^^150^170^return  ( JXPathBeanInfo )  instantiate ( beanClass, name ) ;^[CLASS] JXPathIntrospector  [METHOD] findInformant [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] Class  beanClass  String  name  boolean  HashMap  byClass  byInterface  Exception  ex  
[buglab_swap_variables]^return  ( JXPathBeanInfo )  instantiate ( beanClass ) ;^153^^^^^150^170^return  ( JXPathBeanInfo )  instantiate ( beanClass, name ) ;^[CLASS] JXPathIntrospector  [METHOD] findInformant [RETURN_TYPE] JXPathBeanInfo   Class beanClass [VARIABLES] Class  beanClass  String  name  boolean  HashMap  byClass  byInterface  Exception  ex  
[buglab_swap_variables]^Class classNames = cl.loadClass ( cl ) ;^185^^^^^177^196^Class cls = cl.loadClass ( className ) ;^[CLASS] JXPathIntrospector  [METHOD] instantiate [RETURN_TYPE] Object   Class sibling String className [VARIABLES] ClassLoader  cl  Class  cls  sibling  String  className  boolean  HashMap  byClass  byInterface  Exception  ex  
