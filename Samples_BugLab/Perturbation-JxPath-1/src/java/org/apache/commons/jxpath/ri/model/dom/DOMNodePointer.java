[buglab_swap_variables]^return nodeNode ( test, test ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[buglab_swap_variables]^return testNode ( node ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[buglab_swap_variables]^return testNode (  test ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[buglab_swap_variables]^return nodePI.equals ( testPI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^if  ( testPrefix && wildcard == null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^if  ( testName || wildcard.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^return equalStrings ( nodeNS, namespaceURI ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^return equalStrings (  nodeNS ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^return equalStrings ( namespaceURI ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^return equalStrings ( nodeNS, namespaceURI ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^return equalStrings (  nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^return equalStrings ( namespaceURI ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^|| node.getName (  ) .equals ( DOMNodePointer.getLocalName ( testName )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^if  ( wildcard || node.getName (  ) .equals ( DOMNodePointer.getLocalName ( testName )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^if  ( node || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( wildcard )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[buglab_swap_variables]^if  ( s2 != null && !s1.trim (  ) .equals ( s1.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[buglab_swap_variables]^return new QName ( ln, ns ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[buglab_swap_variables]^return new QName (  ln ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[buglab_swap_variables]^return new QName ( ns ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[buglab_swap_variables]^return new DOMNodeIterator ( this, reverse, test, startWith ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[buglab_swap_variables]^return new DOMNodeIterator ( this,  reverse, startWith ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[buglab_swap_variables]^return new DOMNodeIterator ( this, test,  startWith ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[buglab_swap_variables]^return new DOMNodeIterator ( this, startWith, reverse, test ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[buglab_swap_variables]^return new DOMNodeIterator ( this, test, reverse ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[buglab_swap_variables]^return new DOMNodeIterator ( this, test, startWith, reverse ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[buglab_swap_variables]^namespace =  ( String )  prefix.get ( namespaces ) ;^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[buglab_swap_variables]^namespace =  ( String )  prefix.get ( namespaces ) ;^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[buglab_swap_variables]^namespaces.put ( namespace, prefix ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[buglab_swap_variables]^namespaces.put (  namespace ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[buglab_swap_variables]^namespaces.put ( prefix ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[buglab_swap_variables]^if  ( UNKNOWN_NAMESPACE == namespace )  {^235^^^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[buglab_swap_variables]^return lang.toUpperCase (  ) .startsWith ( current.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[buglab_swap_variables]^Node textNode = string.getOwnerDocument (  ) .createTextNode ( node ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^String string =  ( String )  TypeUtils.convert (  String.class ) ;^359^^^^^344^365^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^if  ( i valueNodenstanceof Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( childrennt i = 0; i < i.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( int i = 0; i < child.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^Node child = i.item ( children ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( childrennt i = 0; i < i.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^Node child = i.item ( children ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^Node textNode = string.getOwnerDocument (  ) .createTextNode ( node ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( countnt i = i; --i >= 0; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^Node child = i.item ( children ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( childnt i = 0; i < iren.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( int i = 0; i < child.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^String string =  ( String )  TypeUtils.convert (  String.class ) ;^359^^^^^344^374^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^String string =  ( String )  TypeUtils.convert (  String.class ) ;^328^^^^^313^343^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^for  ( childnt i = 0; i < iren.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION == index )  {^374^^^^^373^400^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^boolean success = getAbstractFactory ( context ) .createObject (  this,^377^378^379^380^^373^400^boolean success = getAbstractFactory ( context ) .createObject ( context, this,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^getAbstractFactory ( node ) .createObject ( context, this, context,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^getAbstractFactory ( context ) .createObject (  this, node,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^getAbstractFactory ( context ) .createObject ( context, this,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^if  ( index != null && it.setPosition ( it + 1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^nodeTest = new NodeNameTest ( namespaceURI, name ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^nodeTest = new NodeNameTest (  namespaceURI ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^nodeTest = new NodeNameTest ( name ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^String namespaceURI = context != null ? prefix.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^? prefix.getNamespaceURI ( context ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + index + "[" +  ( name + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[buglab_swap_variables]^NodePointer ptr = createChild ( name, context, index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[buglab_swap_variables]^NodePointer ptr = createChild (  name, index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[buglab_swap_variables]^NodePointer ptr = createChild ( context,  index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[buglab_swap_variables]^NodePointer ptr = createChild ( index, name, context ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[buglab_swap_variables]^NodePointer ptr = createChild ( context, name ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[buglab_swap_variables]^NodePointer ptr = createChild ( context, index, name ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[buglab_swap_variables]^element.setAttributeNS ( name, ns.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^element.setAttributeNS (  name.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^element.setAttributeNS ( ns.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^if  ( equalStrings (  getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string = index.substring ( 0, string ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string = string.substring ( 0 ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string.substring ( 0, string ) + "&apos;" + index.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string.substring ( 0 ) + "&apos;" + string.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^+ index.substring ( string + 1 ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string = index.substring ( 0, string ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string = string.substring ( 0 ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string.substring ( 0, string ) + "&quot;" + index.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^string.substring ( 0 ) + "&quot;" + string.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^+ index.substring ( string + 1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^if  ( node.equals ( nm.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^if  ( target.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( n )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^return other == node.node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[buglab_swap_variables]^return other.node == node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[buglab_swap_variables]^return index.substring ( 0, name ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^return name.substring ( 0 ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^return index.substring ( name + 1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[buglab_swap_variables]^for  ( listnt i = 0; i < i.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^Node child = i.item ( list ) ;^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^for  ( listnt i = 0; i < i.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^Node child = i.item ( list ) ;^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^else nodeTypef  ( i == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^else nodef  ( iType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^else nodef  ( iType == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[buglab_swap_variables]^Element element = id.getElementById ( document ) ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^return new DOMNodePointer ( id, getLocale (  ) , element ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^return new DOMNodePointer (  getLocale (  ) , id ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^return new DOMNodePointer ( element, getLocale (  )  ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[buglab_swap_variables]^if  ( node2 == node1 )  {^733^^^^^718^748^if  ( node1 == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^if  ( t2 == Node.ATTRIBUTE_NODE && t1 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else t2f  ( t1 != Node.ATTRIBUTE_NODE && i == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else t1f  ( i == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else if  ( node2 == n )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^for  ( lengthnt i = 0; i < i; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^Node n = i.item ( map ) ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^if  ( node1 == n )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else if  ( t2 == Node.ATTRIBUTE_NODE && t1 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else t2f  ( t1 == Node.ATTRIBUTE_NODE && i == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else if  ( t2 != Node.ATTRIBUTE_NODE && t1 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^if  ( node1 == current )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[buglab_swap_variables]^else if  ( node2 == current )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
