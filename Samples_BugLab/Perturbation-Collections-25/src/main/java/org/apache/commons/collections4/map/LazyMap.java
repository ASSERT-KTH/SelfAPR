[BugLab_Wrong_Operator]^if  ( factory != null )  {^110^^^^^108^114^if  ( factory == null )  {^[CLASS] LazyMap  [METHOD] <init> [RETURN_TYPE] Factory)   Map<K, V> map Factory<? extends V> factory [VARIABLES] Factory  factory  Transformer  factory  boolean  Map  map  long  serialVersionUID  
[BugLab_Variable_Misuse]^super ( null ) ;^124^^^^^123^129^super ( map ) ;^[CLASS] LazyMap  [METHOD] <init> [RETURN_TYPE] Transformer)   Map<K, V> map Transformer<? super K, ? extends V> factory [VARIABLES] Transformer  factory  boolean  Map  map  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( factory != null )  {^125^^^^^123^129^if  ( factory == null )  {^[CLASS] LazyMap  [METHOD] <init> [RETURN_TYPE] Transformer)   Map<K, V> map Transformer<? super K, ? extends V> factory [VARIABLES] Transformer  factory  boolean  Map  map  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new LazyMap<K,V> ( factory, map ) ;^82^^^^^81^83^return new LazyMap<K,V> ( map, factory ) ;^[CLASS] LazyMap  [METHOD] lazyMap [RETURN_TYPE] <K,V>   Map<K, V> map Factory<? extends V> factory [VARIABLES] Factory  factory  Transformer  factory  boolean  Map  map  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new LazyMap<K,V> ( factory, map ) ;^97^^^^^96^98^return new LazyMap<K,V> ( map, factory ) ;^[CLASS] LazyMap  [METHOD] lazyMap [RETURN_TYPE] <V,K>   Map<K, V> map Transformer<? super K, ? extends V> factory [VARIABLES] Transformer  factory  boolean  Map  map  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( key.containsKey ( map )  == false )  {^162^^^^^160^170^if  ( map.containsKey ( key )  == false )  {^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
[BugLab_Wrong_Operator]^if  ( map.containsKey ( key )  != false )  {^162^^^^^160^170^if  ( map.containsKey ( key )  == false )  {^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
[BugLab_Wrong_Literal]^if  ( map.containsKey ( key )  == true )  {^162^^^^^160^170^if  ( map.containsKey ( key )  == false )  {^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^final V value = castKey.transform ( factory ) ;^165^^^^^160^170^final V value = factory.transform ( castKey ) ;^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^map.put ( value, castKey ) ;^166^^^^^160^170^map.put ( castKey, value ) ;^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
[BugLab_Variable_Misuse]^final V value = 0.transform ( castKey ) ;^165^^^^^160^170^final V value = factory.transform ( castKey ) ;^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return key.get ( map ) ;^169^^^^^160^170^return map.get ( key ) ;^[CLASS] LazyMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Transformer  factory  K  castKey  boolean  long  serialVersionUID  V  value  
