[buglab_swap_variables]^super ( setClazz, map ) ;^53^^^^^52^54^super ( map, setClazz ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class)   Map<K, ? super C> map Class<C> setClazz [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  
[buglab_swap_variables]^super (  setClazz ) ;^53^^^^^52^54^super ( map, setClazz ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class)   Map<K, ? super C> map Class<C> setClazz [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  
[buglab_swap_variables]^super ( map ) ;^53^^^^^52^54^super ( map, setClazz ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class)   Map<K, ? super C> map Class<C> setClazz [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  
[buglab_swap_variables]^super ( setClazz, map, initialSetCapacity ) ;^68^^^^^66^69^super ( map, setClazz, initialSetCapacity ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class,int)   Map<K, ? super C> map Class<C> setClazz int initialSetCapacity [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  int  initialSetCapacity  
[buglab_swap_variables]^super (  setClazz, initialSetCapacity ) ;^68^^^^^66^69^super ( map, setClazz, initialSetCapacity ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class,int)   Map<K, ? super C> map Class<C> setClazz int initialSetCapacity [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  int  initialSetCapacity  
[buglab_swap_variables]^super ( map, initialSetCapacity, setClazz ) ;^68^^^^^66^69^super ( map, setClazz, initialSetCapacity ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class,int)   Map<K, ? super C> map Class<C> setClazz int initialSetCapacity [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  int  initialSetCapacity  
[buglab_swap_variables]^super ( map,  initialSetCapacity ) ;^68^^^^^66^69^super ( map, setClazz, initialSetCapacity ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class,int)   Map<K, ? super C> map Class<C> setClazz int initialSetCapacity [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  int  initialSetCapacity  
[buglab_swap_variables]^super ( map, setClazz ) ;^68^^^^^66^69^super ( map, setClazz, initialSetCapacity ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] <init> [RETURN_TYPE] Class,int)   Map<K, ? super C> map Class<C> setClazz int initialSetCapacity [VARIABLES] Class  setClazz  boolean  Map  map  long  serialVersionUID  int  initialSetCapacity  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet ( otherSet, set )  == false )  {^123^^^^^101^128^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] SetValuedMap  other  Iterator  it  Object  key  obj  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet (  otherSet )  == false )  {^123^^^^^101^128^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] SetValuedMap  other  Iterator  it  Object  key  obj  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet ( set )  == false )  {^123^^^^^101^128^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] SetValuedMap  other  Iterator  it  Object  key  obj  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^Set<?> keySet = other.get ( other ) ;^119^^^^^101^128^Set<?> otherSet = other.get ( key ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] SetValuedMap  other  Iterator  it  Object  key  obj  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^h +=  ( valueSet == null ? 0 : key.hashCode (  )  )  ^ SetUtils.hashCodeForSet ( key ) ;^138^^^^^131^141^h +=  ( key == null ? 0 : key.hashCode (  )  )  ^ SetUtils.hashCodeForSet ( valueSet ) ;^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Entry  entry  Set  valueSet  boolean  Iterator  it  K  key  long  serialVersionUID  int  h  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet ( otherSet, set )  == false )  {^166^^^^^154^170^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet (  otherSet )  == false )  {^166^^^^^154^170^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet ( set )  == false )  {^166^^^^^154^170^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] AbstractSetValuedMap WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  Set  otherSet  set  boolean  long  serialVersionUID  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet ( otherSet, set )  == false )  {^166^^^^^154^170^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Set  otherSet  set  boolean  Object  other  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet (  otherSet )  == false )  {^166^^^^^154^170^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Set  otherSet  set  boolean  Object  other  
[buglab_swap_variables]^if  ( SetUtils.isEqualSet ( set )  == false )  {^166^^^^^154^170^if  ( SetUtils.isEqualSet ( set, otherSet )  == false )  {^[CLASS] WrappedSet  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Set  otherSet  set  boolean  Object  other  
