[BugLab_Argument_Swapping]^return EMPTY_MULTI_VALUED_MAP == null ? map : map;^82^^^^^81^83^return map == null ? EMPTY_MULTI_VALUED_MAP : map;^[CLASS] MultiMapUtils  [METHOD] emptyIfNull [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  boolean  
[BugLab_Wrong_Operator]^return map != null ? EMPTY_MULTI_VALUED_MAP : map;^82^^^^^81^83^return map == null ? EMPTY_MULTI_VALUED_MAP : map;^[CLASS] MultiMapUtils  [METHOD] emptyIfNull [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  boolean  
[BugLab_Wrong_Operator]^return map == null && map.isEmpty (  ) ;^94^^^^^93^95^return map == null || map.isEmpty (  ) ;^[CLASS] MultiMapUtils  [METHOD] isEmpty [RETURN_TYPE] boolean   MultiValuedMap<?, ?> map [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  boolean  
[BugLab_Wrong_Operator]^return map != null || map.isEmpty (  ) ;^94^^^^^93^95^return map == null || map.isEmpty (  ) ;^[CLASS] MultiMapUtils  [METHOD] isEmpty [RETURN_TYPE] boolean   MultiValuedMap<?, ?> map [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  boolean  
[BugLab_Wrong_Operator]^if  ( map == null )  {^110^^^^^109^114^if  ( map != null )  {^[CLASS] MultiMapUtils  [METHOD] getCollection [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  K  key  boolean  
[BugLab_Argument_Swapping]^return key.get ( map ) ;^111^^^^^109^114^return map.get ( key ) ;^[CLASS] MultiMapUtils  [METHOD] getCollection [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  K  key  boolean  
[BugLab_Wrong_Operator]^if  ( map == null )  {^129^^^^^128^137^if  ( map != null )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsList [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( col  ||  List )  {^131^^^^^128^137^if  ( col instanceof List )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsList [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Argument_Swapping]^Collection<V> col = key.get ( map ) ;^130^^^^^128^137^Collection<V> col = map.get ( key ) ;^[CLASS] MultiMapUtils  [METHOD] getValuesAsList [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( col  >=  List )  {^131^^^^^128^137^if  ( col instanceof List )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsList [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( map == null )  {^149^^^^^148^157^if  ( map != null )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsSet [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( col  ^  Set )  {^151^^^^^148^157^if  ( col instanceof Set )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsSet [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Variable_Misuse]^return new HashSet<V> ( 3 ) ;^154^^^^^148^157^return new HashSet<V> ( col ) ;^[CLASS] MultiMapUtils  [METHOD] getValuesAsSet [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Argument_Swapping]^Collection<V> col = key.get ( map ) ;^150^^^^^148^157^Collection<V> col = map.get ( key ) ;^[CLASS] MultiMapUtils  [METHOD] getValuesAsSet [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( col  <<  Set )  {^151^^^^^148^157^if  ( col instanceof Set )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsSet [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( map == null )  {^169^^^^^168^177^if  ( map != null )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsBag [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( col  >>  Bag )  {^171^^^^^168^177^if  ( col instanceof Bag )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsBag [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Argument_Swapping]^Collection<V> col = key.get ( map ) ;^170^^^^^168^177^Collection<V> col = map.get ( key ) ;^[CLASS] MultiMapUtils  [METHOD] getValuesAsBag [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Wrong_Operator]^if  ( col  &&  Bag )  {^171^^^^^168^177^if  ( col instanceof Bag )  {^[CLASS] MultiMapUtils  [METHOD] getValuesAsBag [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map final K key [VARIABLES] Collection  col  K  key  boolean  MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  
[BugLab_Variable_Misuse]^return MultiValuedHashMap.<K, V, C>setValuedHashMap ( 2 ) ;^231^^^^^230^232^return MultiValuedHashMap.<K, V, C>setValuedHashMap ( setClass ) ;^[CLASS] MultiMapUtils  [METHOD] newSetValuedHashMap [RETURN_TYPE] <K,V,C   Class<C> setClass [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  Class  setClass  boolean  
[BugLab_Argument_Swapping]^return TransformedMultiValuedMap.transformingMap ( valueTransformer, keyTransformer, map ) ;^278^^^^^275^279^return TransformedMultiValuedMap.transformingMap ( map, keyTransformer, valueTransformer ) ;^[CLASS] MultiMapUtils  [METHOD] transformedMultiValuedMap [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map Transformer<? super K, ? extends K> keyTransformer Transformer<? super V, ? extends V> valueTransformer [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  Transformer  keyTransformer  valueTransformer  boolean  
[BugLab_Argument_Swapping]^return TransformedMultiValuedMap.transformingMap ( map, valueTransformer, keyTransformer ) ;^278^^^^^275^279^return TransformedMultiValuedMap.transformingMap ( map, keyTransformer, valueTransformer ) ;^[CLASS] MultiMapUtils  [METHOD] transformedMultiValuedMap [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map Transformer<? super K, ? extends K> keyTransformer Transformer<? super V, ? extends V> valueTransformer [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  Transformer  keyTransformer  valueTransformer  boolean  
[BugLab_Variable_Misuse]^return TransformedMultiValuedMap.transformingMap ( map, keyTransformer, 2 ) ;^278^^^^^275^279^return TransformedMultiValuedMap.transformingMap ( map, keyTransformer, valueTransformer ) ;^[CLASS] MultiMapUtils  [METHOD] transformedMultiValuedMap [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map Transformer<? super K, ? extends K> keyTransformer Transformer<? super V, ? extends V> valueTransformer [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  Transformer  keyTransformer  valueTransformer  boolean  
[BugLab_Argument_Swapping]^return TransformedMultiValuedMap.transformingMap ( keyTransformer, map, valueTransformer ) ;^278^^^^^275^279^return TransformedMultiValuedMap.transformingMap ( map, keyTransformer, valueTransformer ) ;^[CLASS] MultiMapUtils  [METHOD] transformedMultiValuedMap [RETURN_TYPE] <K,V>   MultiValuedMap<K, V> map Transformer<? super K, ? extends K> keyTransformer Transformer<? super V, ? extends V> valueTransformer [VARIABLES] MultiValuedMap  EMPTY_MULTI_VALUED_MAP  map  Transformer  keyTransformer  valueTransformer  boolean  
