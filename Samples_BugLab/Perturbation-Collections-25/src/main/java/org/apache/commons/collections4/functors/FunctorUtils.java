[BugLab_Wrong_Operator]^if  ( predicates != null )  {^50^^^^^49^54^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <T>    predicates [VARIABLES] boolean  Predicate[]  predicates  
[BugLab_Variable_Misuse]^if  ( 0 == null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^if  ( predicates != null )  {^79^^^^^78^88^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^if  ( predicates[i] != null )  {^83^^^^^78^88^if  ( predicates[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  ^  i  ^  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  >=  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  ||  i  ||  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "   instanceof   i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < predicates.length; i++ )  {^82^^^^^78^88^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "   instanceof   i   instanceof   " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  |  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  >  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  |  i  |  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  ==  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  ^  i + " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index "  &&  i  &&  " was null" ) ;^84^85^^^^78^88^throw new IllegalArgumentException ( "The predicate array must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    predicates [VARIABLES] boolean  Predicate[]  predicates  int  i  
[BugLab_Wrong_Operator]^if  ( predicates != null )  {^97^^^^^96^113^if  ( predicates == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Literal]^int i = i;^103^^^^^96^113^int i = 0;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^if  ( preds[i] != null )  {^106^^^^^96^113^if  ( preds[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  >>  i  >>  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  ==  i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  <=  i  <=  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "   instanceof   i   instanceof   " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  ||  i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  >  i  >  " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index "  <=  i + " was null" ) ;^107^108^^^^96^113^throw new IllegalArgumentException ( "The predicate collection must not contain a null predicate, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] <T>   Predicate<? super T>> predicates [VARIABLES] boolean  Predicate[]  preds  Collection  predicates  int  i  Predicate  predicate  
[BugLab_Wrong_Operator]^if  ( closures != null )  {^123^^^^^122^127^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  boolean  
[BugLab_Wrong_Operator]^if  ( closures != null )  {^135^^^^^134^144^if  ( closures == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^if  ( closures[i] != null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  &&  i  &&  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <<  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <=  i  <=  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  ||  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Variable_Misuse]^if  ( 2[i] == null )  {^139^^^^^134^144^if  ( closures[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  !=  i  !=  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  ==  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  ==  i  ==  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <=  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  &  i  &  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  >>  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "   instanceof   i   instanceof   " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  >  i  >  " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < closures.length; i++ )  {^138^^^^^134^144^for  ( int i = 0; i < closures.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index "  <  i + " was null" ) ;^140^141^^^^134^144^throw new IllegalArgumentException ( "The closure array must not contain a null closure, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    closures [VARIABLES] Closure[]  closures  boolean  int  i  
[BugLab_Wrong_Operator]^if  ( transformers != null )  {^169^^^^^168^173^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] copy [RETURN_TYPE] <I,O>    transformers [VARIABLES] boolean  Transformer[]  transformers  
[BugLab_Wrong_Operator]^if  ( transformers != null )  {^181^^^^^180^190^if  ( transformers == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^if  ( transformers[i] != null )  {^185^^^^^180^190^if  ( transformers[i] == null )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  <=  i  <=  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  >  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "   instanceof   i   instanceof   " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  |  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = 0; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < transformers.length; i++ )  {^184^^^^^180^190^for  ( int i = 0; i < transformers.length; i++ )  {^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  <=  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  &&  i  &&  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  !=  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  >  i  >  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  <<  i  <<  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  ||  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  ^  i + " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index "  !=  i  !=  " was null" ) ;^186^187^^^^180^190^throw new IllegalArgumentException ( "The transformer array must not contain a null transformer, index " + i + " was null" ) ;^[CLASS] FunctorUtils  [METHOD] validate [RETURN_TYPE] void    transformers [VARIABLES] boolean  Transformer[]  transformers  int  i  
