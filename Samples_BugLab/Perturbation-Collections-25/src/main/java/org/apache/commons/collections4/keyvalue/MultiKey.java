[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] { key2, key1 }, false ) ;^67^^^^^66^68^this (  ( K[] )  new Object[] { key1, key2 }, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K)   final K key1 final K key2 [VARIABLES] K  key1  key2  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Literal]^this (  ( K[] )  new Object[] { key1, key2 }, true ) ;^67^^^^^66^68^this (  ( K[] )  new Object[] { key1, key2 }, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K)   final K key1 final K key2 [VARIABLES] K  key1  key2  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key2, key1}, false ) ;^82^^^^^81^83^this (  ( K[] )  new Object[] {key1, key2, key3}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K)   final K key1 final K key2 final K key3 [VARIABLES] K  key1  key2  key3  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key3, key2}, false ) ;^82^^^^^81^83^this (  ( K[] )  new Object[] {key1, key2, key3}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K)   final K key1 final K key2 final K key3 [VARIABLES] K  key1  key2  key3  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Literal]^this (  ( K[] )  new Object[] {key1, key2, key3}, true ) ;^82^^^^^81^83^this (  ( K[] )  new Object[] {key1, key2, key3}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K)   final K key1 final K key2 final K key3 [VARIABLES] K  key1  key2  key3  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key4, key3, key4}, false ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key2, key4, key4}, false ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key2, key3, key3}, false ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key4, key3, key2}, false ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key3, key2, key4}, false ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key2, key4, key3}, false ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Literal]^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, true ) ;^98^^^^^97^99^this (  ( K[] )  new Object[] {key1, key2, key3, key4}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K)   final K key1 final K key2 final K key3 final K key4 [VARIABLES] K  key1  key2  key3  key4  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key5, key3, key4, key5}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key2, key5, key4, key5}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key2, key3, key5, key5}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key4}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key4, key3, key2, key5}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key2, key4, key3, key5}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Argument_Swapping]^this (  ( K[] )  new Object[] {key1, key2, key5, key4, key3}, false ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Literal]^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, true ) ;^115^^^^^114^116^this (  ( K[] )  new Object[] {key1, key2, key3, key4, key5}, false ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K,K,K,K,K)   final K key1 final K key2 final K key3 final K key4 final K key5 [VARIABLES] K  key1  key2  key3  key4  key5  boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Literal]^this ( keys, false ) ;^130^^^^^129^131^this ( keys, true ) ;^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K[])   final K[] keys [VARIABLES] boolean  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( keys != null )  {^159^^^^^157^169^if  ( keys == null )  {^[CLASS] MultiKey  [METHOD] <init> [RETURN_TYPE] MultiKey(K[],boolean)   final K[] keys final boolean makeClone [VARIABLES] boolean  makeClone  K[]  keys  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^return index;^206^^^^^205^207^return keys.length;^[CLASS] MultiKey  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  
[BugLab_Argument_Swapping]^return keys;^206^^^^^205^207^return keys.length;^[CLASS] MultiKey  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  
[BugLab_Argument_Swapping]^return keys.length.length;^206^^^^^205^207^return keys.length;^[CLASS] MultiKey  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  
[BugLab_Wrong_Operator]^if  ( other != this )  {^221^^^^^220^229^if  ( other == this )  {^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Wrong_Literal]^return false;^222^^^^^220^229^return true;^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Wrong_Operator]^if  ( other  ==  MultiKey )  {^224^^^^^220^229^if  ( other instanceof MultiKey )  {^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Argument_Swapping]^return Arrays.equals ( keys, otherMulti.keys.keys ) ;^226^^^^^220^229^return Arrays.equals ( keys, otherMulti.keys ) ;^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Argument_Swapping]^return Arrays.equals ( otherMulti, keys.keys ) ;^226^^^^^220^229^return Arrays.equals ( keys, otherMulti.keys ) ;^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Argument_Swapping]^return Arrays.equals ( otherMulti.keys, keys ) ;^226^^^^^220^229^return Arrays.equals ( keys, otherMulti.keys ) ;^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Argument_Swapping]^return Arrays.equals ( keys, otherMulti ) ;^226^^^^^220^229^return Arrays.equals ( keys, otherMulti.keys ) ;^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Wrong_Literal]^return true;^228^^^^^220^229^return false;^[CLASS] MultiKey  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Object  other  boolean  K[]  keys  MultiKey  otherMulti  long  serialVersionUID  int  hashCode  index  
[BugLab_Variable_Misuse]^return index;^243^^^^^242^244^return hashCode;^[CLASS] MultiKey  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  
[BugLab_Wrong_Literal]^int total = hashCode;^262^^^^^260^269^int total = 0;^[CLASS] MultiKey  [METHOD] calculateHashCode [RETURN_TYPE] void   Object[] keys [VARIABLES] Object  key  boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  total  Object[]  keys  
[BugLab_Wrong_Operator]^if  ( key == null )  {^264^^^^^260^269^if  ( key != null )  {^[CLASS] MultiKey  [METHOD] calculateHashCode [RETURN_TYPE] void   Object[] keys [VARIABLES] Object  key  boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  total  Object[]  keys  
[BugLab_Variable_Misuse]^hashCode = index;^268^^^^^260^269^hashCode = total;^[CLASS] MultiKey  [METHOD] calculateHashCode [RETURN_TYPE] void   Object[] keys [VARIABLES] Object  key  boolean  K[]  keys  long  serialVersionUID  int  hashCode  index  total  Object[]  keys  
