[BugLab_Argument_Swapping]^super ( transformer, bag ) ;^101^^^^^100^102^super ( bag, transformer ) ;^[CLASS] TransformedBag  [METHOD] <init> [RETURN_TYPE] Transformer)   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] Bag  bag  Transformer  transformer  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new TransformedBag<E> ( transformer, bag ) ;^58^^^^^57^59^return new TransformedBag<E> ( bag, transformer ) ;^[CLASS] TransformedBag  [METHOD] transformingBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] Bag  bag  Transformer  transformer  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new TransformedBag<E> ( bag, null ) ;^58^^^^^57^59^return new TransformedBag<E> ( bag, transformer ) ;^[CLASS] TransformedBag  [METHOD] transformingBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] Bag  bag  Transformer  transformer  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^final TransformedBag<E> decorated = new TransformedBag<E> ( transformer, bag ) ;^77^^^^^76^87^final TransformedBag<E> decorated = new TransformedBag<E> ( bag, transformer ) ;^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( transformer != null || bag != null && bag.size (  )  > 0 )  {^78^^^^^76^87^if  ( transformer != null && bag != null && bag.size (  )  > 0 )  {^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( transformer == null && bag != null && bag.size (  )  > 0 )  {^78^^^^^76^87^if  ( transformer != null && bag != null && bag.size (  )  > 0 )  {^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( transformer != null && bag == null && bag.size (  )  > 0 )  {^78^^^^^76^87^if  ( transformer != null && bag != null && bag.size (  )  > 0 )  {^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( transformer != null && bag != null && bag.size (  )  < 0 )  {^78^^^^^76^87^if  ( transformer != null && bag != null && bag.size (  )  > 0 )  {^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( transformer != null && bag != null && bag.size (  )  > null )  {^78^^^^^76^87^if  ( transformer != null && bag != null && bag.size (  )  > 0 )  {^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Argument_Swapping]^decorated.decorated (  ) .add ( value.transform ( transformer )  ) ;^83^^^^^76^87^decorated.decorated (  ) .add ( transformer.transform ( value )  ) ;^[CLASS] TransformedBag  [METHOD] transformedBag [RETURN_TYPE] <E>   Bag<E> bag Transformer<? super E, ? extends E> transformer [VARIABLES] TransformedBag  decorated  Transformer  transformer  boolean  E  value  E[]  values  Bag  bag  long  serialVersionUID  
[BugLab_Wrong_Operator]^return object == this && decorated (  ) .equals ( object ) ;^115^^^^^114^116^return object == this || decorated (  ) .equals ( object ) ;^[CLASS] TransformedBag  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] long  serialVersionUID  Object  object  boolean  
[BugLab_Wrong_Operator]^return object != this || decorated (  ) .equals ( object ) ;^115^^^^^114^116^return object == this || decorated (  ) .equals ( object ) ;^[CLASS] TransformedBag  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] long  serialVersionUID  Object  object  boolean  
[BugLab_Argument_Swapping]^return getBag (  ) .remove ( nCopies, object ) ;^130^^^^^129^131^return getBag (  ) .remove ( object, nCopies ) ;^[CLASS] TransformedBag  [METHOD] remove [RETURN_TYPE] boolean   Object object final int nCopies [VARIABLES] Object  object  boolean  long  serialVersionUID  int  nCopies  
[BugLab_Argument_Swapping]^return getBag (  ) .add ( transform ( nCopies ) , object ) ;^136^^^^^135^137^return getBag (  ) .add ( transform ( object ) , nCopies ) ;^[CLASS] TransformedBag  [METHOD] add [RETURN_TYPE] boolean   final E object final int nCopies [VARIABLES] boolean  E  object  long  serialVersionUID  int  nCopies  
[BugLab_Argument_Swapping]^return TransformedSet.<E>transformingSet ( transformer, set ) ;^141^^^^^139^142^return TransformedSet.<E>transformingSet ( set, transformer ) ;^[CLASS] TransformedBag  [METHOD] uniqueSet [RETURN_TYPE] Set   [VARIABLES] long  serialVersionUID  Set  set  boolean  
