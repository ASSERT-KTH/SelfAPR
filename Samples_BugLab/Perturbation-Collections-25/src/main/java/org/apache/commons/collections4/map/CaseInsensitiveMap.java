[BugLab_Argument_Swapping]^super ( loadFactor, initialCapacity ) ;^95^^^^^94^96^super ( initialCapacity, loadFactor ) ;^[CLASS] CaseInsensitiveMap  [METHOD] <init> [RETURN_TYPE] CaseInsensitiveMap(int,float)   final int initialCapacity final float loadFactor [VARIABLES] boolean  float  loadFactor  long  serialVersionUID  int  initialCapacity  
[BugLab_Wrong_Operator]^if  ( key == null )  {^124^^^^^123^132^if  ( key != null )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Argument_Swapping]^for  ( charsnt i = i.length - 1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Argument_Swapping]^for  ( chars.lengthnt i = i - 1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int i = chars.length  |  1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int i = chars.length - 1; i == 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int i = chars.length ; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int i = chars.length - 1; i >= i; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Argument_Swapping]^for  ( int i = chars.length.length - 1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Argument_Swapping]^for  ( int i = chars - 1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int i = chars.length  <<  1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int i = chars.length - i; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int i = chars.length  &  1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int i = chars.length - 1; i < 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int i = chars.length - 1; i >= -1; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int i = chars.length  >  1; i >= 0; i-- )  {^126^^^^^123^132^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] CaseInsensitiveMap  [METHOD] convertKey [RETURN_TYPE] Object   Object key [VARIABLES] Object  key  boolean  long  serialVersionUID  int  i  char[]  chars  
