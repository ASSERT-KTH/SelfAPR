[buglab_swap_variables]^iPredicates = predicates ? FunctorUtils.copy ( clone )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^iClosures = closures ? FunctorUtils.copy ( clone )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^this ( true, defaultClosure, closures, predicates ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^this ( true,  closures, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^this ( true, closures, predicates, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^this ( true, predicates,  defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^this ( true, predicates, closures ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> ( defaultClosure, closures, predicates ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> (  closures, defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> ( closures, predicates, defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> ( predicates,  defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> ( predicates, defaultClosure, closures ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> ( predicates, closures ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[buglab_swap_variables]^return new SwitchClosure<E> ( false, defaultClosure, closures, preds ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[buglab_swap_variables]^return new SwitchClosure<E> ( false,  closures, defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[buglab_swap_variables]^return new SwitchClosure<E> ( false, preds, defaultClosure, closures ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[buglab_swap_variables]^return new SwitchClosure<E> ( false, preds,  defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[buglab_swap_variables]^return new SwitchClosure<E> ( false, preds, closures ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[buglab_swap_variables]^if  ( inputPredicates[i].evaluate ( i )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[buglab_swap_variables]^if  ( input[i].evaluate ( iPredicates )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[buglab_swap_variables]^iClosures[i].execute ( inputnput ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[buglab_swap_variables]^if  ( i[i].evaluate ( iPredicatesnput )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[buglab_swap_variables]^iClosures[i].execute ( i ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
