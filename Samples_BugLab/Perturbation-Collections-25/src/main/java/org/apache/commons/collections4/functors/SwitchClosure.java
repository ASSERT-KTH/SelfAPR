[BugLab_Argument_Swapping]^iPredicates = predicates ? FunctorUtils.copy ( clone )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^iClosures = closures ? FunctorUtils.copy ( clone )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Operator]^iDefault =  ( Closure<? super E> )   ( defaultClosure != null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^124^^^^^119^125^iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Variable_Misuse]^this ( true, predicates, null, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^this ( true, defaultClosure, closures, predicates ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^this ( true, closures, predicates, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^this ( true, predicates, defaultClosure, closures ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Literal]^this ( false, predicates, closures, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( predicates.length == closures.length )  {^61^^^^^56^68^if  ( predicates.length != closures.length )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( predicates.length <= 0 )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( predicates.length >= 0 )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( predicates.length == 1 )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( Closure<E> )   ( defaultClosure != null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^65^^^^^56^68^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new SwitchClosure<E> ( closures, predicates, defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new SwitchClosure<E> ( predicates, defaultClosure, closures ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new SwitchClosure<E> ( defaultClosure, closures, predicates ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( predicatesAndClosures != null )  {^90^^^^^89^108^if  ( predicatesAndClosures == null )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^if  ( size >= 0 )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^if  ( size == 1 )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^return  ( Closure<E> )   ( defaultClosure != null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^97^^^^^89^108^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^int i = -1;^101^^^^^89^108^int i = 0;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^preds[i] = 0.getKey (  ) ;^103^^^^^89^108^preds[i] = entry.getKey (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^return new SwitchClosure<E> ( false, defaultClosure, closures, preds ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^return new SwitchClosure<E> ( false, preds, defaultClosure, closures ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^return new SwitchClosure<E> ( true, preds, closures, defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^return new SwitchClosure<E> ( false, closures, preds, defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^if  ( iPredicatesPredicates[i].evaluate ( input )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( i[i].evaluate ( iPredicatesnput )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( iPredicates[i].evaluate ( input )  != true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^if  ( iPredicates[i].evaluate ( input )  == false )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^iClosures[i].execute ( inputnput ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^iClosures[i].execute ( i ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( input[i].evaluate ( iPredicates )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( inputPredicates[i].evaluate ( i )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
