[BugLab_Wrong_Literal]^HARD ( 1 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[BugLab_Wrong_Literal]^HARD ( 0 ) , SOFT ( 0 ) , WEAK ( 2 ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[BugLab_Wrong_Literal]^HARD ( 0 ) , SOFT ( 1 ) , WEAK (  ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef   [VARIABLES] 
[BugLab_Variable_Misuse]^this.value = index;^113^^^^^112^114^this.value = value;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength(int)   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  int  expectedModCount  hash  index  value  
[BugLab_Variable_Misuse]^super ( value, loadFactor ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[BugLab_Argument_Swapping]^super ( loadFactor, capacity ) ;^167^^^^^164^171^super ( capacity, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[BugLab_Variable_Misuse]^this.keyType = valueType;^168^^^^^164^171^this.keyType = keyType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[BugLab_Variable_Misuse]^this.valueType = keyType;^169^^^^^164^171^this.valueType = valueType;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength,int,float,boolean)   ReferenceStrength keyType ReferenceStrength valueType final int capacity final float loadFactor final boolean purgeValues [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  AbstractReferenceMap  parent  K  currentKey  nextKey  float  loadFactor  int  capacity  expectedModCount  hash  index  value  
[BugLab_Variable_Misuse]^super ( next, value, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^super ( hashCode, next, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.key = toReference ( parent.keyType, nextKey, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.key = toReference ( parent.keyType, key, index ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.key = toReference ( keyType, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.key = toReference ( key.keyType, parent, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.key = toReference ( parent.keyType, hashCode, key ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.key = toReference ( hashCode.keyType, key, parent ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.key = toReference ( hashCode, key, parent.keyType ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.key = toReference ( WEAK, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.key = toReference ( parent, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.value = toReference ( parent.valueType, nextValue, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.value = toReference ( parent.valueType, value, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.value = toReference ( WEAK, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.value = toReference ( hashCode.valueType, value, parent ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.value = toReference ( parent.valueType, hashCode, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.value = toReference ( hashCode, value, parent.valueType ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.value = toReference ( parent, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.value = toReference ( parent.valueType, value, index ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.value = toReference ( keyType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.value = toReference ( value.valueType, parent, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^this.value = toReference ( value, parent.valueType, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^index = parent.size (  )  >= 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^index = parent.size (  )  != expectedModCount ? parent.data.length : expectedModCount;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^index = parent.size (  )  != 1 ? parent.data.length : 1;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^index = 2.size (  )  != 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^super ( null ) ;^856^^^^^855^857^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^super ( this ) ;^901^^^^^900^902^super ( parent ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^super ( q, r ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.hash = value;^947^^^^^945^948^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^super ( q, r ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^this.hash = index;^965^^^^^963^966^this.hash = hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  r  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return valueType;^102^^^^^99^110^return HARD;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return valueType;^104^^^^^99^110^return SOFT;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return valueType;^106^^^^^99^110^return WEAK;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( entry != null )  {^214^^^^^211^218^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return true;^215^^^^^211^218^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return entry.getValue (  )  == null;^217^^^^^211^218^return entry.getValue (  )  != null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return 0.getValue (  )  != null;^217^^^^^211^218^return entry.getValue (  )  != null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( value != null )  {^229^^^^^227^233^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return true;^230^^^^^227^233^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( null == null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( entry != null )  {^245^^^^^242^249^if  ( entry == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( nextKey == null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( key != null )  {^263^^^^^262^272^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( nextValue == null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( value != null )  {^266^^^^^262^272^if  ( value == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( key != null )  {^282^^^^^281^287^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^while  ( queue.poll (  )  == null )  {}^295^^^^^293^296^while  ( queue.poll (  )  != null )  {}^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^while  ( 4.poll (  )  != null )  {}^295^^^^^293^296^while  ( queue.poll (  )  != null )  {}^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( parent == null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( entrySet != null )  {^319^^^^^318^323^if  ( entrySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return parent;^322^^^^^318^323^return entrySet;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( parent == null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( keySet != null )  {^332^^^^^331^336^if  ( keySet == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return parent;^335^^^^^331^336^return keySet;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( parent == null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( values != null )  {^345^^^^^344^349^if  ( values == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return parent;^348^^^^^344^349^return values;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^while  ( ref == null )  {^380^^^^^378^384^while  ( ref != null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^final int index = valueIndex ( hash, data.length ) ;^396^^^^^391^413^final int index = hashIndex ( hash, data.length ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^HashEntry<K, V> entry = parent[index];^398^^^^^391^413^HashEntry<K, V> entry = data[index];^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^while  ( entry == null )  {^399^^^^^391^413^while  ( entry != null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( previous != null )  {^401^^^^^391^413^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] void   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( key != null )  {^424^^^^^423^428^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getEntry [RETURN_TYPE] HashEntry   Object key [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return  ( value == null ? 0 : key.hashCode (  )  )  ^ ( key == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return  ( key != null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value != null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return  ( key == null ? hashCode : key.hashCode (  )  )  ^ ( value == null ? hashCode : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return  ( key == null ? hash : key.hashCode (  )  )  ^ ( value == null ? hash : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return  ( value == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^439^440^^^^438^441^return  ( key == null ? 0 : key.hashCode (  )  )  ^ ( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^( key == null ? 0 : value.hashCode (  )  ) ;^440^^^^^438^441^( value == null ? 0 : value.hashCode (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashEntry [RETURN_TYPE] int   Object key Object value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key  value  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^key2 = keyType == ReferenceStrength.HARD ? key1 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^key2 = valueType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^key2 = keyType == ReferenceStrength.keyType ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^key2 = keyType <= ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^456^^^^^455^458^key2 = keyType == ReferenceStrength.HARD ? key2 :  (  ( Reference<K> )  key2 ) .get (  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return key2 == key1 || key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return key1 == key2 && key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return key1 != key2 || key1.equals ( key2 ) ;^457^^^^^455^458^return key1 == key2 || key1.equals ( key2 ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isEqualKey [RETURN_TYPE] boolean   Object key1 Object key2 [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  Object  key1  key2  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new ReferenceEntry<K, V> ( this, next, index, key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new ReferenceEntry<K, V> ( this, next, hashCode, key, nextValue ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new ReferenceEntry<K, V> ( this, key, hashCode, next, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new ReferenceEntry<K, V> ( this, next, key, hashCode, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new ReferenceEntry<K, V> ( this, next, value, key, hashCode ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new ReferenceEntry<K, V> ( this, next, hashCode, nextKey, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new ReferenceEntry<K, V> ( this, hashCode, next, key, value ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new ReferenceEntry<K, V> ( this, value, hashCode, key, next ) ;^472^^^^^470^473^return new ReferenceEntry<K, V> ( this, next, hashCode, key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] createEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  HashEntry  next  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return arr.toArray ( list ) ;^527^^^^^521^528^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  ArrayList  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^list.add ( nextKey ) ;^551^^^^^547^554^list.add ( key ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return arr.toArray ( list ) ;^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^list.add ( nextValue ) ;^577^^^^^573^580^list.add ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return arr.toArray ( list ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return 1.toArray ( arr ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  T[]  arr  List  list  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return  ( K )   ( parent.keyType == ReferenceStrength.valueType ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? previous :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return  ( K )   ( key == ReferenceStrength.HARD ? parent.keyType :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return  ( K )   ( key.keyType == ReferenceStrength.HARD ? parent :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return  ( K )   ( parent.keyType <= ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return  ( V )   ( WEAK == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return  ( V )   ( parent.valueType == ReferenceStrength.valueType ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? previous :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return  ( V )   ( value.valueType == ReferenceStrength.HARD ? parent :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return  ( V )   ( parent.valueType <= ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( valueType != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( parent.valueType != ReferenceStrength.valueType )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^if  ( parent.valueType.valueType != ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( parent.valueType < ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^value = toReference ( parent.valueType, value, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^value = toReference ( keyType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^value = toReference ( parent.valueType, obj, previous ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^value = toReference ( obj.valueType, parent, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^value = toReference ( parent, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^value = toReference ( hashCode.valueType, obj, parent ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^value = toReference ( obj, parent.valueType, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^value = toReference ( parent.valueType.valueType, obj, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^value = toReference ( hashCode, obj, parent.valueType ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return obj;^651^^^^^645^652^return old;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return false;^666^^^^^664^682^return true;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( obj instanceof Map.Entry <= false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( obj  <<  Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^if  ( obj instanceof Map.Entry == true )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return true;^669^^^^^664^682^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( obj == null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( entryKey == null || obj == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^if  ( entryValue == null || entryKey == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( entryKey == null && entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( entryKey != null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( entryKey == null || entryValue != null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Literal]^return true;^676^^^^^664^682^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return parent.isEqualKey ( obj, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( obj, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return parent.isEqualKey ( entryKey, previous )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return parent.isEqualKey ( entryValue, key )  && parent.isEqualValue ( entryKey, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return entryKey.isEqualKey ( parent, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return parent.isEqualKey ( entryKey, entryValue )  && parent.isEqualValue ( key, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^return parent.isEqualKey ( entryKey, key )  || parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return key.isEqualKey ( entryKey, parent )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^parent.isEqualValue ( obj, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  Entry  entry  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  Object  entryKey  entryValue  obj  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return null.hashEntry ( getKey (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( valueType == ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( type <= ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( valueType == ReferenceStrength.SOFT )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( type == ReferenceStrength.valueType )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( type <= ReferenceStrength.SOFT )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new SoftRef<T> ( value, referent, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( parent.queue, referent, hash ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, parent, referent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, parent.queue, referent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( parent, referent, hash.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( referent, hash, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, referent, parent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, referent, parent.queue.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new SoftRef<T> ( index, referent, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( valueType == ReferenceStrength.WEAK )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( type == ReferenceStrength.valueType )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( type <= ReferenceStrength.WEAK )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( value, referent, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( hash, referent, null ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( referent, hash, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, parent.queue, referent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( parent, referent, hash.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( parent.queue, referent, hash ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, referent, parent.queue.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( index, referent, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( hash, referent, this ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( hash, referent, null.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, parent, referent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  ReferenceQueue  q  queue  T  referent  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^boolean r = valueType != ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^boolean r = parent.keyType != ReferenceStrength.valueType && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^boolean r = key.keyType != ReferenceStrength.HARD && parent == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^boolean r = parent.keyType != ReferenceStrength.HARD && ref == key;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD || key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^boolean r = parent.keyType == ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD && key >= ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^r = purgeValues || parent.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^r = r || keyType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^r = r || parent.valueType != ReferenceStrength.valueType && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^r = r || parent.valueType != ReferenceStrength.HARD && previous == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^r = value || parent.valueType != ReferenceStrength.HARD && r == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^r = r || ref.valueType != ReferenceStrength.HARD && value == parent;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^r = r || parent.valueType.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^r = r && parent.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^r = r || parent.valueType != ReferenceStrength.HARD || value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^r = r || parent.valueType == ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^r = r || parent.valueType != ReferenceStrength.HARD && value != ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( purgeValues )  {^729^^^^^726^740^if  ( r )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( keyType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( parent.keyType != ReferenceStrength.valueType )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( parent.keyType >= ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( valueType != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( parent.valueType != ReferenceStrength.valueType )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^if  ( parent.valueType.valueType != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( parent.valueType >= ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^} else if  ( r )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^} else if  ( 3.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^} else if  ( parent )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Argument_Swapping]^} else if  ( parent.purgeValues.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( valueType != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^if  ( type != ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^if  ( parent.valueType == ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Variable_Misuse]^return purgeValues;^739^^^^^726^740^return r;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  Reference  ref  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  index  value  
[BugLab_Wrong_Operator]^while  ( e == null || i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^while  ( e != null && i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^while  ( e == null && i >= 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Literal]^while  ( e == null && i > expectedModCount )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( e != null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Literal]^return true;^796^^^^^782^805^return false;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^index = hashCode;^792^^^^^782^805^index = i;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^int i = value;^786^^^^^782^805^int i = index;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^while  ( e == null && i < 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Literal]^while  ( e == null && i > i )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^index = index;^792^^^^^782^805^index = i;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Literal]^return false;^804^^^^^782^805^return true;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( parent.modCount == expectedModCount )  {^808^^^^^807^811^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return key == null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return nextKey == null || old == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Argument_Swapping]^return nextValue == null || nextKey == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^return nextKey == null && nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^return nextKey != null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( nextNull (  )  || !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^currentKey = key;^824^^^^^817^829^currentKey = nextKey;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^currentValue = value;^825^^^^^817^829^currentValue = nextValue;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( previous != null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( current != null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( current != null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^if  ( null == null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^if  ( current != null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return 1.setValue ( value ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return current.setValue ( obj ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Argument_Swapping]^return value.setValue ( current ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return null.setValue ( value ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  HashEntry  current  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return value;^952^^^^^951^953^return hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return i;^970^^^^^969^971^return hash;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^out.writeInt ( index ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeInt ( valueType.value ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Argument_Swapping]^out.writeInt ( keyType ) ;^996^^^^^995^1007^out.writeInt ( keyType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeInt ( value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeInt ( type.value ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Argument_Swapping]^out.writeInt ( valueType ) ;^997^^^^^995^1007^out.writeInt ( valueType.value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeBoolean ( r ) ;^998^^^^^995^1007^out.writeBoolean ( purgeValues ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeFloat ( parent ) ;^999^^^^^995^1007^out.writeFloat ( loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeObject ( null.next (  )  ) ;^1002^^^^^995^1007^out.writeObject ( it.next (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Variable_Misuse]^out.writeObject ( this.getValue (  )  ) ;^1003^^^^^995^1007^out.writeObject ( it.getValue (  )  ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  ObjectOutputStream  out  int  capacity  expectedModCount  hash  hashCode  i  index  value  MapIterator  it  
[BugLab_Wrong_Literal]^while  ( false )  {^1038^^^^^1030^1048^while  ( true )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Variable_Misuse]^if  ( nextKey == null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Wrong_Operator]^if  ( key != null )  {^1040^^^^^1030^1048^if  ( key == null )  {^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Variable_Misuse]^put ( nextKey, value ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Variable_Misuse]^put ( key, old ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Argument_Swapping]^put ( value, key ) ;^1044^^^^^1030^1048^put ( key, value ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Variable_Misuse]^threshold = calculateThreshold ( data.length, parent ) ;^1046^^^^^1030^1048^threshold = calculateThreshold ( data.length, loadFactor ) ;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  ObjectInputStream  in  
[BugLab_Variable_Misuse]^return this.keyType == valueType;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return valueType == type;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Argument_Swapping]^return type == this.keyType;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Operator]^return this.keyType != type;^1056^^^^^1055^1057^return this.keyType == type;^[CLASS] AbstractReferenceMap ReferenceStrength ReferenceEntrySet ReferenceKeySet ReferenceValues ReferenceEntry ReferenceBaseIterator ReferenceEntrySetIterator ReferenceKeySetIterator ReferenceValuesIterator ReferenceMapIterator SoftRef WeakRef  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Wrong_Literal]^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( capacity ) ;^88^^^^^83^93^HARD ( 0 ) , SOFT ( 1 ) , WEAK ( 2 ) ;^[CLASS] ReferenceStrength  [METHOD] isKeyType [RETURN_TYPE] boolean   ReferenceStrength type [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  keyType  type  valueType  ReferenceEntry  e  entry  previous  boolean  purgeValues  r  ReferenceQueue  q  queue  V  currentValue  nextValue  obj  old  value  AbstractReferenceMap  parent  K  currentKey  key  nextKey  int  capacity  expectedModCount  hash  hashCode  i  index  value  
[BugLab_Variable_Misuse]^return WEAK;^102^^^^^99^110^return HARD;^[CLASS] ReferenceStrength  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[BugLab_Variable_Misuse]^return WEAK;^104^^^^^99^110^return SOFT;^[CLASS] ReferenceStrength  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[BugLab_Variable_Misuse]^return SOFT;^106^^^^^99^110^return WEAK;^[CLASS] ReferenceStrength  [METHOD] resolve [RETURN_TYPE] AbstractReferenceMap$ReferenceStrength   final int value [VARIABLES] ReferenceStrength  HARD  SOFT  WEAK  int  value  boolean  
[BugLab_Argument_Swapping]^return arr.toArray ( list ) ;^527^^^^^521^528^return list.toArray ( arr ) ;^[CLASS] ReferenceEntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] Entry  entry  boolean  T[]  arr  ArrayList  list  
[BugLab_Argument_Swapping]^return arr.toArray ( list ) ;^553^^^^^547^554^return list.toArray ( arr ) ;^[CLASS] ReferenceKeySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  T[]  arr  List  list  K  key  
[BugLab_Argument_Swapping]^return arr.toArray ( list ) ;^579^^^^^573^580^return list.toArray ( arr ) ;^[CLASS] ReferenceValues  [METHOD] toArray [RETURN_TYPE] <T>   final T[] arr [VARIABLES] boolean  V  value  T[]  arr  List  list  
[BugLab_Argument_Swapping]^super ( hashCode, next, null, null ) ;^607^^^^^605^611^super ( next, hashCode, null, null ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.key = toReference ( hashCode.keyType, key, parent ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.key = toReference ( key.keyType, parent, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.key = toReference ( parent.keyType, hashCode, key ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.key = toReference ( hashCode, key, parent.keyType ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.key = toReference ( parent, key, hashCode ) ;^609^^^^^605^611^this.key = toReference ( parent.keyType, key, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.value = toReference ( hashCode.valueType, value, parent ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.value = toReference ( value.valueType, parent, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.value = toReference ( parent.valueType, hashCode, value ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.value = toReference ( value, parent.valueType, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.value = toReference ( parent.valueType.valueType, value, hashCode ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^this.value = toReference ( hashCode, value, parent.valueType ) ;^610^^^^^605^611^this.value = toReference ( parent.valueType, value, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] <init> [RETURN_TYPE] HashEntry,int,K,V)   AbstractReferenceMap<K, V> parent HashEntry<K, V> next final int hashCode final K key final V value [VARIABLES] HashEntry  next  K  key  boolean  int  hashCode  V  value  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return  ( K )   ( key.keyType == ReferenceStrength.HARD ? parent :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[BugLab_Wrong_Operator]^return  ( K )   ( parent.keyType != ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^622^^^^^621^623^return  ( K )   ( parent.keyType == ReferenceStrength.HARD ? key :  (  ( Reference<K> )  key ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] AbstractReferenceMap  parent  boolean  
[BugLab_Argument_Swapping]^return  ( V )   ( value.valueType == ReferenceStrength.HARD ? parent :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] AbstractReferenceMap  parent  boolean  
[BugLab_Wrong_Operator]^return  ( V )   ( parent.valueType <= ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^634^^^^^633^635^return  ( V )   ( parent.valueType == ReferenceStrength.HARD ? value :  (  ( Reference<V> )  value ) .get (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] AbstractReferenceMap  parent  boolean  
[BugLab_Variable_Misuse]^if  ( parent.valueType != ReferenceStrength.2 )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Wrong_Operator]^if  ( parent.valueType >= ReferenceStrength.HARD )  {^647^^^^^645^652^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Variable_Misuse]^value = toReference ( parent.valueType, old, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Argument_Swapping]^value = toReference ( parent.valueType, hashCode, obj ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Argument_Swapping]^value = toReference ( hashCode, obj, parent.valueType ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Argument_Swapping]^value = toReference ( hashCode.valueType, obj, parent ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Argument_Swapping]^value = toReference ( obj, parent.valueType, hashCode ) ;^650^^^^^645^652^value = toReference ( parent.valueType, obj, hashCode ) ;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Variable_Misuse]^return obj;^651^^^^^645^652^return old;^[CLASS] ReferenceEntry  [METHOD] setValue [RETURN_TYPE] V   final V obj [VARIABLES] V  obj  old  AbstractReferenceMap  parent  boolean  
[BugLab_Variable_Misuse]^if  ( entryValue == this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^665^^^^^664^682^if  ( obj == this )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^return false;^666^^^^^664^682^return true;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^if  ( entryValue instanceof Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( obj instanceof Map.Entry <= false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( obj  ==  Map.Entry == false )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^if  ( obj instanceof Map.Entry == true )  {^668^^^^^664^682^if  ( obj instanceof Map.Entry == false )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^return true;^669^^^^^664^682^return false;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^if  ( obj == null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^if  ( entryKey == null || obj == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^if  ( entryValue == null || entryKey == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( entryKey == null && entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( entryKey != null || entryValue == null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( entryKey == null || entryValue != null )  {^675^^^^^664^682^if  ( entryKey == null || entryValue == null )  {^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^return true;^676^^^^^664^682^return false;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return parent.isEqualKey ( obj, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( obj, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return 0.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return parent.isEqualKey ( entryValue, key )  && parent.isEqualValue ( entryKey, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return entryValue.isEqualKey ( entryKey, key )  && parent.isEqualValue ( parent, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return entryKey.isEqualKey ( parent, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return parent.isEqualKey ( key, entryKey )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^return parent.isEqualKey ( entryKey, key )  || parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return key.isEqualKey ( entryKey, parent )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^680^681^^^^664^682^return parent.isEqualKey ( entryKey, key )  && parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^parent.isEqualValue ( obj, getValue (  )  ) ;^681^^^^^664^682^parent.isEqualValue ( entryValue, getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  entryKey  entryValue  obj  Entry  entry  boolean  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return null.hashEntry ( getKey (  ) , getValue (  )  ) ;^693^^^^^692^694^return parent.hashEntry ( getKey (  ) , getValue (  )  ) ;^[CLASS] ReferenceEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] AbstractReferenceMap  parent  boolean  
[BugLab_Variable_Misuse]^if  ( type == ReferenceStrength.type )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( type <= ReferenceStrength.HARD )  {^709^^^^^708^719^if  ( type == ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^if  ( type == ReferenceStrength.type )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( type != ReferenceStrength.SOFT )  {^712^^^^^708^719^if  ( type == ReferenceStrength.SOFT )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return new SoftRef<T> ( hash, referent, 1 ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( parent.queue, referent, hash ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, parent, referent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( parent, referent, hash.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, parent.queue, referent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, referent, parent.queue.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( referent, hash, parent.queue ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new SoftRef<T> ( hash, referent, parent ) ;^713^^^^^708^719^return new SoftRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( type >= ReferenceStrength.WEAK )  {^715^^^^^708^719^if  ( type == ReferenceStrength.WEAK )  {^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( parent.queue, referent, hash ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( referent, hash, parent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( parent, referent, hash.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( hash, referent, null.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, parent, referent.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, referent, parent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, referent, parent.queue.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return new WeakRef<T> ( hash, referent, 1.queue ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return new WeakRef<T> ( hash, parent.queue, referent ) ;^716^^^^^708^719^return new WeakRef<T> ( hash, referent, parent.queue ) ;^[CLASS] ReferenceEntry  [METHOD] toReference [RETURN_TYPE] <T>   ReferenceStrength type final T referent final int hash [VARIABLES] ReferenceStrength  type  boolean  T  referent  int  hash  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^boolean r = parent.keyType != ReferenceStrength.null && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^boolean r = ref != ReferenceStrength.HARD && key == parent.keyType;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^boolean r = key.keyType != ReferenceStrength.HARD && parent == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD || key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^boolean r = parent.keyType == ReferenceStrength.HARD && key == ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^boolean r = parent.keyType != ReferenceStrength.HARD && key <= ref;^727^^^^^726^740^boolean r = parent.keyType != ReferenceStrength.HARD && key == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^r = ref || parent.valueType != ReferenceStrength.HARD && value == r;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^r = r || parent != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^r = parent || r.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^r = r && parent.valueType != ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^r = r || parent.valueType != ReferenceStrength.HARD || value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^r = r || parent.valueType >= ReferenceStrength.HARD && value == ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^r = r || parent.valueType != ReferenceStrength.HARD && value <= ref;^728^^^^^726^740^r = r || parent.valueType != ReferenceStrength.HARD && value == ref;^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^if  ( parent.keyType == ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^if  ( parent.valueType == ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Variable_Misuse]^} else if  ( r )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Variable_Misuse]^} else if  ( null.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^} else if  ( parent )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^} else if  ( parent.purgeValues.purgeValues )  {^735^^^^^726^740^} else if  ( parent.purgeValues )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Argument_Swapping]^if  ( parent != ReferenceStrength.HARD )  {^730^^^^^726^740^if  ( parent.keyType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^if  ( parent.valueType >= ReferenceStrength.HARD )  {^733^^^^^726^740^if  ( parent.valueType != ReferenceStrength.HARD )  {^[CLASS] ReferenceEntry  [METHOD] purge [RETURN_TYPE] boolean   Reference<?> ref [VARIABLES] Reference  ref  AbstractReferenceMap  parent  boolean  r  
[BugLab_Wrong_Operator]^index = parent.size (  )  == 0 ? parent.data.length : 0;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^index = parent.size (  )  != 1 ? parent.data.length : 1;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^index = parent.size (  )  != expectedModCount ? parent.data.length : expectedModCount;^776^^^^^773^780^index = parent.size (  )  != 0 ? parent.data.length : 0;^[CLASS] ReferenceBaseIterator  [METHOD] <init> [RETURN_TYPE] AbstractReferenceMap)   AbstractReferenceMap<K, V> parent [VARIABLES] ReferenceEntry  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^while  ( e == null || i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^while  ( e != null && i > 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^while  ( e == null && i >= 0 )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^while  ( e == null && i > expectedModCount )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( e != null )  {^793^^^^^782^805^if  ( e == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^return true;^796^^^^^782^805^return false;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^index = index;^792^^^^^782^805^index = i;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^int i = expectedModCount;^786^^^^^782^805^int i = index;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^while  ( e == null && i > index )  {^787^^^^^782^805^while  ( e == null && i > 0 )  {^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Literal]^return false;^804^^^^^782^805^return true;^[CLASS] ReferenceBaseIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( parent.modCount == expectedModCount )  {^808^^^^^807^811^if  ( parent.modCount != expectedModCount )  {^[CLASS] ReferenceBaseIterator  [METHOD] checkMod [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return currentKey == null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^return nextKey == null || currentValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Argument_Swapping]^return nextValue == null || nextKey == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^return nextKey == null && nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^return nextKey != null || nextValue == null;^814^^^^^813^815^return nextKey == null || nextValue == null;^[CLASS] ReferenceBaseIterator  [METHOD] nextNull [RETURN_TYPE] boolean   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( nextNull (  )  || !hasNext (  )  )  {^819^^^^^817^829^if  ( nextNull (  )  && !hasNext (  )  )  {^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^currentKey = currentKey;^824^^^^^817^829^currentKey = nextKey;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^currentValue = currentValue;^825^^^^^817^829^currentValue = nextValue;^[CLASS] ReferenceBaseIterator  [METHOD] nextEntry [RETURN_TYPE] AbstractReferenceMap$ReferenceEntry   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( previous != null )  {^838^^^^^836^846^if  ( previous == null )  {^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Variable_Misuse]^parent.remove ( nextKey ) ;^841^^^^^836^846^parent.remove ( currentKey ) ;^[CLASS] ReferenceBaseIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] ReferenceEntry  e  entry  previous  K  currentKey  nextKey  boolean  V  currentValue  nextValue  int  expectedModCount  i  index  AbstractReferenceMap  parent  
[BugLab_Wrong_Operator]^if  ( current != null )  {^910^^^^^908^914^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] HashEntry  current  boolean  
[BugLab_Wrong_Operator]^if  ( current != null )  {^918^^^^^916^922^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] getValue [RETURN_TYPE] V   [VARIABLES] HashEntry  current  boolean  
[BugLab_Wrong_Operator]^if  ( current != null )  {^926^^^^^924^930^if  ( current == null )  {^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[BugLab_Argument_Swapping]^return value.setValue ( current ) ;^929^^^^^924^930^return current.setValue ( value ) ;^[CLASS] ReferenceMapIterator  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] HashEntry  current  boolean  V  value  
[BugLab_Argument_Swapping]^super ( q, r ) ;^946^^^^^945^948^super ( r, q ) ;^[CLASS] SoftRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
[BugLab_Argument_Swapping]^super ( q, r ) ;^964^^^^^963^966^super ( r, q ) ;^[CLASS] WeakRef  [METHOD] <init> [RETURN_TYPE] ReferenceQueue)   final int hash final T r ReferenceQueue<? super T> q [VARIABLES] boolean  T  r  ReferenceQueue  q  int  hash  
