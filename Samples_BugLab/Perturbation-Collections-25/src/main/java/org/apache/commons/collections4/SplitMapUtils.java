[BugLab_Argument_Swapping]^return key.containsKey ( get ) ;^60^^^^^59^61^return get.containsKey ( key ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Put  put  Get  get  
[BugLab_Argument_Swapping]^return value.containsValue ( get ) ;^64^^^^^63^65^return get.containsValue ( value ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Put  put  Get  get  
[BugLab_Variable_Misuse]^return 2.containsValue ( value ) ;^64^^^^^63^65^return get.containsValue ( value ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Put  put  Get  get  
[BugLab_Variable_Misuse]^return UnmodifiableEntrySet.unmodifiableEntrySet ( this.entrySet (  )  ) ;^68^^^^^67^69^return UnmodifiableEntrySet.unmodifiableEntrySet ( get.entrySet (  )  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( arg0 >= this )  {^73^^^^^72^77^if  ( arg0 == this )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  boolean  Put  put  Get  get  
[BugLab_Wrong_Literal]^return false;^74^^^^^72^77^return true;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  boolean  Put  put  Get  get  
[BugLab_Argument_Swapping]^return this.get instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( arg0 ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^return arg0 instanceof WrappedGet ||  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^return arg0  ||  WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  boolean  Put  put  Get  get  
[BugLab_Variable_Misuse]^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.null ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  boolean  Put  put  Get  get  
[BugLab_Argument_Swapping]^return key.get ( get ) ;^80^^^^^79^81^return get.get ( key ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^return  >   ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^85^^^^^84^86^return  ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^return  ( "WrappedGet".hashCode (  )   ||  4 )  | get.hashCode (  ) ;^85^^^^^84^86^return  ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Literal]^return  ( "WrappedGet".hashCode (  )  << 5 )  | get.hashCode (  ) ;^85^^^^^84^86^return  ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Variable_Misuse]^return 1.isEmpty (  ) ;^89^^^^^88^90^return get.isEmpty (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Argument_Swapping]^return key.remove ( get ) ;^105^^^^^104^106^return get.remove ( key ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^if  ( get  !=  IterableGet )  {^118^^^^^116^124^if  ( get instanceof IterableGet )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] boolean  Put  put  MapIterator  it  Get  get  
[BugLab_Variable_Misuse]^it = new EntrySetToMapIteratorAdapter<K, V> ( null.entrySet (  )  ) ;^121^^^^^116^124^it = new EntrySetToMapIteratorAdapter<K, V> ( get.entrySet (  )  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] boolean  Put  put  MapIterator  it  Get  get  
[BugLab_Variable_Misuse]^it = new EntrySetToMapIteratorAdapter<K, V> ( this.entrySet (  )  ) ;^121^^^^^116^124^it = new EntrySetToMapIteratorAdapter<K, V> ( get.entrySet (  )  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] boolean  Put  put  MapIterator  it  Get  get  
[BugLab_Wrong_Operator]^if  ( obj <= this )  {^152^^^^^151^156^if  ( obj == this )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Put  put  Get  get  
[BugLab_Wrong_Literal]^return false;^153^^^^^151^156^return true;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^return obj instanceof WrappedPut ||  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^155^^^^^151^156^return obj instanceof WrappedPut &&  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^return obj  !=  WrappedPut &&  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^155^^^^^151^156^return obj instanceof WrappedPut &&  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Put  put  Get  get  
[BugLab_Wrong_Operator]^return  !=   ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^164^^^^^163^165^return  ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^return  ( "WrappedPut".hashCode (  )   ||  4 )  | put.hashCode (  ) ;^164^^^^^163^165^return  ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Literal]^return  ( "WrappedPut".hashCode (  )  << 3 )  | put.hashCode (  ) ;^164^^^^^163^165^return  ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Argument_Swapping]^return  ( V )  key.put ( put, value ) ;^177^^^^^176^178^return  ( V )  put.put ( key, value ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Put  put  V  value  Get  get  
[BugLab_Argument_Swapping]^return  ( V )  value.put ( key, put ) ;^177^^^^^176^178^return  ( V )  put.put ( key, value ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Put  put  V  value  Get  get  
[BugLab_Wrong_Operator]^if  ( get != null )  {^211^^^^^210^219^if  ( get == null )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] readableMap [RETURN_TYPE] <K,V>   Get<K, V> get [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( get  >>  Map )  {^214^^^^^210^219^if  ( get instanceof Map )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] readableMap [RETURN_TYPE] <K,V>   Get<K, V> get [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( get  >=  Map )  {^214^^^^^210^219^if  ( get instanceof Map )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] readableMap [RETURN_TYPE] <K,V>   Get<K, V> get [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^return get  >=  IterableMap ?  (  ( IterableMap<K, V> )  get )  : MapUtils .iterableMap (  ( Map<K, V> )  get ) ;^215^216^^^^210^219^return get instanceof IterableMap ?  (  ( IterableMap<K, V> )  get )  : MapUtils .iterableMap (  ( Map<K, V> )  get ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] readableMap [RETURN_TYPE] <K,V>   Get<K, V> get [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^return get  <<  IterableMap ?  (  ( IterableMap<K, V> )  get )  : MapUtils .iterableMap (  ( Map<K, V> )  get ) ;^215^216^^^^210^219^return get instanceof IterableMap ?  (  ( IterableMap<K, V> )  get )  : MapUtils .iterableMap (  ( Map<K, V> )  get ) ;^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] readableMap [RETURN_TYPE] <K,V>   Get<K, V> get [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( put != null )  {^235^^^^^234^242^if  ( put == null )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] writableMap [RETURN_TYPE] <K,V>   Put<K, V> put [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( put  >  Map )  {^238^^^^^234^242^if  ( put instanceof Map )  {^[CLASS] SplitMapUtils WrappedGet WrappedPut  [METHOD] writableMap [RETURN_TYPE] <K,V>   Put<K, V> put [VARIABLES] Put  put  Get  get  boolean  
[BugLab_Argument_Swapping]^return key.containsKey ( get ) ;^60^^^^^59^61^return get.containsKey ( key ) ;^[CLASS] WrappedGet  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  Get  get  boolean  
[BugLab_Argument_Swapping]^return value.containsValue ( get ) ;^64^^^^^63^65^return get.containsValue ( value ) ;^[CLASS] WrappedGet  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( arg0 != this )  {^73^^^^^72^77^if  ( arg0 == this )  {^[CLASS] WrappedGet  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  Get  get  boolean  
[BugLab_Wrong_Literal]^return false;^74^^^^^72^77^return true;^[CLASS] WrappedGet  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  Get  get  boolean  
[BugLab_Variable_Misuse]^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( 3 ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] WrappedGet  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  Get  get  boolean  
[BugLab_Wrong_Operator]^return arg0 instanceof WrappedGet ||  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] WrappedGet  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  Get  get  boolean  
[BugLab_Wrong_Operator]^return arg0  ^  WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] WrappedGet  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  Get  get  boolean  
[BugLab_Variable_Misuse]^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.null ) ;^76^^^^^72^77^return arg0 instanceof WrappedGet &&  (  ( WrappedGet<?, ?> )  arg0 ) .get.equals ( this.get ) ;^[CLASS] WrappedGet  [METHOD] equals [RETURN_TYPE] boolean   Object arg0 [VARIABLES] Object  arg0  Get  get  boolean  
[BugLab_Argument_Swapping]^return key.get ( get ) ;^80^^^^^79^81^return get.get ( key ) ;^[CLASS] WrappedGet  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Get  get  boolean  
[BugLab_Wrong_Operator]^return  &&   ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^85^^^^^84^86^return  ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^[CLASS] WrappedGet  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Get  get  boolean  
[BugLab_Wrong_Operator]^return  ( "WrappedGet".hashCode (  )   <  4 )  | get.hashCode (  ) ;^85^^^^^84^86^return  ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^[CLASS] WrappedGet  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Get  get  boolean  
[BugLab_Wrong_Literal]^return  ( "WrappedGet".hashCode (  )  << 5 )  | get.hashCode (  ) ;^85^^^^^84^86^return  ( "WrappedGet".hashCode (  )  << 4 )  | get.hashCode (  ) ;^[CLASS] WrappedGet  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Get  get  boolean  
[BugLab_Argument_Swapping]^return key.remove ( get ) ;^105^^^^^104^106^return get.remove ( key ) ;^[CLASS] WrappedGet  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  Get  get  boolean  
[BugLab_Variable_Misuse]^return 3.size (  ) ;^109^^^^^108^110^return get.size (  ) ;^[CLASS] WrappedGet  [METHOD] size [RETURN_TYPE] int   [VARIABLES] Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( get  >  IterableGet )  {^118^^^^^116^124^if  ( get instanceof IterableGet )  {^[CLASS] WrappedGet  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] MapIterator  it  Get  get  boolean  
[BugLab_Variable_Misuse]^return UnmodifiableMapIterator.unmodifiableMapIterator ( 0 ) ;^123^^^^^116^124^return UnmodifiableMapIterator.unmodifiableMapIterator ( it ) ;^[CLASS] WrappedGet  [METHOD] mapIterator [RETURN_TYPE] MapIterator   [VARIABLES] MapIterator  it  Get  get  boolean  
[BugLab_Wrong_Operator]^if  ( obj > this )  {^152^^^^^151^156^if  ( obj == this )  {^[CLASS] WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Put  put  Object  obj  boolean  
[BugLab_Wrong_Literal]^return false;^153^^^^^151^156^return true;^[CLASS] WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Put  put  Object  obj  boolean  
[BugLab_Wrong_Operator]^return obj instanceof WrappedPut ||  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^155^^^^^151^156^return obj instanceof WrappedPut &&  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^[CLASS] WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Put  put  Object  obj  boolean  
[BugLab_Wrong_Operator]^return obj  !=  WrappedPut &&  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^155^^^^^151^156^return obj instanceof WrappedPut &&  (  ( WrappedPut<?, ?> )  obj ) .put.equals ( this.put ) ;^[CLASS] WrappedPut  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Put  put  Object  obj  boolean  
[BugLab_Wrong_Operator]^return   instanceof    ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^164^^^^^163^165^return  ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^[CLASS] WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  boolean  
[BugLab_Wrong_Operator]^return  ( "WrappedPut".hashCode (  )   >  4 )  | put.hashCode (  ) ;^164^^^^^163^165^return  ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^[CLASS] WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  boolean  
[BugLab_Wrong_Literal]^return  ( "WrappedPut".hashCode (  )  <<  )  | put.hashCode (  ) ;^164^^^^^163^165^return  ( "WrappedPut".hashCode (  )  << 4 )  | put.hashCode (  ) ;^[CLASS] WrappedPut  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Put  put  boolean  
[BugLab_Argument_Swapping]^return  ( V )  put.put ( value, key ) ;^177^^^^^176^178^return  ( V )  put.put ( key, value ) ;^[CLASS] WrappedPut  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Put  put  V  value  
[BugLab_Argument_Swapping]^return  ( V )  key.put ( put, value ) ;^177^^^^^176^178^return  ( V )  put.put ( key, value ) ;^[CLASS] WrappedPut  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Put  put  V  value  
[BugLab_Argument_Swapping]^return  ( V )  value.put ( key, put ) ;^177^^^^^176^178^return  ( V )  put.put ( key, value ) ;^[CLASS] WrappedPut  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Put  put  V  value  
