[BugLab_Argument_Swapping]^iClosures = closures ? FunctorUtils.copy ( clone )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[BugLab_Variable_Misuse]^iClosures = clone ? FunctorUtils.copy ( null )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[BugLab_Wrong_Literal]^this ( false, closures ) ;^102^^^^^101^103^this ( true, closures ) ;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( closures.length <= 0 )  {^49^^^^^47^53^if  ( closures.length == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( 1 == null )  {^68^^^^^67^82^if  ( closures == null )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( closures != null )  {^68^^^^^67^82^if  ( closures == null )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( closures.size (  )  != 0 )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^if  ( closures.size (  )  == i )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^int i = i;^76^^^^^67^82^int i = 0;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return new ChainedClosure<E> ( true, cmds ) ;^81^^^^^67^82^return new ChainedClosure<E> ( false, cmds ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
