[BugLab_Wrong_Operator]^if  ( keyAnalyzer != null )  {^49^^^^^48^54^if  ( keyAnalyzer == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] <init> [RETURN_TYPE] KeyAnalyzer)   KeyAnalyzer<? super K> keyAnalyzer [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( key != null )  {^89^^^^^88^94^if  ( key == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] lengthInBits [RETURN_TYPE] int   final K key [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return -1;^90^^^^^88^94^return 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] lengthInBits [RETURN_TYPE] int   final K key [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return keyAnalyzerAnalyzer.lengthInBits ( key ) ;^93^^^^^88^94^return keyAnalyzer.lengthInBits ( key ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] lengthInBits [RETURN_TYPE] int   final K key [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return key.lengthInBits ( keyAnalyzer ) ;^93^^^^^88^94^return keyAnalyzer.lengthInBits ( key ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] lengthInBits [RETURN_TYPE] int   final K key [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return 2.lengthInBits ( key ) ;^93^^^^^88^94^return keyAnalyzer.lengthInBits ( key ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] lengthInBits [RETURN_TYPE] int   final K key [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( key != null )  {^111^^^^^110^115^if  ( key == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Wrong_Literal]^return true;^112^^^^^110^115^return false;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return keyAnalyzerAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^114^^^^^110^115^return keyAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return bitIndex.isBitSet ( key, keyAnalyzer, lengthInBits ) ;^114^^^^^110^115^return keyAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return keyAnalyzer.isBitSet ( key, lengthInBits, bitIndex ) ;^114^^^^^110^115^return keyAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return lengthInBits.isBitSet ( key, bitIndex, keyAnalyzer ) ;^114^^^^^110^115^return keyAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return lengthInBitsAnalyzer.isBitSet ( key, bitIndex, key ) ;^114^^^^^110^115^return keyAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return key.isBitSet ( keyAnalyzer, bitIndex, lengthInBits ) ;^114^^^^^110^115^return keyAnalyzer.isBitSet ( key, bitIndex, lengthInBits ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] isBitSet [RETURN_TYPE] boolean   final K key final int bitIndex final int lengthInBits [VARIABLES] KeyAnalyzer  keyAnalyzer  K  key  boolean  V  value  long  serialVersionUID  int  bitIndex  lengthInBits  
[BugLab_Argument_Swapping]^return keyAnalyzerAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return foundKeyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , key, 0, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return key.bitIndex ( keyAnalyzer, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return keyAnalyzer.bitIndex ( key, -1, lengthInBits ( key ) , foundKey, -1, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return foundKeyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return foundKey.bitIndex ( key, 0, lengthInBits ( key ) , keyAnalyzer, 0, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return keyAnalyzer.bitIndex ( key, 1, lengthInBits ( key ) , foundKey, 1, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , key, 0, lengthInBits ( foundKey )  ) ;^121^^^^^120^122^return keyAnalyzer.bitIndex ( key, 0, lengthInBits ( key ) , foundKey, 0, lengthInBits ( foundKey )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] bitIndex [RETURN_TYPE] int   final K key final K foundKey [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( foundKey == null )  {^128^^^^^127^135^if  ( key == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( key != null )  {^128^^^^^127^135^if  ( key == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^} else if  ( key == null )  {^130^^^^^127^135^} else if  ( other == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( other != null )  {^130^^^^^127^135^} else if  ( other == null )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^131^^^^^127^135^return false;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return key == null;^129^^^^^127^135^return other == null;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return other != null;^129^^^^^127^135^return other == null;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return foundKeyAnalyzer.compare ( key, other )  == 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return otherAnalyzer.compare ( key, key )  == 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return other.compare ( key, keyAnalyzer )  == 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return key.compare ( keyAnalyzer, other )  == 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return keyAnalyzer.compare ( key, other )  != 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return keyAnalyzer.compare ( key, other )  == 1;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return otherAnalyzer.compare ( key, other )  == 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return keyAnalyzer.compare ( key, foundKey )  == 0;^134^^^^^127^135^return keyAnalyzer.compare ( key, other )  == 0;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compareKeys [RETURN_TYPE] boolean   final K key final K other [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return b == null ? a == null : a.equals ( b ) ;^141^^^^^140^142^return a == null ? b == null : a.equals ( b ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compare [RETURN_TYPE] boolean   Object a Object b [VARIABLES] KeyAnalyzer  keyAnalyzer  Object  a  b  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return a != null ? b == null : a.equals ( b ) ;^141^^^^^140^142^return a == null ? b == null : a.equals ( b ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compare [RETURN_TYPE] boolean   Object a Object b [VARIABLES] KeyAnalyzer  keyAnalyzer  Object  a  b  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return a == null ? b != null : a.equals ( b ) ;^141^^^^^140^142^return a == null ? b == null : a.equals ( b ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] compare [RETURN_TYPE] boolean   Object a Object b [VARIABLES] KeyAnalyzer  keyAnalyzer  Object  a  b  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.key = other;^168^^^^^167^170^this.key = key;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] setKeyValue [RETURN_TYPE] V   final K key final V value [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return other;^173^^^^^172^174^return key;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] getKey [RETURN_TYPE] K   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^final V previous = value;^181^^^^^180^184^final V previous = this.value;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.value = previous;^182^^^^^180^184^this.value = value;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return value;^183^^^^^180^184^return previous;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( getKey (  )  != null ? 0 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? 0 : getValue (  ) .hashCode (  )  ) ;^188^189^^^^187^190^return  ( getKey (  )  == null ? 0 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? 0 : getValue (  ) .hashCode (  )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return  ( getKey (  )  == null ? -1 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? -1 : getValue (  ) .hashCode (  )  ) ;^188^189^^^^187^190^return  ( getKey (  )  == null ? 0 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? 0 : getValue (  ) .hashCode (  )  ) ;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( o < this )  {^194^^^^^193^206^if  ( o == this )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( ! ( o  ==  Map.Entry )  )  {^196^^^^^193^206^} else if  ( ! ( o instanceof Map.Entry )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^197^^^^^193^206^return false;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^195^^^^^193^206^return true;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( compare ( other, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( compare ( other, key.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( compare ( value, other.getKey (  )  ) && compare ( key, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( compare ( key, other.getKey (  )  ) || compare ( value, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^203^^^^^193^206^return true;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( compare ( foundKey, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Argument_Swapping]^&& compare ( other, value.getValue (  )  )  )  {^202^^^^^193^206^&& compare ( value, other.getValue (  )  )  )  {^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^205^^^^^193^206^return false;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Entry  other  boolean  V  previous  value  KeyAnalyzer  keyAnalyzer  Object  o  K  foundKey  key  other  long  serialVersionUID  
[BugLab_Variable_Misuse]^return other + "=" + value;^210^^^^^209^211^return key + "=" + value;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return key + "=" + previous;^210^^^^^209^211^return key + "=" + value;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return value + "=" + key;^210^^^^^209^211^return key + "=" + value;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return key  ||  "=" + value;^210^^^^^209^211^return key + "=" + value;^[CLASS] AbstractBitwiseTrie BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] KeyAnalyzer  keyAnalyzer  K  foundKey  key  other  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^final V previous = value;^181^^^^^180^184^final V previous = this.value;^[CLASS] BasicEntry  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return value;^183^^^^^180^184^return previous;^[CLASS] BasicEntry  [METHOD] setValue [RETURN_TYPE] V   final V value [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( getKey (  )  != null ? 0 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? 0 : getValue (  ) .hashCode (  )  ) ;^188^189^^^^187^190^return  ( getKey (  )  == null ? 0 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? 0 : getValue (  ) .hashCode (  )  ) ;^[CLASS] BasicEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return  ( getKey (  )  == null ? -1 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? -1 : getValue (  ) .hashCode (  )  ) ;^188^189^^^^187^190^return  ( getKey (  )  == null ? 0 : getKey (  ) .hashCode (  )  )  ^ ( getValue (  )  == null ? 0 : getValue (  ) .hashCode (  )  ) ;^[CLASS] BasicEntry  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( o != this )  {^194^^^^^193^206^if  ( o == this )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( ! ( o  ==  Map.Entry )  )  {^196^^^^^193^206^} else if  ( ! ( o instanceof Map.Entry )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^197^^^^^193^206^return false;^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^195^^^^^193^206^return true;^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( ! ( o  >=  Map.Entry )  )  {^196^^^^^193^206^} else if  ( ! ( o instanceof Map.Entry )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( compare ( key, other.getKey (  )  ) && compare ( previous, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( compare ( other, key.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( compare ( value, other.getKey (  )  ) && compare ( key, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( compare ( key, other.getKey (  )  ) || compare ( value, other.getValue (  )  )  )  {^201^202^^^^193^206^if  ( compare ( key, other.getKey (  )  ) && compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^203^^^^^193^206^return true;^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^&& compare ( value, 1.getValue (  )  )  )  {^202^^^^^193^206^&& compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^&& compare ( previous, other.getValue (  )  )  )  {^202^^^^^193^206^&& compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^&& compare ( other, value.getValue (  )  )  )  {^202^^^^^193^206^&& compare ( value, other.getValue (  )  )  )  {^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^205^^^^^193^206^return false;^[CLASS] BasicEntry  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Entry  other  K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return key + "=" + previous;^210^^^^^209^211^return key + "=" + value;^[CLASS] BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return value + "=" + key;^210^^^^^209^211^return key + "=" + value;^[CLASS] BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return key  >=  "=" + value;^210^^^^^209^211^return key + "=" + value;^[CLASS] BasicEntry  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] K  key  boolean  V  previous  value  long  serialVersionUID  
