[BugLab_Argument_Swapping]^this ( new Map[] { two, one }, null ) ;^73^^^^^72^74^this ( new Map[] { one, two }, null ) ;^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> one Map<K, V> two [VARIABLES] boolean  Map[]  composite  Map  one  two  MapMutator  mutator  long  serialVersionUID  
[BugLab_Argument_Swapping]^this ( new Map[] { two, one }, mutator ) ;^85^^^^^84^86^this ( new Map[] { one, two }, mutator ) ;^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V> one Map<K, V> two MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  Map  one  two  MapMutator  mutator  long  serialVersionUID  
[BugLab_Argument_Swapping]^this ( new Map[] { one, mutator }, two ) ;^85^^^^^84^86^this ( new Map[] { one, two }, mutator ) ;^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V> one Map<K, V> two MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  Map  one  two  MapMutator  mutator  long  serialVersionUID  
[BugLab_Wrong_Literal]^this.composite = new Map[1];^109^^^^^107^113^this.composite = new Map[0];^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 2.length - 1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( compositent i = i.length - 1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( composite.lengthnt i = i - 1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  >>  1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length - 1; i > 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - i; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - 1; i >= i; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite.length.length - 1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite - 1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  |  1; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - ; i >= 0; --i )  {^110^^^^^107^113^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] <init> [RETURN_TYPE] CompositeMap$MapMutator)   Map<K, V>[] composite MapMutator<K, V> mutator [VARIABLES] boolean  Map[]  composite  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( intersectntersect.size (  )  != 0 )  {^136^^^^^133^147^if  ( intersect.size (  )  != 0 )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( intersect.size (  )  >= 0 )  {^136^^^^^133^147^if  ( intersect.size (  )  != 0 )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( this.mutator != null )  {^137^^^^^133^147^if  ( this.mutator == null )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, this.composite[i], map, intersectntersect ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, this.composite[i], i, mapntersect ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, this.composite[i], map, i ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, intersect[i], map, this.composite ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( composite.lengthnt i = i - 1; i >= 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  !=  1; i >= 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length - 1; i > 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length ; i >= 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - 1; i >= i; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( i.size (  )  != 0 )  {^136^^^^^133^147^if  ( intersect.size (  )  != 0 )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^if  ( intersect.size (  )  != i )  {^136^^^^^133^147^if  ( intersect.size (  )  != 0 )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^this.mutator.resolveCollision ( this, this.composite[i], map, 3 ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, map[i], this.composite, intersect ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, i[i], map, this.compositentersect ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^final Collection<K> intersect = CollectionUtils.intersection ( this.composite[i].keySet (  ) , null.keySet (  )  ) ;^135^^^^^133^147^final Collection<K> intersect = CollectionUtils.intersection ( this.composite[i].keySet (  ) , map.keySet (  )  ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^final Collection<K> this.compositentersect = CollectionUtils.intersection ( i[i].keySet (  ) , map.keySet (  )  ) ;^135^^^^^133^147^final Collection<K> intersect = CollectionUtils.intersection ( this.composite[i].keySet (  ) , map.keySet (  )  ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^final Collection<K> mapntersect = CollectionUtils.intersection ( this.composite[i].keySet (  ) , i.keySet (  )  ) ;^135^^^^^133^147^final Collection<K> intersect = CollectionUtils.intersection ( this.composite[i].keySet (  ) , map.keySet (  )  ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^final Collection<K> intersect = CollectionUtils.intersection ( map[i].keySet (  ) , this.composite.keySet (  )  ) ;^135^^^^^133^147^final Collection<K> intersect = CollectionUtils.intersection ( this.composite[i].keySet (  ) , map.keySet (  )  ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^if  ( 4.size (  )  != 0 )  {^136^^^^^133^147^if  ( intersect.size (  )  != 0 )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^this.mutator.resolveCollision ( this, this.composite[i], map, null ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^this.mutator.resolveCollision ( this, this.composite[i], intersect, map ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite - 1; i >= 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite.length.length - 1; i >= 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  &&  1; i >= 0; --i )  {^134^^^^^133^147^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^this.mutator.resolveCollision ( this, this.composite[i], 1, intersect ) ;^140^^^^^133^147^this.mutator.resolveCollision ( this, this.composite[i], map, intersect ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^final Map<K, V>[] temp = new Map[this.composite.i + 1];^143^^^^^133^147^final Map<K, V>[] temp = new Map[this.composite.length + 1];^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^final Map<K, V>[] temp = new Map[this.composite.length ];^143^^^^^133^147^final Map<K, V>[] temp = new Map[this.composite.length + 1];^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^System.arraycopy ( this.composite, 0, temp, 0, this.composite.i ) ;^144^^^^^133^147^System.arraycopy ( this.composite, 0, temp, 0, this.composite.length ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^System.arraycopy ( temp, 0, this.composite, 0, this.composite.length ) ;^144^^^^^133^147^System.arraycopy ( this.composite, 0, temp, 0, this.composite.length ) ;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^temp[i - 1] = map;^145^^^^^133^147^temp[temp.length - 1] = map;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^temp[temp.length  >=  1] = map;^145^^^^^133^147^temp[temp.length - 1] = map;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^temp[temp.length - i] = map;^145^^^^^133^147^temp[temp.length - 1] = map;^[CLASS] CompositeMap  [METHOD] addComposited [RETURN_TYPE] void   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  Collection  intersect  Map  map  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( map[i].equals ( this.composite )  )  {^159^^^^^156^168^if  ( this.composite[i].equals ( map )  )  {^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^final Map<K, V>[] temp = new Map[i - 1];^160^^^^^156^168^final Map<K, V>[] temp = new Map[size - 1];^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^final Map<K, V>[] temp = new Map[size  &&  1];^160^^^^^156^168^final Map<K, V>[] temp = new Map[size - 1];^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^final Map<K, V>[] temp = new Map[size ];^160^^^^^156^168^final Map<K, V>[] temp = new Map[size - 1];^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^System.arraycopy ( this.composite, 0, temp, 0, size ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( temp, 0, this.composite, 0, i ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( i, 0, temp, 0, this.composite ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, 1, temp, 1, i ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( this.composite, size + 1, temp, i, i - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( temp, i + 1, this.composite, i, size - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size  ^  i  ^  1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size  >=  i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, i , temp, i, size - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, i + i, temp, i, size - i - i ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^for  ( sizent i = 0; i < i; ++i )  {^158^^^^^156^168^for  ( int i = 0; i < size; ++i )  {^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > size; ++i )  {^158^^^^^156^168^for  ( int i = 0; i < size; ++i )  {^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < size; ++i )  {^158^^^^^156^168^for  ( int i = 0; i < size; ++i )  {^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^for  ( int i = i; i < size; ++i )  {^158^^^^^156^168^for  ( int i = 0; i < size; ++i )  {^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^final Map<K, V>[] temp = new Map[size  |  1];^160^^^^^156^168^final Map<K, V>[] temp = new Map[size - 1];^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( this.composite, 0, i, 0, temp ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, size, temp, size, i ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( this.composite, temp + 1, i, i, size - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( this.composite, i + 1, size, i, temp - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^System.arraycopy ( size, i + 1, temp, i, this.composite - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size  >>  i  >>  1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size   instanceof   i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, i, temp, i, i ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size  &&  i  &&  1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size  <=  i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, i + size, temp, i, size - i - size ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^for  ( int i = size; i < size; ++i )  {^158^^^^^156^168^for  ( int i = 0; i < size; ++i )  {^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^final Map<K, V>[] temp = new Map[size  >  1];^160^^^^^156^168^final Map<K, V>[] temp = new Map[size - 1];^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^System.arraycopy ( this.composite, -1, temp, -1, i ) ;^161^^^^^156^168^System.arraycopy ( this.composite, 0, temp, 0, i ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^System.arraycopy ( this.composite, size + 1, temp, i, size - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^System.arraycopy ( this.composite, i + 1, temp, i, i - i - 1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^System.arraycopy ( this.composite, i + 1, temp, i, size  <  i  <  1 ) ;^162^^^^^156^168^System.arraycopy ( this.composite, i + 1, temp, i, size - i - 1 ) ;^[CLASS] CompositeMap  [METHOD] removeComposited [RETURN_TYPE] Map   Map<K, V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^for  ( this.compositent i = i.length - 1; i >= 0; --i )  {^177^^^^^176^180^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  &  1; i >= 0; --i )  {^177^^^^^176^180^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i > 0; --i )  {^177^^^^^176^180^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^177^^^^^176^180^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - 1; i >= i; --i )  {^177^^^^^176^180^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  <  1; i >= 0; --i )  {^177^^^^^176^180^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( key[i].containsKey ( this.composite )  )  {^200^^^^^198^205^if  ( this.composite[i].containsKey ( key )  )  {^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return false;^201^^^^^198^205^return true;^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  |  1; i >= 0; --i )  {^199^^^^^198^205^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i > 0; --i )  {^199^^^^^198^205^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^199^^^^^198^205^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  <<  1; i >= 0; --i )  {^199^^^^^198^205^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return true;^204^^^^^198^205^return false;^[CLASS] CompositeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( value[i].containsValue ( this.composite )  )  {^225^^^^^223^230^if  ( this.composite[i].containsValue ( value )  )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return false;^226^^^^^223^230^return true;^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( this.compositent i = i.length - 1; i >= 0; --i )  {^224^^^^^223^230^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  |  1; i >= 0; --i )  {^224^^^^^223^230^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i > 0; --i )  {^224^^^^^223^230^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^224^^^^^223^230^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  &&  1; i >= 0; --i )  {^224^^^^^223^230^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length ; i >= 0; --i )  {^224^^^^^223^230^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^if  ( 2[i].containsValue ( value )  )  {^225^^^^^223^230^if  ( this.composite[i].containsValue ( value )  )  {^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return true;^229^^^^^223^230^return false;^[CLASS] CompositeMap  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] Object  value  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( compositent i = i.length - 1; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite - 1; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  >>  1; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length - 1; i == 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - ; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - 1; i >= ; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite.length.length - 1; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  <=  1; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - i; i >= 0; --i )  {^251^^^^^249^255^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  entries  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^return key[i].get ( this.composite ) ;^284^^^^^281^288^return this.composite[i].get ( key ) ;^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( this.compositent i = i.length - 1; i >= 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  !=  1; i >= 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i > 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length ; i >= 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - 1; i >= i; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^if  ( 2[i].containsKey ( key )  )  {^283^^^^^281^288^if  ( this.composite[i].containsKey ( key )  )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^if  ( key[i].containsKey ( this.composite )  )  {^283^^^^^281^288^if  ( this.composite[i].containsKey ( key )  )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 1.length - 1; i >= 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  <<  1; i >= 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^282^^^^^281^288^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Variable_Misuse]^return 2[i].get ( key ) ;^284^^^^^281^288^return this.composite[i].get ( key ) ;^[CLASS] CompositeMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return true;^298^^^^^295^302^return false;^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  |  1; i >= 0; --i )  {^296^^^^^295^302^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i < 0; --i )  {^296^^^^^295^302^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^296^^^^^295^302^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - 1; i >= -1; --i )  {^296^^^^^295^302^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  >>  1; i >= 0; --i )  {^296^^^^^295^302^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^return false;^301^^^^^295^302^return true;^[CLASS] CompositeMap  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( this.compositent i = i.length - 1; i >= 0; --i )  {^321^^^^^319^325^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  keys  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  ^  1; i >= 0; --i )  {^321^^^^^319^325^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  keys  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i > 0; --i )  {^321^^^^^319^325^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  keys  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length ; i >= 0; --i )  {^321^^^^^319^325^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  keys  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - 1; i >= i; --i )  {^321^^^^^319^325^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] keySet [RETURN_TYPE] Set   [VARIABLES] CompositeSet  keys  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( this.mutator != null )  {^353^^^^^352^357^if  ( this.mutator == null )  {^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Variable_Misuse]^return this.mutator.put ( this, 2, key, value ) ;^356^^^^^352^357^return this.mutator.put ( this, this.composite, key, value ) ;^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return this.mutator.put ( this, this.composite, value, key ) ;^356^^^^^352^357^return this.mutator.put ( this, this.composite, key, value ) ;^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return this.composite.put ( this, this.mutator, key, value ) ;^356^^^^^352^357^return this.mutator.put ( this, this.composite, key, value ) ;^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return this.mutator.put ( this, value, key, this.composite ) ;^356^^^^^352^357^return this.mutator.put ( this, this.composite, key, value ) ;^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return key.put ( this, this.composite, this.mutator, value ) ;^356^^^^^352^357^return this.mutator.put ( this, this.composite, key, value ) ;^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return this.mutator.put ( this, key, this.composite, value ) ;^356^^^^^352^357^return this.mutator.put ( this, this.composite, key, value ) ;^[CLASS] CompositeMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  V  value  
[BugLab_Wrong_Operator]^if  ( this.mutator != null )  {^382^^^^^381^386^if  ( this.mutator == null )  {^[CLASS] CompositeMap  [METHOD] putAll [RETURN_TYPE] void   Map<? extends K, ? extends V> map [VARIABLES] boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( key[i].containsKey ( this.composite )  )  {^415^^^^^413^420^if  ( this.composite[i].containsKey ( key )  )  {^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^return key[i].remove ( this.composite ) ;^416^^^^^413^420^return this.composite[i].remove ( key ) ;^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( this.compositent i = i.length - 1; i >= 0; --i )  {^414^^^^^413^420^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length   instanceof   1; i >= 0; --i )  {^414^^^^^413^420^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i < 0; --i )  {^414^^^^^413^420^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^414^^^^^413^420^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  &&  1; i >= 0; --i )  {^414^^^^^413^420^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] remove [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^int size = i;^430^^^^^429^435^int size = 0;^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^for  ( sizent i = this.composite.length - 1; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^for  ( int i = this.composite.size - 1; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^for  ( this.compositent i = i.length - 1; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length   instanceof   1; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length - 1; i > 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - i; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  ( int i = this.composite.length  ^  1; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^for  ( int i = this.composite.length - size; i >= 0; --i )  {^431^^^^^429^435^for  ( int i = this.composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^return i;^434^^^^^429^435^return size;^[CLASS] CompositeMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  &  1; i >= 0; --i )  {^452^^^^^450^456^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] boolean  Map[]  composite  temp  CompositeCollection  values  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length - 1; i < 0; --i )  {^452^^^^^450^456^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] boolean  Map[]  composite  temp  CompositeCollection  values  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Literal]^for  ( int i = composite.length - i; i >= 0; --i )  {^452^^^^^450^456^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] boolean  Map[]  composite  temp  CompositeCollection  values  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite - 1; i >= 0; --i )  {^452^^^^^450^456^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] boolean  Map[]  composite  temp  CompositeCollection  values  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Argument_Swapping]^for  ( int i = composite.length.length - 1; i >= 0; --i )  {^452^^^^^450^456^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] boolean  Map[]  composite  temp  CompositeCollection  values  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^for  ( int i = composite.length  ||  1; i >= 0; --i )  {^452^^^^^450^456^for  ( int i = composite.length - 1; i >= 0; --i )  {^[CLASS] CompositeMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] boolean  Map[]  composite  temp  CompositeCollection  values  MapMutator  mutator  long  serialVersionUID  int  i  
[BugLab_Wrong_Operator]^if  ( obj  >>  Map )  {^466^^^^^465^471^if  ( obj instanceof Map )  {^[CLASS] CompositeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^470^^^^^465^471^return false;^[CLASS] CompositeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Map[]  composite  temp  Map  map  MapMutator  mutator  long  serialVersionUID  
[BugLab_Wrong_Literal]^int code = code;^479^^^^^478^484^int code = 0;^[CLASS] CompositeMap  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Entry  entry  boolean  Map[]  composite  temp  MapMutator  mutator  long  serialVersionUID  int  code  
