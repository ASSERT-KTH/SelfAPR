[BugLab_Wrong_Literal]^boolean valid = false;^402^^^^^397^407^boolean valid = true;^[CLASS] CursorableLinkedList Cursor SubCursor   [VARIABLES] 
[BugLab_Wrong_Literal]^boolean nextIndexValid = false;^404^^^^^399^409^boolean nextIndexValid = true;^[CLASS] CursorableLinkedList Cursor SubCursor   [VARIABLES] 
[BugLab_Wrong_Literal]^boolean currentRemovedByAnother = true;^406^^^^^401^411^boolean currentRemovedByAnother = false;^[CLASS] CursorableLinkedList Cursor SubCursor   [VARIABLES] 
[BugLab_Argument_Swapping]^super ( index, parent ) ;^415^^^^^414^417^super ( parent, index ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] <init> [RETURN_TYPE] CursorableLinkedList,int)   CursorableLinkedList<E> parent final int index [VARIABLES] LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  CursorableLinkedList  parent  long  serialVersionUID  int  index  
[BugLab_Wrong_Literal]^valid = false;^416^^^^^414^417^valid = true;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] <init> [RETURN_TYPE] CursorableLinkedList,int)   CursorableLinkedList<E> parent final int index [VARIABLES] LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  CursorableLinkedList  parent  long  serialVersionUID  int  index  
[BugLab_Wrong_Operator]^super (  ( CursorableLinkedList<E> )  sub.parent, index  !=  sub.offset ) ;^586^^^^^585^588^super (  ( CursorableLinkedList<E> )  sub.parent, index + sub.offset ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] <init> [RETURN_TYPE] LinkedSubList,int)   LinkedSubList<E> sub final int index [VARIABLES] LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  index  
[BugLab_Wrong_Literal]^return cursor ( 1 ) ;^126^^^^^125^127^return cursor ( 0 ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] listIterator [RETURN_TYPE] ListIterator   [VARIABLES] LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^return cursor ( -1 ) ;^126^^^^^125^127^return cursor ( 0 ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] listIterator [RETURN_TYPE] ListIterator   [VARIABLES] LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^return cursor ( -1 ) ;^174^^^^^173^175^return cursor ( 0 ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] cursor [RETURN_TYPE] CursorableLinkedList$Cursor   [VARIABLES] LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( size (  )  >= 0 )  {^255^^^^^254^263^if  ( size (  )  > 0 )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] Iterator  it  LinkedSubList  sub  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ref.get (  )  != null )  {^276^^^^^271^281^if  ( ref.get (  )  == null )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] registerCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Argument_Swapping]^for  ( final Iterator<WeakReference<Cursor<E>>> cursors = it.iterator (  ) ; it.hasNext (  ) ; )  {^274^^^^^271^281^for  ( final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] registerCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Variable_Misuse]^for  ( final Iterator<WeakReference<Cursor<E>>> 3 = cursors.iterator (  ) ; it.hasNext (  ) ; )  {^274^^^^^271^281^for  ( final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] registerCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Variable_Misuse]^cursors.add ( new WeakReference<Cursor<E>> ( 4 )  ) ;^280^^^^^271^281^cursors.add ( new WeakReference<Cursor<E>> ( cursor )  ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] registerCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( cur != null )  {^292^^^^^288^303^if  ( cur == null )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Argument_Swapping]^} else if  ( cursor == cur )  {^297^^^^^288^303^} else if  ( cur == cursor )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( cur != cursor )  {^297^^^^^288^303^} else if  ( cur == cursor )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Argument_Swapping]^for  ( final Iterator<WeakReference<Cursor<E>>> cursors = it.iterator (  ) ; it.hasNext (  ) ; )  {^289^^^^^288^303^for  ( final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Argument_Swapping]^for  ( final Iterator<WeakReference<Cursor<E>>> it = cursorssors.iterator (  ) ; it.hasNext (  ) ; )  {^289^^^^^288^303^for  ( final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Argument_Swapping]^for  ( final Iterator<WeakReference<Cursor<E>>> it = curs.iterator (  ) ; it.hasNext (  ) ; )  {^289^^^^^288^303^for  ( final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( cur >= cursor )  {^297^^^^^288^303^} else if  ( cur == cursor )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] unregisterCursor [RETURN_TYPE] void   Cursor<E> cursor [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  WeakReference  ref  Iterator  it  List  cursors  Cursor  cur  cursor  long  serialVersionUID  
[BugLab_Variable_Misuse]^final Iterator<WeakReference<Cursor<E>>> it = 3.iterator (  ) ;^313^^^^^312^323^final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeChanged [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( cursor != null )  {^317^^^^^312^323^if  ( cursor == null )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeChanged [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Variable_Misuse]^final Iterator<WeakReference<Cursor<E>>> it = null.iterator (  ) ;^332^^^^^331^342^final Iterator<WeakReference<Cursor<E>>> it = cursors.iterator (  ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Variable_Misuse]^while  ( 2.hasNext (  )  )  {^333^^^^^331^342^while  ( it.hasNext (  )  )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( cursor != null )  {^336^^^^^331^342^if  ( cursor == null )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Variable_Misuse]^cursor.nodeRemoved ( this ) ;^339^^^^^331^342^cursor.nodeRemoved ( node ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( cursor != null )  {^355^^^^^350^361^if  ( cursor == null )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] broadcastNodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  WeakReference  ref  Iterator  it  List  cursors  Cursor  cursor  long  serialVersionUID  
[BugLab_Argument_Swapping]^final SubCursor<E> cursor = new SubCursor<E> ( fromIndex, subList ) ;^390^^^^^389^393^final SubCursor<E> cursor = new SubCursor<E> ( subList, fromIndex ) ;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  SubCursor  cursor  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  fromIndex  
[BugLab_Variable_Misuse]^if  ( current == null && valid )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( currentRemovedByAnother == null && current )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( current == null || currentRemovedByAnother )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( current != null && currentRemovedByAnother )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^currentRemovedByAnother = true;^443^^^^^431^444^currentRemovedByAnother = false;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^while  ( temp == next )  {^479^^^^^472^488^while  ( temp != next )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Operator]^if  ( nextIndexValid > false )  {^473^^^^^472^488^if  ( nextIndexValid == false )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Operator]^if  ( nextIndexValid != false )  {^473^^^^^472^488^if  ( nextIndexValid == false )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Literal]^if  ( nextIndexValid == true )  {^473^^^^^472^488^if  ( nextIndexValid == false )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Operator]^while  ( temp > next )  {^479^^^^^472^488^while  ( temp != next )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Operator]^if  ( next != parent.header )  {^474^^^^^472^488^if  ( next == parent.header )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Operator]^while  ( temp >= next )  {^479^^^^^472^488^while  ( temp != next )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Literal]^int pos = ;^477^^^^^472^488^int pos = 0;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Literal]^nextIndexValid = false;^485^^^^^472^488^nextIndexValid = true;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Literal]^int pos = 1;^477^^^^^472^488^int pos = 0;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  int  pos  Node  temp  
[BugLab_Wrong_Operator]^if  ( node == next || node == current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^if  ( node != next && node == current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^if  ( node == next && node <= current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^if  ( node >= next && node == current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^if  ( node == next && node != current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node >= next )  {^510^^^^^504^525^} else if  ( node == next )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node < next )  {^510^^^^^504^525^} else if  ( node == next )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Argument_Swapping]^} else if  ( current == node )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node > current )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Literal]^nextIndexValid = true;^522^^^^^504^525^nextIndexValid = false;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = true;^523^^^^^504^525^currentRemovedByAnother = false;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = false;^519^^^^^504^525^currentRemovedByAnother = true;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = true;^514^^^^^504^525^currentRemovedByAnother = false;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = false;^509^^^^^504^525^currentRemovedByAnother = true;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node != next )  {^510^^^^^504^525^} else if  ( node == next )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node != current )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^if  ( node.previous <= current )  {^533^^^^^532^540^if  ( node.previous == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^if  ( node.previous != current )  {^533^^^^^532^540^if  ( node.previous == current )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Argument_Swapping]^} else if  ( node == next.previous )  {^535^^^^^532^540^} else if  ( next.previous == node )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( next.previous < node )  {^535^^^^^532^540^} else if  ( next.previous == node )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Literal]^nextIndexValid = true;^538^^^^^532^540^nextIndexValid = false;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Wrong_Operator]^} else if  ( next.previous <= node )  {^535^^^^^532^540^} else if  ( next.previous == node )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  Node  node  
[BugLab_Variable_Misuse]^if  ( !nextIndexValid )  {^547^^^^^546^550^if  ( !valid )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( nextIndexValid )  {^561^^^^^560^565^if  ( valid )  {^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] close [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^valid = true;^563^^^^^560^565^valid = false;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] close [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^return nextIndex (  )  == sub.size;^592^^^^^591^593^return nextIndex (  )  < sub.size;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^return previousIndex (  )  > 0;^597^^^^^596^598^return previousIndex (  )  >= 0;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^return previousIndex (  )  >= ;^597^^^^^596^598^return previousIndex (  )  >= 0;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Operator]^return super.nextIndex (  )   ||  sub.offset;^602^^^^^601^603^return super.nextIndex (  )  - sub.offset;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Variable_Misuse]^sub.expectedModCount = 2;^608^^^^^606^610^sub.expectedModCount = parent.modCount;^[CLASS] CursorableLinkedList Cursor SubCursor  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  E  obj  long  serialVersionUID  
[BugLab_Wrong_Literal]^boolean valid = false;^402^^^^^397^407^boolean valid = true;^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^boolean nextIndexValid = false;^404^^^^^399^409^boolean nextIndexValid = true;^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Wrong_Literal]^boolean currentRemovedByAnother = true;^406^^^^^401^411^boolean currentRemovedByAnother = false;^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  List  cursors  boolean  currentRemovedByAnother  nextIndexValid  valid  long  serialVersionUID  
[BugLab_Argument_Swapping]^super ( index, parent ) ;^415^^^^^414^417^super ( parent, index ) ;^[CLASS] Cursor  [METHOD] <init> [RETURN_TYPE] CursorableLinkedList,int)   CursorableLinkedList<E> parent final int index [VARIABLES] CursorableLinkedList  parent  int  index  boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Literal]^valid = false;^416^^^^^414^417^valid = true;^[CLASS] Cursor  [METHOD] <init> [RETURN_TYPE] CursorableLinkedList,int)   CursorableLinkedList<E> parent final int index [VARIABLES] CursorableLinkedList  parent  int  index  boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Variable_Misuse]^if  ( 3 == null && currentRemovedByAnother )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Variable_Misuse]^if  ( current == null && valid )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Argument_Swapping]^if  ( currentRemovedByAnother == null && current )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Operator]^if  ( current == null || currentRemovedByAnother )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Operator]^if  ( current != null && currentRemovedByAnother )  {^434^^^^^431^444^if  ( current == null && currentRemovedByAnother )  {^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Literal]^currentRemovedByAnother = true;^443^^^^^431^444^currentRemovedByAnother = false;^[CLASS] Cursor  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Operator]^while  ( temp < next )  {^479^^^^^472^488^while  ( temp != next )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^if  ( nextIndexValid != false )  {^473^^^^^472^488^if  ( nextIndexValid == false )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^if  ( nextIndexValid <= false )  {^473^^^^^472^488^if  ( nextIndexValid == false )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Literal]^if  ( nextIndexValid == true )  {^473^^^^^472^488^if  ( nextIndexValid == false )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^while  ( temp >= next )  {^479^^^^^472^488^while  ( temp != next )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^if  ( next >= parent.header )  {^474^^^^^472^488^if  ( next == parent.header )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^while  ( temp <= next )  {^479^^^^^472^488^while  ( temp != next )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Literal]^int pos = pos;^477^^^^^472^488^int pos = 0;^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Variable_Misuse]^nextIndex = null.size (  ) ;^475^^^^^472^488^nextIndex = parent.size (  ) ;^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Literal]^nextIndexValid = false;^485^^^^^472^488^nextIndexValid = true;^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^if  ( next <= parent.header )  {^474^^^^^472^488^if  ( next == parent.header )  {^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Literal]^int pos = -1;^477^^^^^472^488^int pos = 0;^[CLASS] Cursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] int  pos  boolean  currentRemovedByAnother  nextIndexValid  valid  Node  temp  
[BugLab_Wrong_Operator]^if  ( node == next || node == current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^if  ( node >= next && node == current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^if  ( node == next && node != current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^if  ( node != next && node == current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^if  ( node == next && node >= current )  {^505^^^^^504^525^if  ( node == next && node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node != next )  {^510^^^^^504^525^} else if  ( node == next )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Argument_Swapping]^} else if  ( current == node )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node != current )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Literal]^nextIndexValid = true;^522^^^^^504^525^nextIndexValid = false;^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = true;^523^^^^^504^525^currentRemovedByAnother = false;^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = false;^519^^^^^504^525^currentRemovedByAnother = true;^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = true;^514^^^^^504^525^currentRemovedByAnother = false;^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Literal]^currentRemovedByAnother = false;^509^^^^^504^525^currentRemovedByAnother = true;^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node >= next )  {^510^^^^^504^525^} else if  ( node == next )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Variable_Misuse]^} else if  ( null == current )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^} else if  ( node > current )  {^515^^^^^504^525^} else if  ( node == current )  {^[CLASS] Cursor  [METHOD] nodeRemoved [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^if  ( node.previous != current )  {^533^^^^^532^540^if  ( node.previous == current )  {^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^if  ( node.previous <= current )  {^533^^^^^532^540^if  ( node.previous == current )  {^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Argument_Swapping]^} else if  ( node == next.previous )  {^535^^^^^532^540^} else if  ( next.previous == node )  {^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^} else if  ( next.previous != node )  {^535^^^^^532^540^} else if  ( next.previous == node )  {^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Literal]^nextIndexValid = true;^538^^^^^532^540^nextIndexValid = false;^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Wrong_Operator]^} else if  ( next.previous <= node )  {^535^^^^^532^540^} else if  ( next.previous == node )  {^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Variable_Misuse]^next = 1;^534^^^^^532^540^next = node;^[CLASS] Cursor  [METHOD] nodeInserted [RETURN_TYPE] void   Node<E> node [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  Node  node  
[BugLab_Variable_Misuse]^if  ( !nextIndexValid )  {^547^^^^^546^550^if  ( !valid )  {^[CLASS] Cursor  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Literal]^valid = true;^563^^^^^560^565^valid = false;^[CLASS] Cursor  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  currentRemovedByAnother  nextIndexValid  valid  
[BugLab_Wrong_Operator]^super (  ( CursorableLinkedList<E> )  sub.parent, index  <=  sub.offset ) ;^586^^^^^585^588^super (  ( CursorableLinkedList<E> )  sub.parent, index + sub.offset ) ;^[CLASS] SubCursor  [METHOD] <init> [RETURN_TYPE] LinkedSubList,int)   LinkedSubList<E> sub final int index [VARIABLES] LinkedSubList  sub  int  index  boolean  
[BugLab_Wrong_Operator]^return nextIndex (  )  == sub.size;^592^^^^^591^593^return nextIndex (  )  < sub.size;^[CLASS] SubCursor  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[BugLab_Wrong_Operator]^return previousIndex (  )  < 0;^597^^^^^596^598^return previousIndex (  )  >= 0;^[CLASS] SubCursor  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[BugLab_Wrong_Literal]^return previousIndex (  )  >= 1;^597^^^^^596^598^return previousIndex (  )  >= 0;^[CLASS] SubCursor  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[BugLab_Wrong_Operator]^return super.nextIndex (  )   &  sub.offset;^602^^^^^601^603^return super.nextIndex (  )  - sub.offset;^[CLASS] SubCursor  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  boolean  
[BugLab_Variable_Misuse]^sub.expectedModCount = this;^608^^^^^606^610^sub.expectedModCount = parent.modCount;^[CLASS] SubCursor  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  E  obj  boolean  
