[buglab_swap_variables]^super ( transformer, set ) ;^100^^^^^98^101^super ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] <init> [RETURN_TYPE] Transformer)   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  long  serialVersionUID  
[buglab_swap_variables]^super (  transformer ) ;^100^^^^^98^101^super ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] <init> [RETURN_TYPE] Transformer)   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  long  serialVersionUID  
[buglab_swap_variables]^super ( set ) ;^100^^^^^98^101^super ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] <init> [RETURN_TYPE] Transformer)   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  long  serialVersionUID  
[buglab_swap_variables]^return new TransformedNavigableSet<E> ( transformer, set ) ;^55^^^^^53^56^return new TransformedNavigableSet<E> ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformingNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  long  serialVersionUID  
[buglab_swap_variables]^return new TransformedNavigableSet<E> (  transformer ) ;^55^^^^^53^56^return new TransformedNavigableSet<E> ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformingNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  long  serialVersionUID  
[buglab_swap_variables]^return new TransformedNavigableSet<E> ( set ) ;^55^^^^^53^56^return new TransformedNavigableSet<E> ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformingNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  long  serialVersionUID  
[buglab_swap_variables]^final TransformedNavigableSet<E> decorated = new TransformedNavigableSet<E> ( transformer, set ) ;^75^^^^^72^85^final TransformedNavigableSet<E> decorated = new TransformedNavigableSet<E> ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformedNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  E  value  E[]  values  TransformedNavigableSet  decorated  long  serialVersionUID  
[buglab_swap_variables]^final TransformedNavigableSet<E> decorated = new TransformedNavigableSet<E> (  transformer ) ;^75^^^^^72^85^final TransformedNavigableSet<E> decorated = new TransformedNavigableSet<E> ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformedNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  E  value  E[]  values  TransformedNavigableSet  decorated  long  serialVersionUID  
[buglab_swap_variables]^final TransformedNavigableSet<E> decorated = new TransformedNavigableSet<E> ( set ) ;^75^^^^^72^85^final TransformedNavigableSet<E> decorated = new TransformedNavigableSet<E> ( set, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformedNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  E  value  E[]  values  TransformedNavigableSet  decorated  long  serialVersionUID  
[buglab_swap_variables]^decorated.decorated (  ) .add ( value.transform ( transformer )  ) ;^81^^^^^72^85^decorated.decorated (  ) .add ( transformer.transform ( value )  ) ;^[CLASS] TransformedNavigableSet  [METHOD] transformedNavigableSet [RETURN_TYPE] <E>   NavigableSet<E> set Transformer<? super E, ? extends E> transformer [VARIABLES] NavigableSet  set  Transformer  transformer  boolean  E  value  E[]  values  TransformedNavigableSet  decorated  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( toInclusive, fromInclusive, toElement, fromElement ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet (  fromInclusive, toElement, toInclusive ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, toInclusive, toElement, fromInclusive ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement,  toElement, toInclusive ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( toElement, fromInclusive, fromElement, toInclusive ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive,  toInclusive ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> sub = decorated (  ) .subSet ( fromInclusive, fromElement, toElement, toInclusive ) ;^157^^^^^156^159^final NavigableSet<E> sub = decorated (  ) .subSet ( fromElement, fromInclusive, toElement, toInclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet ( transformer, sub ) ;^158^^^^^156^159^return transformingNavigableSet ( sub, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet (  transformer ) ;^158^^^^^156^159^return transformingNavigableSet ( sub, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet ( sub ) ;^158^^^^^156^159^return transformingNavigableSet ( sub, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] subSet [RETURN_TYPE] NavigableSet   E fromElement boolean fromInclusive E toElement boolean toInclusive [VARIABLES] NavigableSet  sub  boolean  fromInclusive  toInclusive  E  fromElement  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> head = decorated (  ) .headSet ( inclusive, toElement ) ;^163^^^^^162^165^final NavigableSet<E> head = decorated (  ) .headSet ( toElement, inclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] headSet [RETURN_TYPE] NavigableSet   E toElement boolean inclusive [VARIABLES] NavigableSet  head  boolean  inclusive  E  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> head = decorated (  ) .headSet (  inclusive ) ;^163^^^^^162^165^final NavigableSet<E> head = decorated (  ) .headSet ( toElement, inclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] headSet [RETURN_TYPE] NavigableSet   E toElement boolean inclusive [VARIABLES] NavigableSet  head  boolean  inclusive  E  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> head = decorated (  ) .headSet ( toElement ) ;^163^^^^^162^165^final NavigableSet<E> head = decorated (  ) .headSet ( toElement, inclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] headSet [RETURN_TYPE] NavigableSet   E toElement boolean inclusive [VARIABLES] NavigableSet  head  boolean  inclusive  E  toElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet ( transformer, head ) ;^164^^^^^162^165^return transformingNavigableSet ( head, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] headSet [RETURN_TYPE] NavigableSet   E toElement boolean inclusive [VARIABLES] NavigableSet  head  boolean  inclusive  E  toElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet (  transformer ) ;^164^^^^^162^165^return transformingNavigableSet ( head, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] headSet [RETURN_TYPE] NavigableSet   E toElement boolean inclusive [VARIABLES] NavigableSet  head  boolean  inclusive  E  toElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet ( head ) ;^164^^^^^162^165^return transformingNavigableSet ( head, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] headSet [RETURN_TYPE] NavigableSet   E toElement boolean inclusive [VARIABLES] NavigableSet  head  boolean  inclusive  E  toElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> tail = decorated (  ) .tailSet ( inclusive, fromElement ) ;^169^^^^^168^171^final NavigableSet<E> tail = decorated (  ) .tailSet ( fromElement, inclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] tailSet [RETURN_TYPE] NavigableSet   E fromElement boolean inclusive [VARIABLES] NavigableSet  tail  boolean  inclusive  E  fromElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> tail = decorated (  ) .tailSet (  inclusive ) ;^169^^^^^168^171^final NavigableSet<E> tail = decorated (  ) .tailSet ( fromElement, inclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] tailSet [RETURN_TYPE] NavigableSet   E fromElement boolean inclusive [VARIABLES] NavigableSet  tail  boolean  inclusive  E  fromElement  long  serialVersionUID  
[buglab_swap_variables]^final NavigableSet<E> tail = decorated (  ) .tailSet ( fromElement ) ;^169^^^^^168^171^final NavigableSet<E> tail = decorated (  ) .tailSet ( fromElement, inclusive ) ;^[CLASS] TransformedNavigableSet  [METHOD] tailSet [RETURN_TYPE] NavigableSet   E fromElement boolean inclusive [VARIABLES] NavigableSet  tail  boolean  inclusive  E  fromElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet ( transformer, tail ) ;^170^^^^^168^171^return transformingNavigableSet ( tail, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] tailSet [RETURN_TYPE] NavigableSet   E fromElement boolean inclusive [VARIABLES] NavigableSet  tail  boolean  inclusive  E  fromElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet (  transformer ) ;^170^^^^^168^171^return transformingNavigableSet ( tail, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] tailSet [RETURN_TYPE] NavigableSet   E fromElement boolean inclusive [VARIABLES] NavigableSet  tail  boolean  inclusive  E  fromElement  long  serialVersionUID  
[buglab_swap_variables]^return transformingNavigableSet ( tail ) ;^170^^^^^168^171^return transformingNavigableSet ( tail, transformer ) ;^[CLASS] TransformedNavigableSet  [METHOD] tailSet [RETURN_TYPE] NavigableSet   E fromElement boolean inclusive [VARIABLES] NavigableSet  tail  boolean  inclusive  E  fromElement  long  serialVersionUID  
