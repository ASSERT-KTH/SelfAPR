[BugLab_Variable_Misuse]^super ( null ) ;^62^^^^^61^63^super ( map ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] <init> [RETURN_TYPE] Map)   Map<K, V> map [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  Map  map  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^93^^^^^92^94^return true;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] isSetValueChecking [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  AbstractInputCheckedMapDecorator  parent  boolean  
[BugLab_Variable_Misuse]^return new EntrySet ( parent.entrySet (  ) , this ) ;^100^^^^^98^103^return new EntrySet ( map.entrySet (  ) , this ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] long  serialVersionUID  AbstractInputCheckedMapDecorator  parent  boolean  
[BugLab_Variable_Misuse]^return parent.entrySet (  ) ;^102^^^^^98^103^return map.entrySet (  ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] long  serialVersionUID  AbstractInputCheckedMapDecorator  parent  boolean  
[BugLab_Argument_Swapping]^for  ( array.lengthnt i = 0; i < i; i++ )  {^131^^^^^129^135^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > array.length; i++ )  {^131^^^^^129^135^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < array.length; i++ )  {^131^^^^^129^135^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Argument_Swapping]^array[i] = new MapEntry (  ( Map.Entry<K, V> )  parent[i], array ) ;^132^^^^^129^135^array[i] = new MapEntry (  ( Map.Entry<K, V> )  array[i], parent ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Variable_Misuse]^if  ( i > 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length.length > 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array > 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^if  ( array.length >= 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^if  ( array.length > i )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , i ) ;^144^^^^^139^162^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , 0 ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^for  ( result.lengthnt i = 0; i < i; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^for  ( resultnt i = 0; i < i.length; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < result; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= result.length; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^for  ( int i = i; i < result.length; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^result[i] = new MapEntry (  ( Map.Entry<K, V> )  parent[i], result ) ;^148^^^^^139^162^result[i] = new MapEntry (  ( Map.Entry<K, V> )  result[i], parent ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( i > array.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( result.length > i )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( result.length.length > array.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array > result.length.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( result > array.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length > result.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^if  ( result.length >= array.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^System.arraycopy ( result, 0, array, 0, i ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^System.arraycopy ( array, 0, result, 0, result.length ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^System.arraycopy ( result, 0, result.length, 0, array ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^System.arraycopy ( result, i, array, i, result.length ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( i > result.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( array.length > i )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( result.length.length > array )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( result > array.length.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array > result.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length > result )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^if  ( array.length >= result.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^return new MapEntry ( parent, entry ) ;^182^^^^^180^183^return new MapEntry ( entry, parent ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] next [RETURN_TYPE] Map$Entry   [VARIABLES] Entry  entry  AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^value = value.checkSetValue ( parent ) ;^201^^^^^200^203^value = parent.checkSetValue ( value ) ;^[CLASS] AbstractInputCheckedMapDecorator EntrySet EntrySetIterator MapEntry  [METHOD] setValue [RETURN_TYPE] V   V value [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^for  ( arraynt i = 0; i < i.length; i++ )  {^131^^^^^129^135^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= array.length; i++ )  {^131^^^^^129^135^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < array.length; i++ )  {^131^^^^^129^135^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Argument_Swapping]^array[i] = new MapEntry (  ( Map.Entry<K, V> )  parent[i], array ) ;^132^^^^^129^135^array[i] = new MapEntry (  ( Map.Entry<K, V> )  array[i], parent ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  array  int  i  
[BugLab_Variable_Misuse]^if  ( i > 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length.length > 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array > 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^if  ( array.length >= 0 )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^if  ( array.length > i )  {^141^^^^^139^162^if  ( array.length > 0 )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , -1 ) ;^144^^^^^139^162^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , 0 ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , 1 ) ;^144^^^^^139^162^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , 0 ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , i ) ;^144^^^^^139^162^result =  ( Object[] )  Array.newInstance ( array.getClass (  ) .getComponentType (  ) , 0 ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^for  ( result.lengthnt i = 0; i < i; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < result.length.length; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= result.length; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^for  ( int i = i; i < result.length; i++ )  {^147^^^^^139^162^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^result[i] = new MapEntry (  ( Map.Entry<K, V> )  parent[i], result ) ;^148^^^^^139^162^result[i] = new MapEntry (  ( Map.Entry<K, V> )  result[i], parent ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^result[i] = new MapEntry (  ( Map.Entry<K, V> )  result[i], 1 ) ;^148^^^^^139^162^result[i] = new MapEntry (  ( Map.Entry<K, V> )  result[i], parent ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( i > array.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( result.length > i )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( result.length > array.length.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length > result.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^if  ( result.length >= array.length )  {^152^^^^^139^162^if  ( result.length > array.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^System.arraycopy ( result, 0, array, 0, i ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^System.arraycopy ( array, 0, result, 0, result.length ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^System.arraycopy ( result.length, 0, array, 0, result ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^System.arraycopy ( result, i, array, i, result.length ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Literal]^System.arraycopy ( result, , array, , result.length ) ;^157^^^^^139^162^System.arraycopy ( result, 0, array, 0, result.length ) ;^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Variable_Misuse]^if  ( i > result.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length.length > result.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( array.length > result.length.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^if  ( result.length > array.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Wrong_Operator]^if  ( array.length >= result.length )  {^158^^^^^139^162^if  ( array.length > result.length )  {^[CLASS] EntrySet  [METHOD] toArray [RETURN_TYPE] <T>   final T[] array [VARIABLES] AbstractInputCheckedMapDecorator  parent  boolean  long  serialVersionUID  Object[]  result  int  i  T[]  array  
[BugLab_Argument_Swapping]^return new MapEntry ( parent, entry ) ;^182^^^^^180^183^return new MapEntry ( entry, parent ) ;^[CLASS] EntrySetIterator  [METHOD] next [RETURN_TYPE] Map$Entry   [VARIABLES] Entry  entry  AbstractInputCheckedMapDecorator  parent  boolean  
[BugLab_Argument_Swapping]^value = value.checkSetValue ( parent ) ;^201^^^^^200^203^value = parent.checkSetValue ( value ) ;^[CLASS] MapEntry  [METHOD] setValue [RETURN_TYPE] V   V value [VARIABLES] V  value  AbstractInputCheckedMapDecorator  parent  boolean  
