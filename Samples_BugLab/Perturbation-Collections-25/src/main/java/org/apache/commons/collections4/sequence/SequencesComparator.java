[BugLab_Argument_Swapping]^this ( sequence2, sequence1, DefaultEquator.defaultEquator (  )  ) ;^89^^^^^88^90^this ( sequence1, sequence2, DefaultEquator.defaultEquator (  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] List)   List<T> sequence1 List<T> sequence2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  start  Equator  equator  
[BugLab_Argument_Swapping]^final int size = sequence2.size (  )  + sequence1.size (  )  + 2;^110^^^^^105^113^final int size = sequence1.size (  )  + sequence2.size (  )  + 2;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] Equator)   List<T> sequence1 List<T> sequence2 Equator<? super T> equator [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Wrong_Operator]^final int size = sequence1.size (  ==  )  + sequence2.size (  )  + 2;^110^^^^^105^113^final int size = sequence1.size (  )  + sequence2.size (  )  + 2;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] Equator)   List<T> sequence1 List<T> sequence2 Equator<? super T> equator [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Wrong_Operator]^final int size = sequence1.size (  )   ||  sequence2.size (  )  + 2;^110^^^^^105^113^final int size = sequence1.size (  )  + sequence2.size (  )  + 2;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] Equator)   List<T> sequence1 List<T> sequence2 Equator<? super T> equator [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Wrong_Literal]^final int size = sequence1.size (  )  + sequencestart.size (  )  + start;^110^^^^^105^113^final int size = sequence1.size (  )  + sequence2.size (  )  + 2;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] Equator)   List<T> sequence1 List<T> sequence2 Equator<? super T> equator [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Variable_Misuse]^this.start = size;^316^^^^^315^319^this.start = start;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] SequencesComparator$Snake(int,int,int)   final int start final int end final int diag [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( 0, sequence1.size (  ) , 0, script.size (  ) , sequence2 ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( 0, script.size (  ) , 0, sequence2.size (  ) , sequence1 ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( 0, sequence2.size (  ) , 0, sequence1.size (  ) , script ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Wrong_Literal]^buildScript ( end, sequence1.size (  ) , end, sequence2.size (  ) , script ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[BugLab_Variable_Misuse]^int end = size;^144^^^^^143^151^int end = start;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^while  ( start - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^while  ( end - start < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^while  ( end - diag < start && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^while  ( end - diag < end2 && end < end1 && 1.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^while  ( end - diag < end2 && end < end1 && equator.equate ( 2.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end1 - diag < end2 && end < end && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^while  ( diag - end < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end2 - diag < end && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end - diag < end2 && end < equator && end1.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end - diag < end2 && end < end1 && sequence1.equate ( equator.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence2.get ( end ) , sequence1.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^while  ( end - diag < end2 || end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^while  ( end - diag > end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^while  ( end  |  diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end  |  diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^while  ( end - diag < end2 && end <= end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^while  ( end  <<  diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end  <<  diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - start )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence1.get ( sequence2 ) , end.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence1.get ( diag ) , sequence2.get ( end - end )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^&& sequence2.equate ( sequence1.get ( end ) , equator.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence2.get ( end ) , sequence1.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end  >=  diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( size ) , sequence2.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( end.get ( sequence1 ) , sequence2.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( start ) , sequence2.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( end ) , 3.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence1.get ( end ) , diag.get ( end - sequence2 )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Wrong_Operator]^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end  &&  diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^return new Snake ( size, end, diag ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^return new Snake ( start, start, diag ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^return new Snake ( start, end, start ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^return new Snake ( diag, end, start ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^return new Snake ( start, diag, end ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^return new Snake ( start, end, size ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Argument_Swapping]^return new Snake ( end, start, diag ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[BugLab_Variable_Misuse]^final int m = start2 - start1;^172^^^^^157^187^final int m = end1 - start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int m = end1 - offset;^172^^^^^157^187^final int m = end1 - start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int m = start1 - end1;^172^^^^^157^187^final int m = end1 - start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int m = end1  |  start1;^172^^^^^157^187^final int m = end1 - start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int n = sum - start2;^173^^^^^158^188^final int n = end2 - start2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int n = end2 - size;^173^^^^^158^188^final int n = end2 - start2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int n = start2 - end2;^173^^^^^158^188^final int n = end2 - start2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int n = end2  <<  start2;^173^^^^^158^188^final int n = end2 - start2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( start2 == 0 || n == 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( m == 0 || start == 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( n == 0 || m == 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( m == 0 && n == 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( m != 0 || n == 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( m == 0 || n < 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( m == offset || n == offset )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( m == m || n == m )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int delta  = size - n;^178^^^^^163^193^final int delta  = m - n;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int delta  = m - start;^178^^^^^163^193^final int delta  = m - n;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int delta  = n - m;^178^^^^^163^193^final int delta  = m - n;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int delta  = m  ||  n;^178^^^^^163^193^final int delta  = m - n;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int sum    = offset + m;^179^^^^^164^194^final int sum    = n + m;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int sum    = n + offset;^179^^^^^164^194^final int sum    = n + m;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int sum    = m + n;^179^^^^^164^194^final int sum    = n + m;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int sum  &  = n + m;^179^^^^^164^194^final int sum    = n + m;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int offset =  ( size % 2 == 0 ? sum : sum + 1 )  / 2;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  + 2;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int offset =  ( sum % 2 != 0 ? sum : sum + 1 )  / 2;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int offset =  ( sum  &  2 == 0 ? sum : sum + 1 )  / 2;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int offset =  ( sum % 2 == 0 ? sum : sum  &  1 )  / 2;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^final int offset =  ( sum % offset == 0 ? sum : sum + 1 )  / offset;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^final int offset =  ( sum % 2 == 0 ? sum : sum + n )  / 2;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^final int offset =  ( sum % 3 == 0 ? sum : sum + 1 )  / 3;^180^^^^^165^195^final int offset =  ( sum % 2 == 0 ? sum : sum + 1 )  / 2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vDown[1+offset] = start2;^181^^^^^166^196^vDown[1+offset] = start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[2+offset] = start2;^181^^^^^166^196^vDown[1+offset] = start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vUp[1+offset]   = start1 + 1;^182^^^^^167^197^vUp[1+offset]   = end1 + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[1+offset]  &&  = end1 + 1;^182^^^^^167^197^vUp[1+offset]   = end1 + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[1+offset]  <  = end1 + 1;^182^^^^^167^197^vUp[1+offset]   = end1 + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i+offset]   = endi + i;^182^^^^^167^197^vUp[1+offset]   = end1 + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[1+offset]   = end1 ;^182^^^^^167^197^vUp[1+offset]   = end1 + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( size < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < offset && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < x && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < end2 && equator.equate ( 0.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( y < end1 && x < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end1 < x && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < y && end1 < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end2 && y < end1 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && equator < end2 && y.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && y < end2 && equator.equate ( sequence2.get ( x ) , sequence1.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && y < sequence2 && equator.equate ( sequence1.get ( x ) , end2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x < end1 || y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x <= end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x < end1 && y == end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( offset >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= sum && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= start1 && start >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= start1 && y >= offset && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( start1 >= x && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start1 && start2 >= y && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start1 && y >= start2 && sequence1.equate ( equator.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start1 && y >= start2 && equator.equate ( sequence2.get ( x ) , sequence1.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x >= start1 || y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x == start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x >= start1 && y > start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( x == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == -d || k != start && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == -d || k != d && vUp[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( k == -d || k != vDown && d[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( vDown == -d || k != d && k[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == -d && k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k != -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == -d || k != d || vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == -d || k <= d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == -d || k != d && vDown[i-1] <= vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ^  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  !=  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ==  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-sum] < vDown[i+sum] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-delta] < vDown[i+delta] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-x] < vDown[i+x] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-end1] < vDown[i+end1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-k] < vDown[i+k] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vDown[i] = vUp[i-1] + 1;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-1] ;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-x] + x;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vDown[i] = vUp[i+1];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+delta];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( size % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( sizeelta % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( delta % 2 != 0 && delta - d <= start && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 || delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 == 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  >  2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d < k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  <  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d <= k && k > delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d <= k && k <= delta  <  d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  >=  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  <=  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  <=  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % start != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 != -1 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i-delta] <= vUp[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( vUp[i-delta] < vDown[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], offset + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + sum - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start1, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, start, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, start1 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vDown[i-delta], k + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], start2 + start1 - k, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], k + end2 - start2, end1, start1 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  ||  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  <=  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  |  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], start1 + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + y - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - n, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, size, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, size ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], k + end1 - start2, start1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], k + start1 - start2, end2, end1 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( start2[i-delta], k + start1 - vUp, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1   instanceof   start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  !=  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  &&  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], size + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - x, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, offset ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], end1 + start1 - start2, k, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], k + start2 - start1, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], k + start1 - end2, end1, start2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  &&  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  ==  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  <<  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - offset, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, y ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( end2[i-delta], k + start1 - start2, end1, vUp ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  <  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  ^  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( vDown[i-delta] <= vUp[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( vUp[i-delta] == vDown[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + size - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - sum, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], end2 + start1 - start2, end1, k ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( end1[i-delta], k + start1 - start2, vUp, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  !=  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], x + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + x - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( start1[i-delta], k + vUp - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  >>  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  <=  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == size - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == sizeelta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( vUp == delta - d || k != delta + d && k[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( delta == k - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d && k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k != delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  ||  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta + d || vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k >= delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta  &&  d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta + d && vUp[i+1] == vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  >>  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  &&  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  ^  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+2] <= vUp[i-2] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+0] <= vUp[i-0] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+d] <= vUp[i-d] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vUp[i] = vDown[i-1];^219^^^^^215^220^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i-];^219^^^^^215^220^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]  ^  1;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+i] - i;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+n] - n;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( start % 2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( sumelta % 2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( delta % 2 == 0 && -d <= start2 && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 == 0 || -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  |  2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 == 0 && -d < k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 == 0 && -d <= k && k > d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 == 0 && -d == k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 1 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 == i && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[start + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[i + start1] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vUp[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( vDown[i] <= vUp[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( vUp[i] < vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ||  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  >  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], y + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + offset - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, start, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, offset ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vDown[i], k + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], start2 + start1 - k, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], k + start2 - start1, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], end1 + start1 - start2, k, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  <<  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  >  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], start + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - offset, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, offset, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, y ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], k + end1 - start2, start1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], k + start1 - end1, start2, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], k + start1 - start2, end2, end1 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( start2[i], k + start1 - vUp, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  ||  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  &  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, size, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, x ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], start1 + k - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], end2 + start1 - start2, end1, k ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  <  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start2 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - y, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, x, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, start ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( end2[i], k + start1 - start2, end1, vUp ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  >  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  ||  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( vUp[i] > vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  &  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], sum + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - size, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], k + end2 - start2, end1, start1 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1   instanceof   start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  ^  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], size + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + size - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, start2, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, size ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  >=  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int start = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int d = 0; d <= y ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( xnt d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^for  ( dnt i = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int d = 0; d < offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <=  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ^  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for   instanceof   ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  &&  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int d = 0; d == offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ==  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ||  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >=  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <<  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >>  ( int d = 0; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int d = offset; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int d = n; d <= offset ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < start && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && start < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < y && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < end2 && 1.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , null.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( sequence2 < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , x.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && end2 < y && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && y < end2 && sequence2.equate ( sequence1.get ( x ) , equator.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x < end1 && y <= end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= n && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= start1 && offset >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= start1 && y >= n && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( start2 >= start1 && y >= x && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= y && start1 >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start1 && sequence1 >= start2 && equator.equate ( y.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x > start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x >= start1 && y < start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( size == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == -d || k != sum && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == -d || k == d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  |  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  <<  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-0] < vDown[i+0] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-start1] < vDown[i+start1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-offset] + offset;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+end];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( delta % 2 != 0 && delta - d <= size && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( deltaelta % 2 != 0 && d - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 <= 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  ^  2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  ^  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d <= k && k <= delta  &  d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  &  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  ==  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  ||  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  >>  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % offset != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 !=  && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vDown[i-delta] <= vDown[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + offset - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - size, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, sum ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], start1 + k - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  <<  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  >  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - y, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, start2, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  &  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  ^  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  >=  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  <  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, sum, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i-delta], k + start1 - end1, start2, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( vUp[i-delta] > vDown[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  >=  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, start ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( size == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == y - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == yelta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == delta - d || k != delta + d && vDown[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( k == d - delta || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( k == deltaelta - d || k != d + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( k == vUpelta - d || k != delta + d && d[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k >= delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  <  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta  &  d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta + d && vUp[i+1] < vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  >  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  |  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ||  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  <<  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+] <= vUp[i-] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+end1] <= vUp[i-end1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vUp[i] = vDown[i+1] - 1;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]  <  1;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+1] ;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( start1 % 2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( yelta % 2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( delta % 2 == 0 && -d <= start1 && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( d % 2 == 0 && -d <= k && k <= delta  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 >= 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  ||  2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 == 0 && -d <= k && k < d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 3 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 == end1 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[sum + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[i + start] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( delta[i] <= vDown[i + vUp] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  !=  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], x + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, start1 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  &&  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  !=  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k   instanceof   start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  >>  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  ==  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( k[i], vUp + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  &&  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[start2 + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[i + offset] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vDown[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( vUp[i] <= delta[i + vDown] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  &&  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ==  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], start1 + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + y - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - sum, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  ==  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  !=  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int k = -d; k <= start; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( startnt k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^for  ( int d = -d; k <= k; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = -d; k == d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  &  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <=  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >>  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = -d; k < d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = -d; k > d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k -= -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = -d; k <= d; k += end )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( start1 < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && offset < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < size && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && y < end2 && sequence1.equate ( equator.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == -d || k != start1 && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( d == -d || k != k && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k < -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  <=  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-size] < vDown[i+size] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-offset] < vDown[i+offset] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-y] + y;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+start];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( y % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( sumelta % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  !=  2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d <= k && k <= delta  |  d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  !=  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % y != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, x, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k   instanceof   start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], start + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start2 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], start2 + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( k[i-delta], vUp + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, offset, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+end2];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-1] ;^193^^^^^178^208^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-diag] + diag;^193^^^^^178^208^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  &  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = start + offset;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + start1;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int i = offset + k;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int x = vUp[i];^196^^^^^181^211^int x = vDown[i];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = sum - start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - offset + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = start1 - x + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = x - start2 + start1 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = start2 - start1 + x - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = k - start1 + start2 - x;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  !=  start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  ==  start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  >  start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && n < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( sequence1 < end1 && y < end2 && equator.equate ( x.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( sum < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < end1 && sequence2 < end2 && equator.equate ( sequence1.get ( x ) , y.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], sum + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int k = size - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int y = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( sizent k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^for  ( int k = d - delta; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  ==  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta - d; k > delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >>  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  ^  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  &  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta - d; k < delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  !=  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  >>  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for   instanceof   ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  <  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  &&  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ^  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  <<  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >=  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k -= delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = delta - d; k <= delta + d; k += diag )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = delta - d; k <= delta + d; k += 3 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( size >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= start1 && size >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x >= start1 && y >= start1 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= equator && y >= start2 && start1.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( x == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( d == kelta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( k == vUp - d || k != delta + d && delta[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  ==  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k == delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta  >=  d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta   instanceof   d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  !=  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+k] <= vUp[i-k] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+size] <= vUp[i-size] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]  &  1;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+x] - x;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+] - ;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( size % 2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( delta % 2 == 0 && -d <= start && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  >=  2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % start2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 == size && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[size + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[i + x] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  <=  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], offset + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + n - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, end1, sum ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( end1[i], k + start1 - start2, vUp, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  <=  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], start2 + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + sum - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start1, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( vUp[i], k + start1 - end2, end1, start2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  >>  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  ^  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  <<  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[start1 + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[i + sum] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if   instanceof   ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vUp[i] = vDown[i+1] - 1;^217^^^^^202^232^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]  <=  1;^217^^^^^202^232^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+1] ;^217^^^^^202^232^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vUp[i] = vDown[i-1];^219^^^^^204^234^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i-end];^219^^^^^204^234^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k  >=  start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = start2 + offset - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + start2 - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + offset - size;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int i = offset + k - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int i = k + delta - offset;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k + offset  <=  delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k  >=  offset - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int x = vDown[i] - 1;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int x = vUp[i]  &  1;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^int x = vUp[i] - size;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - offset + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + offset - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - sum;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = start2 - start1 + x - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = start1 - x + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = x - start1 + k - start2;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  >  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  >>  start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  &&  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( n ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( start2 )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence1.get ( sequence2 ) , x.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence1.get ( x ) , y.get ( sequence2 )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& sequence2.equate ( sequence1.get ( x ) , equator.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( x.get ( sequence1 ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( size ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( size )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( x ) , 3.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+start2];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^vDown[i] = vUp[i-1] + 1;^193^^^^^178^208^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = delta - d; k <= delta + d; k += m )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]  ==  1;^217^^^^^202^232^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+k] - k;^217^^^^^202^232^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i-start1];^219^^^^^204^234^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], y + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, start1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int k = -d; k <= y; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = sum + offset;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = n - start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + n - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - x;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = x - k + start2 - start1;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  <  start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  <  start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  >>  start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^for  ( int k = deltaelta - d; k <= d + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + size - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + offset - start2;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k + offset  >=  delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k  <=  offset - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int x = vUp[i]  >>  1;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^int x = vUp[i] - y;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = size - start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - n + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + n - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - start;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  &  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  !=  start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  <=  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && size < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( equator < end1 && y < end2 && x.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( offset < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && start2 < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( offset )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& y.equate ( sequence1.get ( x ) , sequence2.get ( equator )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence2.get ( x ) , sequence1.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( start2 ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - start2, start1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^return buildSnake ( start1[i], k + vUp - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  <  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int start1 = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for   instanceof   ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ==  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  &&  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  !=  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <<  ( int k = -d; k <= d; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = -d; k <= d; k += d )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = -d; k <= d; k += 1 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( start2 < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < start1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && y < end2 && equator.equate ( 2.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x < sequence2 && y < end2 && equator.equate ( sequence1.get ( x ) , end1.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x == end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( k == -d || k != size && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == -d || k != d && vDown[i-] < vDown[i+] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-i] + i;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-start1] + start1;^193^^^^^190^194^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+0];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( delta % 2 != 0 && delta - d <= start2 && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( d % 2 != 0 && deltaelta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( kelta % 2 != 0 && delta - d <= d && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  &  2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta  <<  d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d <= k && k < delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta % 2 != 0 && delta - d <= k && k <= delta  >>  d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  <<  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 1 != 0 && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 != k && delta - d <= k && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, x ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  ==  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k + start1  |  start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+k];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-] + ;^193^^^^^178^208^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = y + offset;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - size + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - sum;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  &&  start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  ||  start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( n < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && x < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  ||  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int k = start1elta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( ynt k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta   instanceof   d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  >  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  |  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <=  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  ||  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ||  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  <=  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta - d; k == delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ==  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  <<  ( int k = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( sequence1 >= start1 && y >= start2 && equator.equate ( x.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start2 && y >= start1 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start1 && y >= sequence1 && equator.equate ( start2.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= start1 && equator >= start2 && y.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( x >= sequence2 && y >= start2 && equator.equate ( sequence1.get ( x ) , start1.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( x >= start1 && y == start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k < delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  >  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k <= delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta   instanceof   d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta - d || k != delta + d && vUp[i+1] > vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  >=  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ==  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( k == delta  <=  d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+offset] <= vUp[i-offset] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+start2] <= vUp[i-start2] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( k == delta - d || k != delta + d && vUp[i+end] <= vUp[i-end] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i-start2];^219^^^^^215^220^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]   instanceof   1;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i+offset] - offset;^217^^^^^215^220^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( y % 2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( k % 2 == 0 && -d <= delta && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( delta  ^  2 == 0 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^if  ( delta % 2 == end2 && -d <= k && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[offset + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( vUp[i] == vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  >=  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ^  ( vUp[i] <= vDown[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  <=  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + x - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( vUp[i] <= vDown[i + y] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i], k + start1  &  start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vUp[i] = vUp[i-x];^219^^^^^204^234^vUp[i] = vUp[i-1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + start - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final int i = delta + offset - k;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k + offset  >>  delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k  ^  offset - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^int x = vUp[i] - d;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = start2 - start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + sum - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - offset;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = k - start1 + start2 - x;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^int y = x - k + start2 - start1;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  <  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  ||  start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  ||  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( offset ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& equator.equate ( sequence1.get ( y ) , sequence2.get ( x )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = -d; k <= d; k += end1 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i+2];^191^^^^^176^206^vDown[i] = vDown[i+1];^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^vDown[i] = vDown[i-y] + y;^193^^^^^178^208^vDown[i] = vDown[i-1] + 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^for  ( int k = delta - d; k <= delta + d; k += start2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^vUp[i] = vUp[i+1]  |  1;^217^^^^^202^232^vUp[i] = vUp[i+1] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int k = -d; k <= start1; k += 2 )  {^186^^^^^171^201^for  ( int k = -d; k <= d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + start;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = start1 - start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - n + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + size - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - start;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x   instanceof   start1 + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  >>  start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( int k = xelta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int k = delta  >=  d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = start + offset - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final int i = k + offset - start1;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k + offset  <<  delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^final int i = k   instanceof   offset - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Literal]^int x = vUp[i] ;^222^^^^^207^237^int x = vUp[i] - 1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = n - start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int y = x - start1 + start2 - start2;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x  |  start1 + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^int y = x - start1  ==  start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( x < end1 && start1 < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^return buildSnake ( vUp[i-delta], k  >>  start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^&& sequence1.equate ( equator.get ( x ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^&& equator.equate ( sequence1.get ( x ) , 2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return buildSnake ( vUp[i], k + start1 - x, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final Snake middle = getMiddleSnake ( size, end1, start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final Snake middle = getMiddleSnake ( start1, offset, start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final Snake middle = getMiddleSnake ( start1, end1, m, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final Snake middle = getMiddleSnake ( end1, start1, start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final Snake middle = getMiddleSnake ( start1, start2, end1, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final Snake middle = getMiddleSnake ( start1, end2, start2, end1 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final Snake middle = getMiddleSnake ( y, end1, start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final Snake middle = getMiddleSnake ( start1, end1, y, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^final Snake middle = getMiddleSnake ( start1, end1, start2, start ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final Snake middle = getMiddleSnake ( start2, end1, start1, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^final Snake middle = getMiddleSnake ( end2, end1, start2, start1 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( offset < end1 || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( i < start || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( i < end1 || n < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( i < end1 || j < start )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( i < end1 || end2 < j )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( i < end1 && j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( i <= end1 || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( i < end1 || j > end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^while  ( i < end1 || j <= end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( size < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < offset && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && start1 < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && j < start2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end1 < i && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && j < equator && end2.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && j < end2 && equator.equate ( sequence2.get ( i ) , sequence1.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && sequence2 < end2 && equator.equate ( sequence1.get ( i ) , j.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( i < end1 || j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( i <= end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( i < end1 && j <= end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( offset - start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - size > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > start - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - size )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end1 - end2 > start1 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( start2 - start1 > end2 - end1 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 >= end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  !=  start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2  &  start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( n )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new InsertCommand<T> ( j.get ( sequence2 )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( offset )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( start )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new DeleteCommand<T> ( i.get ( sequence1 )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( offset )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( n )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( y )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( 0.get ( j )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( start1 )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( size )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( n )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new KeepCommand<T> ( i.get ( sequence1 )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( offset )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( start )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( start - start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - x > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > x - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - offset )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( start1 - end1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end1 - end2 > start1 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 >= end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  &  start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2   instanceof   start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new InsertCommand<T> ( j.get ( sequence2 )  )  ) ;^273^^^^^269^275^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( size )  )  ) ;^273^^^^^269^275^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( offset )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new DeleteCommand<T> ( i.get ( sequence1 )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( start )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( start1 )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( size )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( size )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new InsertCommand<T> ( j.get ( sequence2 )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( start1 < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && n < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( j < end1 && i < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( equator < end1 && j < end2 && i.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && j < end2 && sequence2.equate ( sequence1.get ( i ) , equator.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( sequence1 < end1 && j < end2 && equator.equate ( i.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( n )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( offset )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( middle == null || middle.getStart (  )  == x && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - y || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == size && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - n )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( start2 == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - middle )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( middle == null || middle.getStart (  )  == start2 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - end1 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end2 == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - middle || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null && middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle != null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 || middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  != end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  != end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1  >>  end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  != start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  != start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1  >>  start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1  <=  end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1  <  end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( sizent i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^284^^^^^269^299^for  ( int i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^for  ( middlent i = i.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^284^^^^^269^299^for  ( int i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^for  ( int i = middle.getStart (  ) ; i <= middle.getEnd (  ) ; ++i )  {^284^^^^^269^299^for  ( int i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( y )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^script.append ( new KeepCommand<T> ( i.get ( sequence1 )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( size )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( offset, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( start1, middle.getStart (  ) , n, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( script, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , start1 ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( start1, script.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , middle ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( start2, middle.getStart (  ) , start1, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )   <  middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( offset )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( middle.getEnd (  ) , start2, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , start2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, 0 ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( end2.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , middle, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( middle.getEnd (  ) , end2, middle.getEnd (  )  - middle.getDiag (  ) , end1, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , script, end2 ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )   &  middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( start < end1 || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( i < start1 || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^while  ( i < end1 || j < offset )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end2 < end1 || j < i )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^while  ( end1 < i || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( offset < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && offset < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && j < offset && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && j < end2 && 0.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( sum - start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - m > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( start1 - end1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end1 - start1 > start2 - end2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  ==  start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2  >  start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( y )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( size )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( x )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( null.get ( i )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( y - start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - y > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > offset - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - n )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( start2 - start1 > end2 - end1 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  >=  start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2  ||  start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( n )  )  ) ;^273^^^^^269^275^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( sum )  )  ) ;^273^^^^^269^275^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( size )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( n )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && start < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && j < end2 && 3.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , null.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( sum )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( start2 )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( start )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( start1 )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < y && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end2 && j < end1 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < j && end1 < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end2 < end1 && j < i && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( n - start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - y )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end2 - start1 > end1 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  <<  start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( start2 )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( null.get ( i )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( x )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( start )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( start2 )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( n - start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - offset > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - size )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end1 - start2 > end2 - start1 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 < end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1   instanceof   start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2  !=  start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( 2.get ( j )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int i = y;^261^^^^^246^276^int i = start1;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int j = offset;^262^^^^^247^277^int j = start2;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( start < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && sequence1 < end2 && equator.equate ( j.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && equator < end2 && j.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( i < end1 && j < end2 && sequence1.equate ( equator.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( x )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( n < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( i < size && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - x > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > offset - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - n )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  <  start1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2  ||  start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( 4.get ( j )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( sum )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( y )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > n - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^if  ( end1 - start1 > end2 - y )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^if  ( end2 - start1 > end1 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1  >>  start1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^if  ( end1 - start1 > end2  &&  start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new InsertCommand<T> ( sequence2.get ( start2 )  )  ) ;^273^^^^^269^275^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^for  ( startnt i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^284^^^^^269^299^for  ( int i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( start )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( start1 )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( sequence1.get ( n )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^int i = start;^261^^^^^246^276^int i = start1;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new DeleteCommand<T> ( sequence1.get ( y )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( start1, start2.getStart (  ) , middle, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( start1, middle.getStart (  ) , script, middle.getStart (  )  - middle.getDiag (  ) , start2 ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )   >=  middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^script.append ( new KeepCommand<T> ( 3.get ( i )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( middle.getEnd (  ) , size, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , offset, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( end1.getEnd (  ) , middle, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Argument_Swapping]^buildScript ( middle.getEnd (  ) , script, middle.getEnd (  )  - middle.getDiag (  ) , end2, end1 ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Wrong_Operator]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )   ||  middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return n;^327^^^^^326^328^return start;^[CLASS] SequencesComparator Snake  [METHOD] getStart [RETURN_TYPE] int   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return n;^336^^^^^335^337^return end;^[CLASS] SequencesComparator Snake  [METHOD] getEnd [RETURN_TYPE] int   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^return offset;^345^^^^^344^346^return diag;^[CLASS] SequencesComparator Snake  [METHOD] getDiag [RETURN_TYPE] int   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[BugLab_Variable_Misuse]^this.start = end;^316^^^^^315^319^this.start = start;^[CLASS] Snake  [METHOD] <init> [RETURN_TYPE] SequencesComparator$Snake(int,int,int)   final int start final int end final int diag [VARIABLES] int  diag  end  start  boolean  
[BugLab_Variable_Misuse]^this.end   = start;^317^^^^^315^319^this.end   = end;^[CLASS] Snake  [METHOD] <init> [RETURN_TYPE] SequencesComparator$Snake(int,int,int)   final int start final int end final int diag [VARIABLES] int  diag  end  start  boolean  
[BugLab_Variable_Misuse]^this.diag  = start;^318^^^^^315^319^this.diag  = diag;^[CLASS] Snake  [METHOD] <init> [RETURN_TYPE] SequencesComparator$Snake(int,int,int)   final int start final int end final int diag [VARIABLES] int  diag  end  start  boolean  
[BugLab_Variable_Misuse]^return end;^327^^^^^326^328^return start;^[CLASS] Snake  [METHOD] getStart [RETURN_TYPE] int   [VARIABLES] int  diag  end  start  boolean  
[BugLab_Variable_Misuse]^return start;^336^^^^^335^337^return end;^[CLASS] Snake  [METHOD] getEnd [RETURN_TYPE] int   [VARIABLES] int  diag  end  start  boolean  
[BugLab_Variable_Misuse]^return start;^345^^^^^344^346^return diag;^[CLASS] Snake  [METHOD] getDiag [RETURN_TYPE] int   [VARIABLES] int  diag  end  start  boolean  
