[buglab_swap_variables]^this ( sequence2, sequence1, DefaultEquator.defaultEquator (  )  ) ;^89^^^^^88^90^this ( sequence1, sequence2, DefaultEquator.defaultEquator (  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] List)   List<T> sequence1 List<T> sequence2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  start  Equator  equator  
[buglab_swap_variables]^this (  sequence2, DefaultEquator.defaultEquator (  )  ) ;^89^^^^^88^90^this ( sequence1, sequence2, DefaultEquator.defaultEquator (  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] List)   List<T> sequence1 List<T> sequence2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  start  Equator  equator  
[buglab_swap_variables]^this ( sequence1,  DefaultEquator.defaultEquator (  )  ) ;^89^^^^^88^90^this ( sequence1, sequence2, DefaultEquator.defaultEquator (  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] List)   List<T> sequence1 List<T> sequence2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  start  Equator  equator  
[buglab_swap_variables]^final int size = sequence2.size (  )  + sequence1.size (  )  + 2;^110^^^^^105^113^final int size = sequence1.size (  )  + sequence2.size (  )  + 2;^[CLASS] SequencesComparator Snake  [METHOD] <init> [RETURN_TYPE] Equator)   List<T> sequence1 List<T> sequence2 Equator<? super T> equator [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^buildScript ( 0, sequence1.size (  ) , 0, script.size (  ) , sequence2 ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  )  ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^buildScript ( 0, script.size (  ) , 0, sequence2.size (  ) , sequence1 ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^buildScript ( 0.size (  ) , 0, sequence2.size (  ) , script ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^buildScript ( 0, sequence2.size (  ) , 0, sequence1.size (  ) , script ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^buildScript ( 0, sequence1.size (  ) , 0.size (  ) , script ) ;^130^^^^^128^132^buildScript ( 0, sequence1.size (  ) , 0, sequence2.size (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] getScript [RETURN_TYPE] EditScript   [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  boolean  int  diag  end  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end1 - diag < end2 && end < end && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end - end2 < diag && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end2 - diag < end && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end - end1 < end2 && end < diag && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end - diag < equator && end < end1 && end2.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end - diag < end2 && end < sequence1 && equator.equate ( end1.get ( end ) , sequence2.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end - diag < end2 && end < end1 && sequence2.equate ( sequence1.get ( end ) , equator.get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) .get ( end - diag )  )  )  {^145^146^147^^^143^151^while  ( end - diag < end2 && end < end1 && equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence1.get ( diag ) , sequence2.get ( end - end )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^&& diag.equate ( sequence1.get ( end ) , sequence2.get ( end - equator )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence2.get ( end ) , sequence1.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence1.get ( end ) .get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( end.get ( sequence1 ) , sequence2.get ( end - diag )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence1.get ( end ) , diag.get ( end - sequence2 )  )  )  {^147^^^^^143^151^&& equator.equate ( sequence1.get ( end ) , sequence2.get ( end - diag )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^return new Snake ( diag, end, start ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^return new Snake (  end, diag ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^return new Snake ( start, diag, end ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^return new Snake ( start,  diag ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^return new Snake ( start, end ) ;^150^^^^^143^151^return new Snake ( start, end, diag ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildSnake [RETURN_TYPE] SequencesComparator$Snake   final int start final int diag final int end1 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  diag  end  end1  end2  size  start  Equator  equator  
[buglab_swap_variables]^final int m = start1 - end1;^172^^^^^157^187^final int m = end1 - start1;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int n = start2 - end2;^173^^^^^158^188^final int n = end2 - start2;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( n == 0 || m == 0 )  {^174^^^^^159^189^if  ( m == 0 || n == 0 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int delta  = n - m;^178^^^^^163^193^final int delta  = m - n;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int sum    = m + n;^179^^^^^164^194^final int sum    = n + m;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( y < end1 && x < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < equator && y < end2 && end1.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < y && end1 < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && end2 < y && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && y < end2 && equator.equate ( sequence2.get ( x ) , sequence1.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) .get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( y >= start1 && x >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= start2 && y >= start1 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= start1 && equator >= start2 && y.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= sequence1 && y >= start2 && equator.equate ( start1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= start1 && y >= start2 && equator.equate ( sequence2.get ( x ) , sequence1.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) .get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( d == -d || k != k && vDown[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( k == -d || k != vDown && d[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( vDown[i-delta] <= vUp[i] )  {^205^^^^^190^220^if  ( vUp[i-delta] <= vDown[i] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta] + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + end2 - start2, end1, start1 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start2 - start1, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start1 -  end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start1 - start2, end2, end1 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start1 - start2,  end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start1 - start2, end1 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( end1[i-delta], k + start1 - start2, vUp, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start1 - end1, start2, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], end2 + start1 - start2, end1, k ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( k[i-delta], vUp + start1 - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + start1 - end2, end1, start2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( end2[i-delta], k + start1 - start2, end1, vUp ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], end1 + start1 - start2, k, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], start1 + k - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], k + end1 - start2, start1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( start2[i-delta], k + start1 - vUp, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i-delta], start2 + start1 - k, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( delta == k - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( k == deltaelta - d || k != d + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( vUp == delta - d || k != delta + d && k[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( kelta % 2 == 0 && -d <= d && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( vDown[i] <= vUp[i + delta] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], start2 + start1 - k, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i] + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + end2 - start2, end1, start1 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start2 - start1, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start1 -  end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], end1 + start1 - start2, k, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start1 - start2,  end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start1 - end2, end1, start2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start1 - start2, end1 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( start1[i], k + vUp - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], start1 + k - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + end1 - start2, start1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start1 - start2, end2, end1 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], k + start1 - end1, start2, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( end1[i], k + start1 - start2, vUp, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( delta[i] <= vDown[i + vUp] )  {^231^^^^^216^246^if  ( vUp[i] <= vDown[i + delta] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( k[i], vUp + start1 - start2, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^for  ( int offset = 0; d <= d ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^for  ( offsetnt d = 0; d <= i ; ++d )  {^184^^^^^169^199^for  ( int d = 0; d <= offset ; ++d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( end1 < x && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( end2 < end1 && y < x && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && y < equator && end2.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( start2 >= start1 && y >= x && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( start1 >= x && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= sequence2 && y >= start2 && equator.equate ( sequence1.get ( x ) , start1.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( vDown == -d || k != d && k[i-1] < vDown[i+1] )  {^190^^^^^175^205^if  ( k == -d || k != d && vDown[i-1] < vDown[i+1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( start1[i-delta], k + vUp - start2, end1, end2 ) ;^206^^^^^191^221^return buildSnake ( vUp[i-delta], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( d == kelta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( k == vUpelta - d || k != delta + d && d[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( end2[i], k + start1 - start2, end1, vUp ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( vUp[i], end2 + start1 - start2, end1, k ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end2 && y < end1 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( sequence1 < end1 && y < end2 && equator.equate ( x.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( kelta % 2 != 0 && delta - d <= d && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int i = offset + k;^189^^^^^174^204^final int i = k + offset;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = start1 - x + start2 - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = x - start1 + k - start2;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = x - k + start2 - start1;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( equator < end1 && y < end2 && x.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && y < end2 && sequence1.equate ( equator.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && sequence2 < end2 && equator.equate ( sequence1.get ( x ) , y.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^for  ( knt i = delta - d; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= y && start1 >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( equator >= start1 && y >= start2 && x.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x >= start1 && y >= sequence1 && equator.equate ( start2.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( k == vUp - d || k != delta + d && delta[i+1] <= vUp[i-1] )  {^215^216^^^^200^230^if  ( k == delta - d || k != delta + d && vUp[i+1] <= vUp[i-1] )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( d % 2 == 0 && -d <= k && k <= delta  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( k % 2 == 0 && -d <= delta && k <= d  )  {^230^^^^^215^245^if  ( delta % 2 == 0 && -d <= k && k <= d  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^return buildSnake ( start2[i], k + start1 - vUp, end1, end2 ) ;^232^^^^^217^247^return buildSnake ( vUp[i], k + start1 - start2, end1, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int i = delta + offset - k;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int i = k + delta - offset;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = start2 - start1 + x - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = x - start2 + start1 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = x - start1 + k - start2;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence1.get ( y ) , sequence2.get ( x )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& y.equate ( sequence1.get ( x ) , sequence2.get ( equator )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& sequence1.equate ( equator.get ( x ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( x.get ( sequence1 ) , sequence2.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence2.get ( x ) , sequence1.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence1.get ( x ) .get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& equator.equate ( sequence1.get ( x ) , y.get ( sequence2 )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = start2 - start1 + x - k;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = k - start1 + start2 - x;^197^^^^^182^212^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^for  ( int k = d - delta; k <= delta + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^for  ( int k = deltaelta - d; k <= d + d; k += 2 )  {^212^^^^^197^227^for  ( int k = delta - d; k <= delta + d; k += 2 )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final int i = offset + k - delta;^214^^^^^199^229^final int i = k + offset - delta;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = start1 - x + start2 - k;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^int y = x - k + start2 - start1;^223^^^^^208^238^int y = x - start1 + start2 - k;^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && sequence1 < end2 && equator.equate ( y.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && y < end2 && sequence2.equate ( sequence1.get ( x ) , equator.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( x < end1 && equator < end2 && y.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( sequence2 < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , x.get ( y )  )  )  {^199^^^^^184^214^while  ( x < end1 && y < end2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( k % 2 != 0 && delta - d <= delta && k <= delta + d )  {^204^^^^^189^219^if  ( delta % 2 != 0 && delta - d <= k && k <= delta + d )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( sequence1 >= start1 && y >= start2 && equator.equate ( x.get ( x ) , sequence2.get ( y )  )  )  {^224^225^^^^209^239^while  ( x >= start1 && y >= start2 && equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^&& sequence2.equate ( sequence1.get ( x ) , equator.get ( y )  )  )  {^225^^^^^210^240^&& equator.equate ( sequence1.get ( x ) , sequence2.get ( y )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] getMiddleSnake [RETURN_TYPE] SequencesComparator$Snake   final int start1 final int end1 final int start2 final int end2 [VARIABLES] List  sequence1  sequence2  int[]  vDown  vUp  boolean  int  d  delta  diag  end  end1  end2  i  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( end1, start1, start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake (  end1, start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( start1, start2, end1, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( start1,  start2, end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( start1, end1,  end2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( start1, end1, end2, start2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( start1, end1, start2 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^final Snake middle = getMiddleSnake ( end2, end1, start2, start1 ) ;^255^^^^^240^270^final Snake middle = getMiddleSnake ( start1, end1, start2, end2 ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( i < j || end1 < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( j < end1 || i < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( i < end2 || j < end1 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( j < end1 && i < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < j && end1 < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && end2 < j && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && j < equator && end2.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && j < end2 && equator.equate ( sequence2.get ( i ) , sequence1.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) .get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end2 - start1 > end1 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end1 - start1 > start2 - end2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( start2 - start1 > end2 - end1 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new InsertCommand<T> ( j.get ( sequence2 )  )  ) ;^273^^^^^264^276^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new DeleteCommand<T> ( i.get ( sequence1 )  )  ) ;^270^^^^^264^276^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new KeepCommand<T> ( i.get ( sequence1 )  )  ) ;^265^^^^^250^280^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( start1 - end1 > end2 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end1 - start2 > end2 - start1 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new InsertCommand<T> ( j.get ( sequence2 )  )  ) ;^273^^^^^269^275^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new DeleteCommand<T> ( i.get ( sequence1 )  )  ) ;^270^^^^^255^285^script.append ( new DeleteCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new InsertCommand<T> ( j.get ( sequence2 )  )  ) ;^273^^^^^258^288^script.append ( new InsertCommand<T> ( sequence2.get ( j )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && sequence2 < end2 && equator.equate ( sequence1.get ( i ) , j.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && j < end2 && sequence2.equate ( sequence1.get ( i ) , equator.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( sequence1 < end1 && j < end2 && equator.equate ( i.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( middle == null || middle.getStart (  )  == start1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == end1 && middle.getDiag (  )  == start1 - start2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - start2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - end2 )  {^257^258^259^^^242^272^if  ( middle == null || middle.getStart (  )  == end1 && middle.getDiag (  )  == end1 - end2 || middle.getEnd (  )  == start1 && middle.getDiag (  )  == start1 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^script.append ( new KeepCommand<T> ( i.get ( sequence1 )  )  ) ;^285^^^^^270^300^script.append ( new KeepCommand<T> ( sequence1.get ( i )  )  ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( start2, middle.getStart (  ) , start1, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript (  middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( start1, script.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , middle ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( start1.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( start1, start2.getStart (  ) , middle, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( start1, middle.getStart (  ) ,  middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  )  ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( end2.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , middle, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) , end1.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) , end2, middle.getEnd (  )  - middle.getDiag (  ) , end1, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) ,  middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) ,  script ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) , script, middle.getEnd (  )  - middle.getDiag (  ) , end2, end1 ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2 ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^while  ( end1 < i || j < end2 )  {^263^^^^^248^278^while  ( i < end1 || j < end2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < sequence2 && j < end2 && equator.equate ( sequence1.get ( i ) , end1.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( start1 - end1 > end2 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end1 - start1 > start2 - end2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && sequence1 < end2 && equator.equate ( j.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && j < end2 && sequence1.equate ( equator.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end2 < end1 && j < i && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < equator && j < end2 && end1.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end1 - start2 > end2 - start1 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end1 - end2 > start1 - start2 )  {^269^^^^^254^284^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end1 && equator < end2 && j.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( i < end2 && j < end1 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^264^^^^^249^279^if  ( i < end1 && j < end2 && equator.equate ( sequence1.get ( i ) , sequence2.get ( j )  )  )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^if  ( end1 - end2 > start1 - start2 )  {^269^^^^^264^276^if  ( end1 - start1 > end2 - start2 )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^for  ( middlent i = i.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^284^^^^^269^299^for  ( int i = middle.getStart (  ) ; i < middle.getEnd (  ) ; ++i )  {^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle, start1.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^281^282^283^^^266^296^buildScript ( start1, middle.getStart (  ) , start2, middle.getStart (  )  - middle.getDiag (  ) , script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( script.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, middle ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
[buglab_swap_variables]^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , script, end2 ) ;^287^288^289^^^272^302^buildScript ( middle.getEnd (  ) , end1, middle.getEnd (  )  - middle.getDiag (  ) , end2, script ) ;^[CLASS] SequencesComparator Snake  [METHOD] buildScript [RETURN_TYPE] void   final int start1 final int end1 final int start2 final int end2 EditScript<T> script [VARIABLES] boolean  Snake  middle  List  sequence1  sequence2  int[]  vDown  vUp  EditScript  script  int  d  delta  diag  end  end1  end2  i  j  k  m  n  offset  size  start  start1  start2  sum  x  y  Equator  equator  
