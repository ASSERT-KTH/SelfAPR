[BugLab_Wrong_Literal]^this ( DEFAULT_MAX_SIZE, DEFAULT_LOAD_FACTOR, true ) ;^77^^^^^76^78^this ( DEFAULT_MAX_SIZE, DEFAULT_LOAD_FACTOR, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap()   [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  maxSize  
[BugLab_Variable_Misuse]^this ( DEFAULT_MAX_SIZE, DEFAULT_LOAD_FACTOR ) ;^87^^^^^86^88^this ( maxSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int)   final int maxSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  maxSize  
[BugLab_Variable_Misuse]^this ( DEFAULT_MAX_SIZE, initialSize, DEFAULT_LOAD_FACTOR ) ;^100^^^^^99^101^this ( maxSize, initialSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int)   final int maxSize final int initialSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this ( maxSize, DEFAULT_MAX_SIZE, DEFAULT_LOAD_FACTOR ) ;^100^^^^^99^101^this ( maxSize, initialSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int)   final int maxSize final int initialSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( initialSize, maxSize, DEFAULT_LOAD_FACTOR ) ;^100^^^^^99^101^this ( maxSize, initialSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int)   final int maxSize final int initialSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this ( initialSize, DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^112^^^^^111^113^this ( maxSize, DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,boolean)   final int maxSize final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( scanUntilRemovable, DEFAULT_LOAD_FACTOR, maxSize ) ;^112^^^^^111^113^this ( maxSize, DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,boolean)   final int maxSize final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this ( initialSize, loadFactor, false ) ;^125^^^^^124^126^this ( maxSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float)   final int maxSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( loadFactor, maxSize, false ) ;^125^^^^^124^126^this ( maxSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float)   final int maxSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Literal]^this ( maxSize, loadFactor, true ) ;^125^^^^^124^126^this ( maxSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float)   final int maxSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this ( initialSize, initialSize, loadFactor, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this ( maxSize, DEFAULT_MAX_SIZE, loadFactor, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( initialSize, maxSize, loadFactor, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( loadFactor, initialSize, maxSize, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Literal]^this ( maxSize, initialSize, loadFactor, true ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this ( initialSize, maxSize, loadFactor, scanUntilRemovable ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( scanUntilRemovable, maxSize, loadFactor, maxSize ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( loadFactor, maxSize, maxSize, scanUntilRemovable ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^super ( maxSize, loadFactor ) ;^175^^^^^170^184^super ( initialSize, loadFactor ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^super ( loadFactor, initialSize ) ;^175^^^^^170^184^super ( initialSize, loadFactor ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^if  ( initialSize < 1 )  {^176^^^^^170^184^if  ( maxSize < 1 )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^if  ( maxSize == 1 )  {^176^^^^^170^184^if  ( maxSize < 1 )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^if  ( DEFAULT_MAX_SIZE > maxSize )  {^179^^^^^170^184^if  ( initialSize > maxSize )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^if  ( initialSize > DEFAULT_MAX_SIZE )  {^179^^^^^170^184^if  ( initialSize > maxSize )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^if  ( maxSize > initialSize )  {^179^^^^^170^184^if  ( initialSize > maxSize )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^if  ( initialSize >= maxSize )  {^179^^^^^170^184^if  ( initialSize > maxSize )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^this.maxSize = initialSize;^182^^^^^170^184^this.maxSize = maxSize;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Literal]^this ( map, true ) ;^196^^^^^195^197^this ( map, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] Map)   Map<? extends K, ? extends V> map [VARIABLES] boolean  scanUntilRemovable  Map  map  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^this ( scanUntilRemovable.size (  ) , DEFAULT_LOAD_FACTOR, map ) ;^211^^^^^210^213^this ( map.size (  ) , DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] Map,boolean)   Map<? extends K, ? extends V> map final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  Map  map  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Literal]^return get ( key, false ) ;^227^^^^^226^228^return get ( key, true ) ;^[CLASS] LRUMap  [METHOD] get [RETURN_TYPE] V   Object key [VARIABLES] Object  key  boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^if  ( entry != null )  {^245^^^^^243^252^if  ( entry == null )  {^[CLASS] LRUMap  [METHOD] get [RETURN_TYPE] V   Object key final boolean updateToMRU [VARIABLES] LinkEntry  entry  Object  key  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^if  ( scanUntilRemovable )  {^248^^^^^243^252^if  ( updateToMRU )  {^[CLASS] LRUMap  [METHOD] get [RETURN_TYPE] V   Object key final boolean updateToMRU [VARIABLES] LinkEntry  entry  Object  key  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^return null.getValue (  ) ;^251^^^^^243^252^return entry.getValue (  ) ;^[CLASS] LRUMap  [METHOD] get [RETURN_TYPE] V   Object key final boolean updateToMRU [VARIABLES] LinkEntry  entry  Object  key  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^if  ( entry.after <= header )  {^263^^^^^262^282^if  ( entry.after != header )  {^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Argument_Swapping]^} else if  ( header == entry )  {^278^^^^^262^282^} else if  ( entry == header )  {^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^} else if  ( entry >= header )  {^278^^^^^262^282^} else if  ( entry == header )  {^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  &&  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  <=  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  |  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  <<  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^if ( entry.before != null )  {^266^^^^^262^282^if ( entry.before == null )  {^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Variable_Misuse]^} else if  ( entry == 0 )  {^278^^^^^262^282^} else if  ( entry == header )  {^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  ^  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  ==  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Can't move header to MRU" + "  &  ( please report this to dev@commons.apache.org ) " ) ;^279^280^^^^262^282^throw new IllegalStateException ( "Can't move header to MRU" + "  ( please report this to dev@commons.apache.org ) " ) ;^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[BugLab_Wrong_Operator]^while  ( reuse != header || reuse != null )  {^320^^^^^305^335^while  ( reuse != header && reuse != null )  {^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^while  ( reuse == header && reuse != null )  {^320^^^^^305^335^while  ( reuse != header && reuse != null )  {^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^while  ( reuse != header && reuse == null )  {^320^^^^^305^335^while  ( reuse != header && reuse != null )  {^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Literal]^removeLRUEntry = false;^322^^^^^307^337^removeLRUEntry = true;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^if  ( reuse != null )  {^327^^^^^312^342^if  ( reuse == null )  {^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " hashIndex=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, size" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " header.after=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " key" + header.before + " header.before=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  >  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " null=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " initialSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " value" + header.before + " key=" + key + " header.before=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.before" + header.after + " header.after" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, maxSize" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.after=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  |  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, value" + header.after + " header.before" + header.before + " key=" + key + " header.after=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, 4" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " maxSize" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.before=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " size=" + key + " value=" + value + " key=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " size" + header.before + " key=" + key + " value=" + value + " header.before=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  ==  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  &  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^if  ( reuse != null )  {^339^^^^^324^354^if  ( reuse == null )  {^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " initialSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " value" + header.before + " key=" + key + " header.before=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.before=" + header.after + " header.after" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, size=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " header.after=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " maxSize" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.before=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  >  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " hashIndex=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " key" + header.before + " header.before=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, value=" + header.after + " header.before" + header.before + " key=" + key + " header.after=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " size" + header.before + " key=" + key + " value=" + value + " header.before=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " size=" + key + " value=" + value + " key=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, maxSize=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.after=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  <<  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " 1=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, key=" + header.after + " header.before" + header.before + " header.after=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  ^  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " this" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  <  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^reuseMapping ( reuse, maxSize, hashCode, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^reuseMapping ( reuse, hashIndex, maxSize, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( value, hashIndex, hashCode, key, reuse ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( reuse, value, hashCode, key, hashIndex ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( reuse, hashIndex, value, key, hashCode ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( reuse, hashIndex, hashCode, value, key ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  |  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  ||  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " 1=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  !=  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " 2" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Literal]^boolean removeLRUEntry = true;^318^^^^^303^333^boolean removeLRUEntry = false;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.after=null, key" + header.after + " header.before" + header.before + " header.after=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  >>  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^reuseMapping ( reuse, hashIndex, initialSize, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( hashCode, hashIndex, reuse, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( reuse, hashCode, hashIndex, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( key, hashIndex, hashCode, reuse, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^removeLRUEntry = removeLRU ( null ) ;^335^^^^^319^336^removeLRUEntry = removeLRU ( reuse ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " 3=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  >>  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  <  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  <=  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.after=null, header.after"  ||  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  &  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "reuse=null, header.after="  !=  header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^reuseMapping ( null, hashIndex, hashCode, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( reuse, hashIndex, key, hashCode, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( reuse, key, hashCode, hashIndex, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " this" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " null=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " 0=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Argument_Swapping]^reuseMapping ( hashIndex, reuse, hashCode, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[BugLab_Wrong_Operator]^while  ( loop != entry || loop != null )  {^376^^^^^361^391^while  ( loop != entry && loop != null )  {^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^while  ( loop == entry && loop != null )  {^376^^^^^361^391^while  ( loop != entry && loop != null )  {^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^while  ( loop != entry && loop == null )  {^376^^^^^361^391^while  ( loop != entry && loop != null )  {^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^if  ( loop != null )  {^380^^^^^365^395^if  ( loop == null )  {^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " initialSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " key=" + previous + " previous=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " value=" + previous + " key=" + key + " previous=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, previous[removeIndex]=" + data[removeIndex] + " data=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " size=" + key + " value=" + value + " key=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]="  <  data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " maxSize=" + previous + " key=" + key + " value=" + value + " size=" + size + " previous=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, size[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " data=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]="  ==  data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " removeIndex=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]="  >=  data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, key[removeIndex]=" + data[removeIndex] + " previous=" + previous + " data=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]="   instanceof   data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " this=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^removeEntry ( entry, maxSize, previous ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^removeEntry ( removeIndex, entry, previous ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^removeEntry ( entry, previous, removeIndex ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^reuseEntry ( entry, maxSize, hashCode, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^reuseEntry ( entry, hashIndex, removeIndex, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( key, hashIndex, hashCode, entry, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( entry, hashCode, hashIndex, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( entry, hashIndex, hashCode, value, key ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( entry, hashIndex, value, key, hashCode ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^addEntry ( entry, removeIndex ) ;^392^^^^^377^407^addEntry ( entry, hashIndex ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^addEntry ( hashIndex, entry ) ;^392^^^^^377^407^addEntry ( entry, hashIndex ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " size=" + previous + " key=" + key + " value=" + value + " previous=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " removeIndex=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "NPE, value=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " entry=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  >>  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  <=  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  >=  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  >  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ||  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  <<  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry="  ^  entry  ^  " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry="  ==  entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^final HashEntry<K, V>[] tmp = 3;^373^^^^^358^388^final HashEntry<K, V>[] tmp = data;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " 4=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]="  ^  data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " initialSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "NPE, key=" + entry + " entryIsHeader=" +  ( entry==header )  + " entry=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ^  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  &&  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +   instanceof   ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ==  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry="  !=  entry  !=  " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "NPE, entry="  &&  entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^removeEntry ( entry, initialSize, previous ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^removeEntry ( previous, removeIndex, entry ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Variable_Misuse]^reuseEntry ( entry, removeIndex, hashCode, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( hashCode, hashIndex, entry, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( entry, key, hashCode, hashIndex, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Argument_Swapping]^reuseEntry ( value, hashIndex, hashCode, key, entry ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[BugLab_Wrong_Literal]^return false;^437^^^^^436^438^return true;^[CLASS] LRUMap  [METHOD] removeLRU [RETURN_TYPE] boolean   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
[BugLab_Variable_Misuse]^return size >= removeIndex;^447^^^^^446^448^return size >= maxSize;^[CLASS] LRUMap  [METHOD] isFull [RETURN_TYPE] boolean   [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
[BugLab_Argument_Swapping]^return maxSize >= size;^447^^^^^446^448^return size >= maxSize;^[CLASS] LRUMap  [METHOD] isFull [RETURN_TYPE] boolean   [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
[BugLab_Wrong_Operator]^return size > maxSize;^447^^^^^446^448^return size >= maxSize;^[CLASS] LRUMap  [METHOD] isFull [RETURN_TYPE] boolean   [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
[BugLab_Variable_Misuse]^return initialSize;^456^^^^^455^457^return maxSize;^[CLASS] LRUMap  [METHOD] maxSize [RETURN_TYPE] int   [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
[BugLab_Variable_Misuse]^return updateToMRU;^467^^^^^466^468^return scanUntilRemovable;^[CLASS] LRUMap  [METHOD] isScanUntilRemovable [RETURN_TYPE] boolean   [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
[BugLab_Variable_Misuse]^out.writeInt ( initialSize ) ;^505^^^^^504^507^out.writeInt ( maxSize ) ;^[CLASS] LRUMap  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  ObjectOutputStream  out  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
