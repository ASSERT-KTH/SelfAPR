[buglab_swap_variables]^this ( initialSize, maxSize, DEFAULT_LOAD_FACTOR ) ;^100^^^^^99^101^this ( maxSize, initialSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int)   final int maxSize final int initialSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this (  initialSize, DEFAULT_LOAD_FACTOR ) ;^100^^^^^99^101^this ( maxSize, initialSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int)   final int maxSize final int initialSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize,  DEFAULT_LOAD_FACTOR ) ;^100^^^^^99^101^this ( maxSize, initialSize, DEFAULT_LOAD_FACTOR ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int)   final int maxSize final int initialSize [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( scanUntilRemovable, DEFAULT_LOAD_FACTOR, maxSize ) ;^112^^^^^111^113^this ( maxSize, DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,boolean)   final int maxSize final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this (  DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^112^^^^^111^113^this ( maxSize, DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,boolean)   final int maxSize final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize, DEFAULT_LOAD_FACTOR ) ;^112^^^^^111^113^this ( maxSize, DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,boolean)   final int maxSize final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( loadFactor, maxSize, false ) ;^125^^^^^124^126^this ( maxSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float)   final int maxSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this (  loadFactor, false ) ;^125^^^^^124^126^this ( maxSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float)   final int maxSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize,  false ) ;^125^^^^^124^126^this ( maxSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float)   final int maxSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( initialSize, maxSize, loadFactor, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this (  initialSize, loadFactor, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize,  loadFactor, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize, loadFactor, initialSize, false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize, initialSize,  false ) ;^141^^^^^140^142^this ( maxSize, initialSize, loadFactor, false ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float)   final int maxSize final int initialSize final float loadFactor [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( loadFactor, maxSize, maxSize, scanUntilRemovable ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this (  maxSize, loadFactor, scanUntilRemovable ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize, maxSize, scanUntilRemovable, loadFactor ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize, maxSize,  scanUntilRemovable ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( maxSize, maxSize, loadFactor ) ;^155^^^^^154^156^this ( maxSize, maxSize, loadFactor, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,float,boolean)   final int maxSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^super ( loadFactor, initialSize ) ;^175^^^^^170^184^super ( initialSize, loadFactor ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^super (  loadFactor ) ;^175^^^^^170^184^super ( initialSize, loadFactor ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^super ( initialSize ) ;^175^^^^^170^184^super ( initialSize, loadFactor ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^if  ( maxSize > initialSize )  {^179^^^^^170^184^if  ( initialSize > maxSize )  {^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] LRUMap(int,int,float,boolean)   final int maxSize final int initialSize final float loadFactor final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  float  loadFactor  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( scanUntilRemovable.size (  ) , DEFAULT_LOAD_FACTOR, map ) ;^211^^^^^210^213^this ( map.size (  ) , DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] Map,boolean)   Map<? extends K, ? extends V> map final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  Map  map  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^this ( map.size (  ) , DEFAULT_LOAD_FACTOR ) ;^211^^^^^210^213^this ( map.size (  ) , DEFAULT_LOAD_FACTOR, scanUntilRemovable ) ;^[CLASS] LRUMap  [METHOD] <init> [RETURN_TYPE] Map,boolean)   Map<? extends K, ? extends V> map final boolean scanUntilRemovable [VARIABLES] boolean  scanUntilRemovable  Map  map  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^} else if  ( header == entry )  {^278^^^^^262^282^} else if  ( entry == header )  {^[CLASS] LRUMap  [METHOD] moveToMRU [RETURN_TYPE] void   LinkEntry<K, V> entry [VARIABLES] LinkEntry  entry  boolean  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  initialSize  maxSize  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " key" + header.before + " header.before=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, maxSize" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.after=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " size" + header.before + " key=" + key + " value=" + value + " header.before=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.before" + header.after + " header.after" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, key" + header.after + " header.before" + header.before + " header.after=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, value" + header.after + " header.before" + header.before + " key=" + key + " header.after=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, size" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " header.after=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " value" + header.before + " key=" + key + " header.before=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " maxSize" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.before=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " size=" + key + " value=" + value + " key=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, size=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " header.after=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.before=" + header.after + " header.after" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " size" + header.before + " key=" + key + " value=" + value + " header.before=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " maxSize" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.before=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, key=" + header.after + " header.before" + header.before + " header.after=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, maxSize=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " header.after=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( value, hashIndex, hashCode, key, reuse ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping (  hashIndex, hashCode, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashCode, hashIndex, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse,  hashCode, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashIndex,  key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashIndex, hashCode, value, key ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashIndex, hashCode,  value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, value, hashCode, key, hashIndex ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashIndex, hashCode, key ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " value" + header.before + " key=" + key + " header.before=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( hashIndex, reuse, hashCode, key, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " size=" + key + " value=" + value + " key=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^328^329^330^331^^313^343^throw new IllegalStateException ( "Entry.after=null, header.after" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, value=" + header.after + " header.before" + header.before + " key=" + key + " header.after=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashIndex, key, hashCode, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " key" + header.before + " header.before=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^340^341^342^343^^325^355^throw new IllegalStateException ( "reuse=null, header.after=" + header.after + " header.before" + header.before + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, key, hashCode, hashIndex, value ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^reuseMapping ( reuse, hashIndex, value, key, hashCode ) ;^346^^^^^331^361^reuseMapping ( reuse, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] addMapping [RETURN_TYPE] void   final int hashIndex final int hashCode final K key final V value [VARIABLES] LinkEntry  reuse  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  V  value  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " maxSize=" + previous + " key=" + key + " value=" + value + " size=" + size + " previous=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " maxSize=" + key + " value=" + value + " size=" + size + " key=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " value=" + previous + " key=" + key + " previous=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, previous[removeIndex]=" + data[removeIndex] + " data=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, size[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " data=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " size=" + previous + " key=" + key + " value=" + value + " previous=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " key=" + previous + " previous=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " maxSize=" + value + " size=" + size + " value=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, key[removeIndex]=" + data[removeIndex] + " previous=" + previous + " data=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " size=" + value + " value=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, value[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " data=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " size=" + key + " value=" + value + " key=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^381^382^383^384^^366^396^throw new IllegalStateException ( "Entry.next=null, data[removeIndex]=" + data[removeIndex] + " previous=" + previous + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^removeEntry ( previous, removeIndex, entry ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^removeEntry (  removeIndex, previous ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^removeEntry ( entry, previous, removeIndex ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^removeEntry ( entry,  previous ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^removeEntry ( entry, removeIndex ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( hashIndex, entry, hashCode, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry (  hashIndex, hashCode, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry,  hashCode, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry, hashIndex, key, hashCode, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry, hashIndex,  key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry, key, hashCode, hashIndex, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry, hashIndex, hashCode,  value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( value, hashIndex, hashCode, key, entry ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry, hashIndex, hashCode, key ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^addEntry ( hashIndex, entry ) ;^392^^^^^377^407^addEntry ( entry, hashIndex ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^addEntry (  hashIndex ) ;^392^^^^^377^407^addEntry ( entry, hashIndex ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^addEntry ( entry ) ;^392^^^^^377^407^addEntry ( entry, hashIndex ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "NPE, size=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " entry=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "NPE=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "NPE, key=" + entry + " entryIsHeader=" +  ( entry==header )  + " entry=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "NPE, value=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " entry=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " maxSize=" + size + " size=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " value=" + key + " key=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^394^395^396^397^^379^409^throw new IllegalStateException ( "NPE, entry=" + entry + " entryIsHeader=" +  ( entry==header )  + " key=" + key + " value=" + value + " size=" + size + " maxSize=" + maxSize + " Please check that your keys are immutable, and that you have used synchronization properly." +^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^removeEntry ( removeIndex, entry, previous ) ;^390^^^^^375^405^removeEntry ( entry, removeIndex, previous ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( hashCode, hashIndex, entry, key, value ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^reuseEntry ( entry, value, hashCode, key, hashIndex ) ;^391^^^^^376^406^reuseEntry ( entry, hashIndex, hashCode, key, value ) ;^[CLASS] LRUMap  [METHOD] reuseMapping [RETURN_TYPE] void   LinkEntry<K, V> entry final int hashIndex final int hashCode final K key final V value [VARIABLES] HashEntry  loop  previous  boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  V  value  NullPointerException  ex  LinkEntry  entry  K  key  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  HashEntry[]  tmp  
[buglab_swap_variables]^return maxSize >= size;^447^^^^^446^448^return size >= maxSize;^[CLASS] LRUMap  [METHOD] isFull [RETURN_TYPE] boolean   [VARIABLES] boolean  removeLRUEntry  scanUntilRemovable  updateToMRU  long  serialVersionUID  int  DEFAULT_MAX_SIZE  hashCode  hashIndex  initialSize  maxSize  removeIndex  
