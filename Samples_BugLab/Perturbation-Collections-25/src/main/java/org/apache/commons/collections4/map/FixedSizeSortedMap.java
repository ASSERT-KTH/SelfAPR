[BugLab_Argument_Swapping]^if  ( key.containsKey ( map )  == false )  {^119^^^^^118^123^if  ( map.containsKey ( key )  == false )  {^[CLASS] FixedSizeSortedMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  long  serialVersionUID  V  value  
[BugLab_Wrong_Operator]^if  ( map.containsKey ( key )  > false )  {^119^^^^^118^123^if  ( map.containsKey ( key )  == false )  {^[CLASS] FixedSizeSortedMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  long  serialVersionUID  V  value  
[BugLab_Wrong_Literal]^if  ( map.containsKey ( key )  == true )  {^119^^^^^118^123^if  ( map.containsKey ( key )  == false )  {^[CLASS] FixedSizeSortedMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return key.put ( map, value ) ;^122^^^^^118^123^return map.put ( key, value ) ;^[CLASS] FixedSizeSortedMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return value.put ( key, map ) ;^122^^^^^118^123^return map.put ( key, value ) ;^[CLASS] FixedSizeSortedMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  long  serialVersionUID  V  value  
[BugLab_Argument_Swapping]^return map.put ( value, key ) ;^122^^^^^118^123^return map.put ( key, value ) ;^[CLASS] FixedSizeSortedMap  [METHOD] put [RETURN_TYPE] V   final K key final V value [VARIABLES] K  key  boolean  long  serialVersionUID  V  value  
[BugLab_Variable_Misuse]^if  ( CollectionUtils.isSubCollection ( this.keySet (  ) , keySet (  )  )  )  {^127^^^^^126^131^if  ( CollectionUtils.isSubCollection ( mapToCopy.keySet (  ) , keySet (  )  )  )  {^[CLASS] FixedSizeSortedMap  [METHOD] putAll [RETURN_TYPE] void   Map<? extends K, ? extends V> mapToCopy [VARIABLES] Map  mapToCopy  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^map.putAll ( map ) ;^130^^^^^126^131^map.putAll ( mapToCopy ) ;^[CLASS] FixedSizeSortedMap  [METHOD] putAll [RETURN_TYPE] void   Map<? extends K, ? extends V> mapToCopy [VARIABLES] Map  mapToCopy  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^map.putAll ( mapToCopyToCopy ) ;^130^^^^^126^131^map.putAll ( mapToCopy ) ;^[CLASS] FixedSizeSortedMap  [METHOD] putAll [RETURN_TYPE] void   Map<? extends K, ? extends V> mapToCopy [VARIABLES] Map  mapToCopy  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return UnmodifiableSet.unmodifiableSet ( 0.entrySet (  )  ) ;^145^^^^^144^146^return UnmodifiableSet.unmodifiableSet ( map.entrySet (  )  ) ;^[CLASS] FixedSizeSortedMap  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return UnmodifiableCollection.unmodifiableCollection ( null.values (  )  ) ;^155^^^^^154^156^return UnmodifiableCollection.unmodifiableCollection ( map.values (  )  ) ;^[CLASS] FixedSizeSortedMap  [METHOD] values [RETURN_TYPE] Collection   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return new FixedSizeSortedMap<K, V> ( getSortedMap (  ) .subMap ( toKey, fromKey )  ) ;^161^^^^^160^162^return new FixedSizeSortedMap<K, V> ( getSortedMap (  ) .subMap ( fromKey, toKey )  ) ;^[CLASS] FixedSizeSortedMap  [METHOD] subMap [RETURN_TYPE] SortedMap   final K fromKey final K toKey [VARIABLES] long  serialVersionUID  K  fromKey  toKey  boolean  
[BugLab_Wrong_Literal]^return false;^175^^^^^174^176^return true;^[CLASS] FixedSizeSortedMap  [METHOD] isFull [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
