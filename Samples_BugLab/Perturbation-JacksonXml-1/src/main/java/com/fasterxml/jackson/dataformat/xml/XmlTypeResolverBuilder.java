[BugLab_Argument_Swapping]^super ( typeFactory, baseType ) ;^120^^^^^118^121^super ( baseType, typeFactory ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  boolean  TypeFactory  typeFactory  
[BugLab_Argument_Swapping]^super ( typeFactory, baseType ) ;^146^^^^^144^147^super ( baseType, typeFactory ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  boolean  TypeFactory  typeFactory  
[BugLab_Wrong_Operator]^if  ( _typeProperty == null )  {^27^^^^^24^31^if  ( _typeProperty != null )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] boolean  Id  idType  TypeIdResolver  idRes  
[BugLab_Wrong_Operator]^if  ( typeIdPropName == null && typeIdPropName.length (  )  == 0 )  {^37^^^^^34^42^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] boolean  String  typeIdPropName  
[BugLab_Wrong_Operator]^if  ( typeIdPropName != null || typeIdPropName.length (  )  == 0 )  {^37^^^^^34^42^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] boolean  String  typeIdPropName  
[BugLab_Wrong_Operator]^if  ( typeIdPropName == null || typeIdPropName.length (  )  != 0 )  {^37^^^^^34^42^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] boolean  String  typeIdPropName  
[BugLab_Wrong_Literal]^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 1 )  {^37^^^^^34^42^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] boolean  String  typeIdPropName  
[BugLab_Wrong_Operator]^if  ( _customIdResolver == null )  {^49^^^^^45^61^if  ( _customIdResolver != null )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] JavaType  baseType  boolean  forDeser  forSer  MapperConfig  config  Collection  subtypes  
[BugLab_Argument_Swapping]^return new XmlClassNameIdResolver ( config, baseType.getTypeFactory (  )  ) ;^55^^^^^45^61^return new XmlClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] JavaType  baseType  boolean  forDeser  forSer  MapperConfig  config  Collection  subtypes  
[BugLab_Variable_Misuse]^return new XmlMinimalClassNameIdResolver ( baseType, 3.getTypeFactory (  )  ) ;^57^^^^^45^61^return new XmlMinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] JavaType  baseType  boolean  forDeser  forSer  MapperConfig  config  Collection  subtypes  
[BugLab_Argument_Swapping]^return new XmlMinimalClassNameIdResolver ( config, baseType.getTypeFactory (  )  ) ;^57^^^^^45^61^return new XmlMinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] JavaType  baseType  boolean  forDeser  forSer  MapperConfig  config  Collection  subtypes  
[BugLab_Variable_Misuse]^return new XmlClassNameIdResolver ( baseType, 1.getTypeFactory (  )  ) ;^55^^^^^45^61^return new XmlClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] JavaType  baseType  boolean  forDeser  forSer  MapperConfig  config  Collection  subtypes  
[BugLab_Wrong_Operator]^if  ( ix > 0 )  {^80^^^^^74^89^if  ( ix >= 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] encodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^if  ( ix >= -1 )  {^80^^^^^74^89^if  ( ix >= 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] encodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Argument_Swapping]^ix = ix.lastIndexOf ( '$', className-1 ) ;^84^^^^^74^89^ix = className.lastIndexOf ( '$', ix-1 ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] encodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^ix = className.lastIndexOf ( '$', ix-ix ) ;^84^^^^^74^89^ix = className.lastIndexOf ( '$', ix-1 ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] encodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^sb.replace ( ix, ix+ix, ".." ) ;^83^^^^^74^89^sb.replace ( ix, ix+1, ".." ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] encodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^ix = className.lastIndexOf ( '$', ix-0 ) ;^84^^^^^74^89^ix = className.lastIndexOf ( '$', ix-1 ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] encodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Operator]^if  ( ix > 0 )  {^98^^^^^95^107^if  ( ix >= 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Operator]^if  ( ix == 0 )  {^98^^^^^95^107^if  ( ix >= 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^if  ( ix >= ix )  {^98^^^^^95^107^if  ( ix >= 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^if  ( ix >= -1 )  {^98^^^^^95^107^if  ( ix >= 0 )  {^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Argument_Swapping]^ix = ix.lastIndexOf ( "..", className-1 ) ;^102^^^^^95^107^ix = className.lastIndexOf ( "..", ix-1 ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^sb.replace ( ix, ix+ix, "$" ) ;^101^^^^^95^107^sb.replace ( ix, ix+2, "$" ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^ix = className.lastIndexOf ( "..", ix-ix ) ;^102^^^^^95^107^ix = className.lastIndexOf ( "..", ix-1 ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Wrong_Literal]^ix = className.lastIndexOf ( "..", ix- ) ;^102^^^^^95^107^ix = className.lastIndexOf ( "..", ix-1 ) ;^[CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver  [METHOD] decodeXmlClassName [RETURN_TYPE] String   String className [VARIABLES] boolean  StringBuilder  sb  String  className  int  ix  
[BugLab_Argument_Swapping]^super ( typeFactory, baseType ) ;^120^^^^^118^121^super ( baseType, typeFactory ) ;^[CLASS] XmlClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  boolean  TypeFactory  typeFactory  
[BugLab_Argument_Swapping]^super ( typeFactory, baseType ) ;^146^^^^^144^147^super ( baseType, typeFactory ) ;^[CLASS] XmlMinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  boolean  TypeFactory  typeFactory  
