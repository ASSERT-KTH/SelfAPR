[BugLab_Variable_Misuse]^_rootNameLookup = _rootNameLookup;^42^^^^^39^43^_rootNameLookup = rootNames;^[CLASS] XmlSerializerProvider  [METHOD] <init> [RETURN_TYPE] XmlRootNameLookup)   XmlRootNameLookup rootNames [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  boolean  QName  ROOT_NAME_FOR_NULL  long  serialVersionUID  
[BugLab_Argument_Swapping]^super ( config, src, f ) ;^48^^^^^45^50^super ( src, config, f ) ;^[CLASS] XmlSerializerProvider  [METHOD] <init> [RETURN_TYPE] SerializerFactory)   XmlSerializerProvider src SerializationConfig config SerializerFactory f [VARIABLES] SerializerFactory  f  boolean  QName  ROOT_NAME_FOR_NULL  SerializationConfig  config  XmlSerializerProvider  src  XmlRootNameLookup  _rootNameLookup  rootNames  long  serialVersionUID  
[BugLab_Argument_Swapping]^super ( src, f, config ) ;^48^^^^^45^50^super ( src, config, f ) ;^[CLASS] XmlSerializerProvider  [METHOD] <init> [RETURN_TYPE] SerializerFactory)   XmlSerializerProvider src SerializationConfig config SerializerFactory f [VARIABLES] SerializerFactory  f  boolean  QName  ROOT_NAME_FOR_NULL  SerializationConfig  config  XmlSerializerProvider  src  XmlRootNameLookup  _rootNameLookup  rootNames  long  serialVersionUID  
[BugLab_Variable_Misuse]^_rootNameLookup  = rootNames;^49^^^^^45^50^_rootNameLookup  = src._rootNameLookup;^[CLASS] XmlSerializerProvider  [METHOD] <init> [RETURN_TYPE] SerializerFactory)   XmlSerializerProvider src SerializationConfig config SerializerFactory f [VARIABLES] SerializerFactory  f  boolean  QName  ROOT_NAME_FOR_NULL  SerializationConfig  config  XmlSerializerProvider  src  XmlRootNameLookup  _rootNameLookup  rootNames  long  serialVersionUID  
[BugLab_Argument_Swapping]^_rootNameLookup  = src._rootNameLookup._rootNameLookup;^49^^^^^45^50^_rootNameLookup  = src._rootNameLookup;^[CLASS] XmlSerializerProvider  [METHOD] <init> [RETURN_TYPE] SerializerFactory)   XmlSerializerProvider src SerializationConfig config SerializerFactory f [VARIABLES] SerializerFactory  f  boolean  QName  ROOT_NAME_FOR_NULL  SerializationConfig  config  XmlSerializerProvider  src  XmlRootNameLookup  _rootNameLookup  rootNames  long  serialVersionUID  
[BugLab_Argument_Swapping]^_rootNameLookup  = src;^49^^^^^45^50^_rootNameLookup  = src._rootNameLookup;^[CLASS] XmlSerializerProvider  [METHOD] <init> [RETURN_TYPE] SerializerFactory)   XmlSerializerProvider src SerializationConfig config SerializerFactory f [VARIABLES] SerializerFactory  f  boolean  QName  ROOT_NAME_FOR_NULL  SerializationConfig  config  XmlSerializerProvider  src  XmlRootNameLookup  _rootNameLookup  rootNames  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new XmlSerializerProvider ( this, jsf, config ) ;^61^^^^^59^62^return new XmlSerializerProvider ( this, config, jsf ) ;^[CLASS] XmlSerializerProvider  [METHOD] createInstance [RETURN_TYPE] DefaultSerializerProvider   SerializationConfig config SerializerFactory jsf [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  SerializerFactory  jsf  boolean  QName  ROOT_NAME_FOR_NULL  long  serialVersionUID  SerializationConfig  config  
[BugLab_Wrong_Operator]^if  ( value != null )  {^68^^^^^53^83^if  ( value == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( xgen != null )  {^75^^^^^60^90^if  ( xgen == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( ROOT_NAME_FOR_NULL == null )  {^79^^^^^75^87^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( rootName != null )  {^79^^^^^75^87^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _rootNameLookup.findRootName ( _config, cls ) ;^80^^^^^75^87^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = cls.findRootName ( _rootNameLookup, _config ) ;^80^^^^^75^87^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _config.findRootName ( cls, _rootNameLookup ) ;^80^^^^^75^87^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^85^^^^^75^87^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_startRootArray ( rootName, xgen ) ;^85^^^^^75^87^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = _rootNameLookup.findRootName ( null, _config ) ;^80^^^^^75^87^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = rootNames.findRootName ( cls, _config ) ;^80^^^^^75^87^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_initWithRootName ( xgen, ROOT_NAME_FOR_NULL ) ;^82^^^^^75^87^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_initWithRootName ( rootName, xgen ) ;^82^^^^^75^87^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Literal]^asArray = true;^76^^^^^61^91^asArray = false;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( ROOT_NAME_FOR_NULL == null )  {^79^^^^^64^94^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( rootName != null )  {^79^^^^^64^94^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = rootNames.findRootName ( cls, _config ) ;^80^^^^^65^95^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = cls.findRootName ( _rootNameLookup, _config ) ;^80^^^^^65^95^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _config.findRootName ( cls, _rootNameLookup ) ;^80^^^^^65^95^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = _rootNameLookup.findRootName ( cls, 1 ) ;^80^^^^^65^95^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _rootNameLookup.findRootName ( _config, cls ) ;^80^^^^^65^95^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^85^^^^^70^100^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_startRootArray ( rootName, xgen ) ;^85^^^^^70^100^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^asArray = TypeUtil.isIndexedType ( null ) ;^83^^^^^68^98^asArray = TypeUtil.isIndexedType ( cls ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = _rootNameLookup.findRootName ( 2, _config ) ;^80^^^^^65^95^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_initWithRootName ( xgen, ROOT_NAME_FOR_NULL ) ;^82^^^^^67^97^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_initWithRootName ( rootName, xgen ) ;^82^^^^^67^97^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Literal]^final JsonSerializer<Object> ser = findTypedValueSerializer ( cls, false, null ) ;^90^^^^^75^105^final JsonSerializer<Object> ser = findTypedValueSerializer ( cls, true, null ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( msg != null )  {^97^^^^^82^112^if  ( msg == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  <=  ) .getName (  ) +"]";^98^^^^^83^113^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  &  ) .getName (  ) +"]";^98^^^^^83^113^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^ser.serialize ( gen, value, this ) ;^92^^^^^77^107^ser.serialize ( value, gen, this ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  |  ) .getName (  ) +"]";^98^^^^^83^113^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( msg, gen, e ) ;^100^^^^^85^115^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( gen, e, msg ) ;^100^^^^^85^115^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( e, msg, gen ) ;^100^^^^^85^115^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value [VARIABLES] boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  Class  cls  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( value != null )  {^114^^^^^99^129^if  ( value == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( xgen != null )  {^120^^^^^105^135^if  ( xgen == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( ROOT_NAME_FOR_NULL == null )  {^124^^^^^120^132^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( rootName != null )  {^124^^^^^120^132^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = rootNames.findRootName ( rootType, _config ) ;^125^^^^^120^132^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = rootType.findRootName ( _rootNameLookup, _config ) ;^125^^^^^120^132^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _config.findRootName ( rootType, _rootNameLookup ) ;^125^^^^^120^132^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^130^^^^^120^132^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_startRootArray ( rootName, xgen ) ;^130^^^^^120^132^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _rootNameLookup.findRootName ( _config, rootType ) ;^125^^^^^120^132^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_initWithRootName ( xgen, ROOT_NAME_FOR_NULL ) ;^127^^^^^120^132^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_initWithRootName ( rootName, xgen ) ;^127^^^^^120^132^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Literal]^asArray = true;^121^^^^^106^136^asArray = false;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( ROOT_NAME_FOR_NULL == null )  {^124^^^^^109^139^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( rootName != null )  {^124^^^^^109^139^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = rootNames.findRootName ( rootType, _config ) ;^125^^^^^110^140^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _rootNameLookup.findRootName ( _config, rootType ) ;^125^^^^^110^140^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _config.findRootName ( rootType, _rootNameLookup ) ;^125^^^^^110^140^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = rootType.findRootName ( _rootNameLookup, _config ) ;^125^^^^^110^140^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^130^^^^^115^145^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_startRootArray ( rootName, xgen ) ;^130^^^^^115^145^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_initWithRootName ( xgen, ROOT_NAME_FOR_NULL ) ;^127^^^^^112^142^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_initWithRootName ( rootName, xgen ) ;^127^^^^^112^142^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Literal]^final JsonSerializer<Object> ser = findTypedValueSerializer ( rootType, false, null ) ;^134^^^^^119^149^final JsonSerializer<Object> ser = findTypedValueSerializer ( rootType, true, null ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( msg != null )  {^142^^^^^127^157^if  ( msg == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  ||  ) .getName (  ) +"]";^143^^^^^128^158^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (   instanceof   ) .getName (  ) +"]";^143^^^^^128^158^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^ser.serialize ( gen, value, this ) ;^137^^^^^122^152^ser.serialize ( value, gen, this ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  ^  ) .getName (  ) +"]";^143^^^^^128^158^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  ==  ) .getName (  ) +"]";^143^^^^^128^158^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( e, msg, gen ) ;^145^^^^^130^160^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( gen, e, msg ) ;^145^^^^^130^160^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( msg, gen, e ) ;^145^^^^^130^160^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( value != null )  {^160^^^^^145^175^if  ( value == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( xgen != null )  {^166^^^^^151^181^if  ( xgen == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( ROOT_NAME_FOR_NULL == null )  {^170^^^^^166^178^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( rootName != null )  {^170^^^^^166^178^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = rootNames.findRootName ( rootType, _config ) ;^171^^^^^166^178^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = rootType.findRootName ( _rootNameLookup, _config ) ;^171^^^^^166^178^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _config.findRootName ( rootType, _rootNameLookup ) ;^171^^^^^166^178^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _rootNameLookup.findRootName ( _config, rootType ) ;^171^^^^^166^178^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^176^^^^^166^178^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_startRootArray ( rootName, xgen ) ;^176^^^^^166^178^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_initWithRootName ( xgen, ROOT_NAME_FOR_NULL ) ;^173^^^^^166^178^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_initWithRootName ( rootName, xgen ) ;^173^^^^^166^178^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Literal]^asArray = true;^167^^^^^152^182^asArray = false;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( ROOT_NAME_FOR_NULL == null )  {^170^^^^^155^185^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( rootName != null )  {^170^^^^^155^185^if  ( rootName == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = rootNames.findRootName ( rootType, _config ) ;^171^^^^^156^186^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _rootNameLookup.findRootName ( _config, rootType ) ;^171^^^^^156^186^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = _config.findRootName ( rootType, _rootNameLookup ) ;^171^^^^^156^186^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^rootName = rootType.findRootName ( _rootNameLookup, _config ) ;^171^^^^^156^186^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^176^^^^^161^191^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_startRootArray ( rootName, xgen ) ;^176^^^^^161^191^_startRootArray ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^rootName = _rootNameLookup.findRootName ( rootType, 3 ) ;^171^^^^^156^186^rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^_initWithRootName ( xgen, ROOT_NAME_FOR_NULL ) ;^173^^^^^158^188^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^_initWithRootName ( rootName, xgen ) ;^173^^^^^158^188^_initWithRootName ( xgen, rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( ser != null )  {^179^^^^^164^194^if  ( ser == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Literal]^ser = findTypedValueSerializer ( rootType, false, null ) ;^180^^^^^165^195^ser = findTypedValueSerializer ( rootType, true, null ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^if  ( msg != null )  {^189^^^^^174^204^if  ( msg == null )  {^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  >  ) .getName (  ) +"]";^190^^^^^175^205^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  !=  ) .getName (  ) +"]";^190^^^^^175^205^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  ||  ) .getName (  ) +"]";^190^^^^^175^205^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Wrong_Operator]^msg = "[no message for "+e.getClass (  &&  ) .getName (  ) +"]";^190^^^^^175^205^msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( msg, gen, e ) ;^192^^^^^177^207^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^throw JsonMappingException.from ( e, msg, gen ) ;^192^^^^^177^207^throw JsonMappingException.from ( gen, msg, e ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Argument_Swapping]^ser.serialize ( gen, value, this ) ;^184^^^^^169^199^ser.serialize ( value, gen, this ) ;^[CLASS] XmlSerializerProvider  [METHOD] serializeValue [RETURN_TYPE] void   JsonGenerator gen Object value JavaType rootType Object> ser [VARIABLES] JavaType  rootType  boolean  asArray  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  Object  value  JsonSerializer  ser  IOException  ioe  String  msg  long  serialVersionUID  Exception  e  
[BugLab_Variable_Misuse]^if  ( jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, rootName ) ;^202^203^^^^200^205^if  ( jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^[CLASS] XmlSerializerProvider  [METHOD] _serializeXmlNull [RETURN_TYPE] void   JsonGenerator jgen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  jgen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( ROOT_NAME_FOR_NULL instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, jgen ) ;^202^203^^^^200^205^if  ( jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^[CLASS] XmlSerializerProvider  [METHOD] _serializeXmlNull [RETURN_TYPE] void   JsonGenerator jgen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  jgen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( jgen  >=  ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^202^203^^^^200^205^if  ( jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^[CLASS] XmlSerializerProvider  [METHOD] _serializeXmlNull [RETURN_TYPE] void   JsonGenerator jgen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  jgen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Variable_Misuse]^_initWithRootName (  ( ToXmlGenerator )  jgen, rootName ) ;^203^^^^^200^205^_initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^[CLASS] XmlSerializerProvider  [METHOD] _serializeXmlNull [RETURN_TYPE] void   JsonGenerator jgen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  jgen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( !xgen.setNextNameIfMissing ( ROOT_NAME_FOR_NULL )  )  {^220^^^^^214^239^if  ( !xgen.setNextNameIfMissing ( rootName )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Variable_Misuse]^xgen.setNextName ( ROOT_NAME_FOR_NULL ) ;^223^^^^^214^239^xgen.setNextName ( rootName ) ;^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Variable_Misuse]^String ns = ROOT_NAME_FOR_NULL.getNamespaceURI (  ) ;^227^^^^^214^239^String ns = rootName.getNamespaceURI (  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ns != null || ns.length (  )  > 0 )  {^232^^^^^214^239^if  ( ns != null && ns.length (  )  > 0 )  {^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ns == null && ns.length (  )  > 0 )  {^232^^^^^214^239^if  ( ns != null && ns.length (  )  > 0 )  {^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ns != null && ns.length (  )  < 0 )  {^232^^^^^214^239^if  ( ns != null && ns.length (  )  > 0 )  {^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( ns != null && ns.length (  )  > 1 )  {^232^^^^^214^239^if  ( ns != null && ns.length (  )  > 0 )  {^[CLASS] XmlSerializerProvider  [METHOD] _initWithRootName [RETURN_TYPE] void   ToXmlGenerator xgen QName rootName [VARIABLES] boolean  XMLStreamException  e  QName  ROOT_NAME_FOR_NULL  rootName  ToXmlGenerator  xgen  XmlRootNameLookup  _rootNameLookup  rootNames  String  ns  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name != null )  {^244^^^^^241^252^if  ( name == null )  {^[CLASS] XmlSerializerProvider  [METHOD] _rootNameFromConfig [RETURN_TYPE] QName   [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  PropertyName  name  String  ns  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ns == null && ns.isEmpty (  )  )  {^248^^^^^241^252^if  ( ns == null || ns.isEmpty (  )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _rootNameFromConfig [RETURN_TYPE] QName   [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  PropertyName  name  String  ns  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ns != null || ns.isEmpty (  )  )  {^248^^^^^241^252^if  ( ns == null || ns.isEmpty (  )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _rootNameFromConfig [RETURN_TYPE] QName   [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  PropertyName  name  String  ns  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new QName ( name, ns.getSimpleName (  )  ) ;^251^^^^^241^252^return new QName ( ns, name.getSimpleName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _rootNameFromConfig [RETURN_TYPE] QName   [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  PropertyName  name  String  ns  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( gen  >>  ToXmlGenerator )  )  {^258^^^^^254^267^if  ( ! ( gen instanceof ToXmlGenerator )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( gen  ==  ToXmlGenerator )  )  {^258^^^^^254^267^if  ( ! ( gen instanceof ToXmlGenerator )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( gen  &&  TokenBuffer )  )  {^260^^^^^254^267^if  ( ! ( gen instanceof TokenBuffer )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ==  ) .getName (  )  ) ;^261^262^^^^254^267^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  &&  ) .getName (  )  ) ;^261^262^^^^254^267^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  !=  ) .getName (  )  ) ;^261^262^^^^254^267^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( gen  !=  TokenBuffer )  )  {^260^^^^^254^267^if  ( ! ( gen instanceof TokenBuffer )  )  {^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ||  ) .getName (  )  ) ;^261^262^^^^254^267^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  >>  ) .getName (  )  ) ;^261^262^^^^254^267^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  |  ) .getName (  )  ) ;^261^262^^^^254^267^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[CLASS] XmlSerializerProvider  [METHOD] _asXmlGenerator [RETURN_TYPE] ToXmlGenerator   JsonGenerator gen [VARIABLES] XmlRootNameLookup  _rootNameLookup  rootNames  JsonGenerator  gen  boolean  QName  ROOT_NAME_FOR_NULL  rootName  long  serialVersionUID  
