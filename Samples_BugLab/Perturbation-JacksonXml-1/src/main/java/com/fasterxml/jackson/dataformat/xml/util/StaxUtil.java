[buglab_swap_variables]^sb.setCharAt (  '_' ) ;^64^^^^^61^65^sb.setCharAt ( i, '_' ) ;^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
[buglab_swap_variables]^sb.setCharAt (  '.' ) ;^62^^^^^47^77^sb.setCharAt ( i, '.' ) ;^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
[buglab_swap_variables]^for  ( int i = 0, name = len.length (  ) ; i < len; ++i )  {^52^^^^^37^67^for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  {^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
[buglab_swap_variables]^for  ( lennt i = 0, i = name.length (  ) ; i < len; ++i )  {^52^^^^^37^67^for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  {^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
[buglab_swap_variables]^for  ( int i = 0 = name.length (  ) ; i < len; ++i )  {^52^^^^^37^67^for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  {^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
[buglab_swap_variables]^char c = i.charAt ( name ) ;^53^^^^^38^68^char c = name.charAt ( i ) ;^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
[buglab_swap_variables]^sb.setCharAt (  '_' ) ;^64^^^^^49^79^sb.setCharAt ( i, '_' ) ;^[CLASS] StaxUtil  [METHOD] sanitizeXmlTypeName [RETURN_TYPE] String   String name [VARIABLES] boolean  StringBuilder  sb  char  c  String  name  int  changes  i  len  
