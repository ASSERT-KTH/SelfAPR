[BugLab_Variable_Misuse]^if  ( value == null )  {^45^^^^^30^60^if  ( dateStr == null )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( dateStr != null )  {^45^^^^^30^60^if  ( dateStr == null )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^DateFormat[] dateFormats = new DateFormat[monthsAgo];^51^^^^^36^66^DateFormat[] dateFormats = new DateFormat[0];^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^String value = unit.toLowerCase (  ) .trim (  ) ;^54^^^^^39^69^String value = dateStr.toLowerCase (  ) .trim (  ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^String value = value.toLowerCase (  ) .trim (  ) ;^54^^^^^39^69^String value = dateStr.toLowerCase (  ) .trim (  ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( monthsAgoue.endsWith ( " ago" )  )  {^58^^^^^43^73^if  ( value.endsWith ( " ago" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( unit.startsWith ( "last " )  )  {^101^^^^^86^116^} else if  ( value.startsWith ( "last " )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else startf  ( value.startsWith ( "last " )  )  {^101^^^^^86^116^} else if  ( value.startsWith ( "last " )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^} else valuef  ( i.startsWith ( "last " )  )  {^101^^^^^86^116^} else if  ( value.startsWith ( "last " )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( unit.equals ( "yesterday" )  )  {^135^^^^^120^150^} else if  ( value.equals ( "yesterday" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( unit.equals ( "tomorrow" )  )  {^138^^^^^123^153^} else if  ( value.equals ( "tomorrow" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return cal;^140^^^^^125^155^return now;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, monthsAgo ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return cal;^137^^^^^122^152^return now;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -monthsAgo ) ;^136^^^^^121^151^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, 0 ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -2 ) ;^136^^^^^121^151^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE,  ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( unit.equalsIgnoreCase ( strings[i] )  )  {^108^^^^^93^123^if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^if  ( strings.equalsIgnoreCase ( value[i] )  )  {^108^^^^^93^123^if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( val <= 0 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( daysAgo == 0 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( daysAgo <= start )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += 6;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += ;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return cal;^115^^^^^100^130^return now;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int daysAgo = cal.get ( Calendar.DAY_OF_WEEK )  - i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - val;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int daysAgo = now.get ( Calendar.val )  - i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   &  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -start ) ;^114^^^^^99^129^now.add ( Calendar.DATE, -daysAgo ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += daysAgo;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( unit.equalsIgnoreCase ( strings[i] )  )  {^120^^^^^105^135^if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( start <= 0 )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( monthsAgo < 0 )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <= start )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += i;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += val;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return cal;^127^^^^^112^142^return now;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int monthsAgo = cal.get ( Calendar.MONTH )  - i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int monthsAgo = now.get ( Calendar.MONTH )  - val;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int monthsAgo = now.get ( Calendar.val )  - i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^int monthsAgo = i.get ( Calendar.MONTH )  - now;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   <=  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <= daysAgo )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += 13;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( unit.equals ( "week" )  )  {^130^^^^^115^145^if  ( value.equals ( "week" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return cal;^132^^^^^117^147^return now;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( startnt i = 0; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( daysAgo <= val )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += monthsAgo;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += i;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int daysAgo = now.get ( Calendar.start )  - i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   <  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -val ) ;^114^^^^^99^129^now.add ( Calendar.DATE, -daysAgo ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( daysAgo < 0 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( daysAgo <= daysAgo )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += val;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^int daysAgo = i.get ( Calendar.DAY_OF_WEEK )  - now;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )    instanceof   i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( startnt i = 0; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^for  ( stringsnt i = 0; i < i.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ==  ( int i = 0; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = val; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( val <= 0 )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( monthsAgo > 0 )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += 11;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += start;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int monthsAgo = now.get ( Calendar.start )  - i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   &  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   &&  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MONTH, -val ) ;^126^^^^^111^141^now.add ( Calendar.MONTH, -monthsAgo ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^value = unit.substring ( 5 ) ;^104^^^^^89^119^value = value.substring ( 5 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( i ) ;^104^^^^^89^119^value = value.substring ( 5 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   ||  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   ==  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( 6 ) ;^104^^^^^89^119^value = value.substring ( 5 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int daysAgo = now.get ( Calendar.monthsAgo )  - i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( daysAgo <= monthsAgo )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <= monthsAgo )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <= -1 )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -daysAgo ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -0 ) ;^136^^^^^121^151^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^for  ( strings.lengthnt i = 0; i < i; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = daysAgo; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   <=  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( start <= 0 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += start;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   >>  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^for  ( strings.lengthnt i = 0; i < i; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   <<  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int monthsAgo = now.get ( Calendar.monthsAgo )  - i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MONTH, -start ) ;^126^^^^^111^141^now.add ( Calendar.MONTH, -monthsAgo ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <= 1 )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   |  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^if  ( strings.equalsIgnoreCase ( value[i] )  )  {^120^^^^^105^135^if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( val ) ;^104^^^^^89^119^value = value.substring ( 5 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^daysAgo += 8;^112^^^^^97^127^daysAgo += 7;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += monthsAgo;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = i; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -6 ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -i ) ;^136^^^^^121^151^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, val ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( val < 0 )  {^65^^^^^50^80^if  ( start < 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( start <= 0 )  {^65^^^^^50^80^if  ( start < 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( start < i )  {^65^^^^^50^80^if  ( start < 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( unit.equals ( "a" )  || value.equals ( "an" )  )  {^72^^^^^57^87^if  ( value.equals ( "a" )  || value.equals ( "an" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( value.equals ( "a" )  && value.equals ( "an" )  )  {^72^^^^^57^87^if  ( value.equals ( "a" )  || value.equals ( "an" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^val = Integer.parseInt ( unit ) ;^75^^^^^72^76^val = Integer.parseInt ( value ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^val = start;^73^^^^^58^88^val = 1;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( unit.equals ( "milliseconds" )  && unit.equals ( "millisecond" )  )  {^79^^^^^64^94^if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "seconds" )  || unit.equals ( "second" )  )  {^81^^^^^66^96^} else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "seconds" )  && unit.equals ( "second" )  )  {^81^^^^^66^96^} else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "minutes" )  && unit.equals ( "minute" )  )  {^83^^^^^68^98^} else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "hours" )  || unit.equals ( "hour" )  )  {^85^^^^^70^100^} else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "hours" )  && unit.equals ( "hour" )  )  {^85^^^^^70^100^} else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "days" )  || unit.equals ( "day" )  )  {^87^^^^^72^102^} else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "days" )  && unit.equals ( "day" )  )  {^87^^^^^72^102^} else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "weeks" )  || unit.equals ( "week" )  )  {^89^^^^^74^104^} else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "weeks" )  && unit.equals ( "week" )  )  {^89^^^^^74^104^} else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^91^^^^^76^106^} else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^91^^^^^76^106^} else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "months" )  && unit.equals ( "month" )  )  {^93^^^^^78^108^} else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "years" )  || unit.equals ( "year" )  )  {^95^^^^^80^110^} else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^} else if  ( unit.equals ( "years" )  && unit.equals ( "year" )  )  {^95^^^^^80^110^} else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.YEAR, -start ) ;^96^^^^^81^111^now.add ( Calendar.YEAR, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.YEAR, -monthsAgo ) ;^96^^^^^81^111^now.add ( Calendar.YEAR, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "months" )  || unit.equals ( "month" )  )  {^93^^^^^78^108^} else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -start * 14 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^now.add ( Calendar.DATE, -val - 14 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * start ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MONTH, -start ) ;^94^^^^^79^109^now.add ( Calendar.MONTH, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^now.add ( Calendar.DATE, -val + 14 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * daysAgo ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -start * 7 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^now.add ( Calendar.DATE, -val / 7 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * 8 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -monthsAgo * 7 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^now.add ( Calendar.DATE, -val + 7 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * 6 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^now.add ( Calendar.DATE, -val / 14 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * i ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MONTH, -monthsAgo ) ;^94^^^^^79^109^now.add ( Calendar.MONTH, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -start ) ;^88^^^^^73^103^now.add ( Calendar.DATE, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * monthsAgo ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * i ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^now.add ( Calendar.DATE, -val - 7 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * daysAgo ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.HOUR, -start ) ;^86^^^^^71^101^now.add ( Calendar.HOUR, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -monthsAgo * 14 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * 15 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * start ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.DATE, -monthsAgo ) ;^88^^^^^73^103^now.add ( Calendar.DATE, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MINUTE, -monthsAgo ) ;^84^^^^^69^99^now.add ( Calendar.MINUTE, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * val ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * val ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * 13 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val *  ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^} else if  ( value.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^83^^^^^68^98^} else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MINUTE, -start ) ;^84^^^^^69^99^now.add ( Calendar.MINUTE, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.SECOND, -start ) ;^82^^^^^67^97^now.add ( Calendar.SECOND, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val *  ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -val * monthsAgo ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.HOUR, -monthsAgo ) ;^86^^^^^71^101^now.add ( Calendar.HOUR, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MILLISECOND, -start ) ;^80^^^^^65^95^now.add ( Calendar.MILLISECOND, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^value = unit.substring ( 0, value.length (  )  - 4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^value = value.substring ( 0, value.length (  )   <<  4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( 0, value.length (  )   ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^value = unit.substring ( 0, start ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^value = value.substring ( 0, val ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^value = start.substring ( 0, value ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^val = Integer.parseInt ( unit ) ;^75^^^^^60^90^val = Integer.parseInt ( value ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^int start = unit.indexOf ( " " ) ;^64^^^^^49^79^int start = value.indexOf ( " " ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^String unit = dateStr.substring ( start + 1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^String unit = value.substring ( val + 1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^String unit = start.substring ( value + 1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^String unit = value.substring ( start  <  1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^String unit = value.substring ( start + monthsAgo ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^value = value.substring ( 0, value.length (  )   >>  4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( val, value.length (  )  - 4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^String unit = unit.substring ( start + 1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^String unit = value.substring ( start  <=  1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^String unit = value.substring ( start  ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^value = value.substring ( 0, monthsAgo ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( , start ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( value.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^79^^^^^64^94^if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( monthsAgo < 0 )  {^65^^^^^50^80^if  ( start < 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( start <  )  {^65^^^^^50^80^if  ( start < 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^val = val;^73^^^^^58^88^val = 1;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.SECOND, -monthsAgo ) ;^82^^^^^67^97^now.add ( Calendar.SECOND, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^now.add ( Calendar.MILLISECOND, -monthsAgo ) ;^80^^^^^65^95^now.add ( Calendar.MILLISECOND, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, i ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, daysAgo ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   |  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -start ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = i; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   ^  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   >=  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < start; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = daysAgo; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^monthsAgo += ;^124^^^^^109^139^monthsAgo += 12;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   >  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = monthsAgo; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int monthsAgo = now.get ( Calendar.MONTH )   !=  i;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( daysAgo <= 1 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <=  )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -monthsAgo ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, 2 ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ||  ( int i = 0; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( daysAgo <= -1 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   ==  i;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^if  ( daysAgo > 0 )  {^111^^^^^96^126^if  ( daysAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < strings.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^if  ( monthsAgo <= i )  {^123^^^^^108^138^if  ( monthsAgo <= 0 )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^value = value.substring ( 0, value.length (  )   &  4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( start, start ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^val = i;^73^^^^^58^88^val = 1;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return cal;^100^^^^^85^115^return now;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^String unit = value.substring ( start   instanceof   1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^int val = daysAgo;^71^^^^^56^86^int val = 0;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = monthsAgo; i < strings.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^if  ( unit.endsWith ( " ago" )  )  {^58^^^^^43^73^if  ( value.endsWith ( " ago" )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^value = value.substring ( 0, value.length (  )   ==  4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( monthsAgo, value.length (  )  - 4 ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( 0, value.length (  )  - start ) ;^61^^^^^46^76^value = value.substring ( 0, value.length (  )  - 4 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^String unit = value.substring ( start  <<  1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^value = value.substring ( monthsAgo, start ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^now.add ( Calendar.DATE, -i ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < dateFormats.length; i++ )  {^143^^^^^128^158^for  ( int i = 0; i < dateFormats.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < start; i++ )  {^143^^^^^128^158^for  ( int i = 0; i < dateFormats.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^for  ( dateFormats.lengthnt i = 0; i < i; i++ )  {^143^^^^^128^158^for  ( int i = 0; i < dateFormats.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > dateFormats.length; i++ )  {^143^^^^^128^158^for  ( int i = 0; i < dateFormats.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < dateFormats.length; i++ )  {^143^^^^^128^158^for  ( int i = 0; i < dateFormats.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^return now;^148^^^^^133^163^return cal;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Argument_Swapping]^Date datetime = dateStr[i].parse ( dateFormats ) ;^145^^^^^130^160^Date datetime = dateFormats[i].parse ( dateStr ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Variable_Misuse]^Date datetime = dateFormats[i].parse ( value ) ;^145^^^^^130^160^Date datetime = dateFormats[i].parse ( dateStr ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[BugLab_Wrong_Literal]^for  ( int i = monthsAgo; i < dateFormats.length; i++ )  {^143^^^^^128^158^for  ( int i = 0; i < dateFormats.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
