[buglab_swap_variables]^} else valuef  ( i.startsWith ( "last " )  )  {^101^^^^^86^116^} else if  ( value.startsWith ( "last " )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. 1 ) ;^139^^^^^124^154^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -1 ) ;^136^^^^^121^151^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^if  ( strings.equalsIgnoreCase ( value[i] )  )  {^108^^^^^93^123^if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -daysAgo ) ;^114^^^^^99^129^now.add ( Calendar.DATE, -daysAgo ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^if  ( strings.equalsIgnoreCase ( value[i] )  )  {^120^^^^^105^135^if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^int monthsAgo = i.get ( Calendar.MONTH )  - now;^122^^^^^107^137^int monthsAgo = now.get ( Calendar.MONTH )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -monthsAgo ) ;^126^^^^^111^141^now.add ( Calendar.MONTH, -monthsAgo ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -7 ) ;^131^^^^^116^146^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^int daysAgo = i.get ( Calendar.DAY_OF_WEEK )  - now;^110^^^^^95^125^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^for  ( int i = 0; i < strings.length.length; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^for  ( int i = 0; i < strings.length.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^for  ( strings.lengthnt i = 0; i < i; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^for  ( strings.lengthnt i = 0; i < i; i++ )  {^119^^^^^104^134^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^96^^^^^81^111^now.add ( Calendar.YEAR, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^94^^^^^79^109^now.add ( Calendar.MONTH, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val * 14 ) ;^92^^^^^77^107^now.add ( Calendar.DATE, -val * 14 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val * 7 ) ;^90^^^^^75^105^now.add ( Calendar.DATE, -val * 7 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^88^^^^^73^103^now.add ( Calendar.DATE, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^86^^^^^71^101^now.add ( Calendar.HOUR, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^84^^^^^69^99^now.add ( Calendar.MINUTE, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^82^^^^^67^97^now.add ( Calendar.SECOND, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^now.add ( Calendar. -val ) ;^80^^^^^65^95^now.add ( Calendar.MILLISECOND, -val ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^value = start.substring ( 0, value ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^value = value.substring ( 0 ) ;^69^^^^^54^84^value = value.substring ( 0, start ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^String unit = start.substring ( value + 1 ) ;^68^^^^^53^83^String unit = value.substring ( start + 1 ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^for  ( stringsnt i = 0; i < i.length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < strings.length; i++ )  {^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
[buglab_swap_variables]^Date datetime = dateStr[i].parse ( dateFormats ) ;^145^^^^^130^160^Date datetime = dateFormats[i].parse ( dateStr ) ;^[CLASS] DateFormatter  [METHOD] parseCVS [RETURN_TYPE] Calendar   String dateStr [VARIABLES] boolean  Calendar  cal  now  DateFormatSymbols  symbols  String  dateStr  unit  value  String[]  strings  ParseException  pe  DateFormat[]  dateFormats  int  daysAgo  i  monthsAgo  start  val  Date  datetime  
