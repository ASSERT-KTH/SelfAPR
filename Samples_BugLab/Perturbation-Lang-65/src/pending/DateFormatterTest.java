[buglab_swap_variables]^now.set ( Calendar. 0 ) ;^77^^^^^62^92^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.set ( Calendar. 0 ) ;^82^^^^^67^97^now.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.set ( Calendar. 0 ) ;^83^^^^^68^98^now.set ( Calendar.SECOND, 0 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -1 ) ;^128^^^^^113^143^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -1 ) ;^132^^^^^117^147^now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -14 ) ;^137^^^^^122^152^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -14 ) ;^141^^^^^126^156^now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -1 ) ;^146^^^^^131^161^now.add ( Calendar.MINUTE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -8 ) ;^150^^^^^135^165^now.add ( Calendar.MINUTE, -8 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -1 ) ;^155^^^^^140^170^now.add ( Calendar.MILLISECOND, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -100 ) ;^159^^^^^144^174^now.add ( Calendar.MILLISECOND, -100 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -30 ) ;^163^^^^^148^178^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -30 ) ;^167^^^^^152^182^now.add ( Calendar.SECOND, -30 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^171^^^^^156^186^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^175^^^^^160^190^now.add ( Calendar.HOUR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^179^^^^^164^194^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^183^^^^^168^198^now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^187^^^^^172^202^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^191^^^^^176^206^now.add ( Calendar.MONTH, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^195^^^^^180^210^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -2 ) ;^199^^^^^184^214^now.add ( Calendar.YEAR, -2 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -1 ) ;^204^^^^^189^219^now.add ( Calendar.DATE, -1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. 1 ) ;^209^^^^^194^224^now.add ( Calendar.DATE, 1 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -7 ) ;^217^^^^^202^232^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^204^234^now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -7 ) ;^225^^^^^210^240^now.add ( Calendar.DATE, -7 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. -12 ) ;^233^^^^^218^248^now.add ( Calendar.MONTH, -12 ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^now.add ( Calendar. 0 - now.get ( Calendar.MONTH )  ) ;^235^^^^^220^250^now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[CLASS] DateFormatterTest  [METHOD] testParseCVS [RETURN_TYPE] void   [VARIABLES] boolean  Calendar  now  IllegalArgumentException  ex  
[buglab_swap_variables]^if  ( Math.abs ( cal2.getTime (  ) .getTime (  )  - cal1.getTime (  ) .getTime (  )  )  > delta )  {^246^^^^^245^250^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[buglab_swap_variables]^throw new AssertionFailedError ( cal2 + " expected " + cal1.getTime (  )  + " but got " + message.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[buglab_swap_variables]^throw new AssertionFailedError ( message + " expected " + cal2.getTime (  )  + " but got " + cal1.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
[buglab_swap_variables]^throw new AssertionFailedError ( cal1 + " expected " + message.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^247^248^^^^245^250^throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[CLASS] DateFormatterTest  [METHOD] assertEquals [RETURN_TYPE] void   String message Calendar cal1 Calendar cal2 long delta [VARIABLES] boolean  Calendar  cal1  cal2  String  message  long  delta  
