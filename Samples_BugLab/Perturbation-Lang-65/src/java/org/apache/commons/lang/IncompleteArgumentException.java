[BugLab_Wrong_Operator]^super ( argName  >>  " is incomplete." ) ;^58^^^^^57^59^super ( argName + " is incomplete." ) ;^[CLASS] IncompleteArgumentException  [METHOD] <init> [RETURN_TYPE] String)   String argName [VARIABLES] long  serialVersionUID  String  argName  boolean  
[BugLab_Argument_Swapping]^super ( items + " is missing the following argName: " + safeArrayToString ( items )  ) ;^68^69^70^71^^67^72^super ( argName + " is missing the following items: " + safeArrayToString ( items )  ) ;^[CLASS] IncompleteArgumentException  [METHOD] <init> [RETURN_TYPE] String[])   String argName String[] items [VARIABLES] String  argName  String[]  items  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^super ( argName  <<  " is missing the following items: "  <<  safeArrayToString ( items )  ) ;^68^69^70^71^^67^72^super ( argName + " is missing the following items: " + safeArrayToString ( items )  ) ;^[CLASS] IncompleteArgumentException  [METHOD] <init> [RETURN_TYPE] String[])   String argName String[] items [VARIABLES] String  argName  String[]  items  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^super ( argName  <  " is missing the following items: " + safeArrayToString ( items )  ) ;^68^69^70^71^^67^72^super ( argName + " is missing the following items: " + safeArrayToString ( items )  ) ;^[CLASS] IncompleteArgumentException  [METHOD] <init> [RETURN_TYPE] String[])   String argName String[] items [VARIABLES] String  argName  String[]  items  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^return array != null ? null : Arrays.asList ( array ) .toString (  ) ;^81^^^^^80^82^return array == null ? null : Arrays.asList ( array ) .toString (  ) ;^[CLASS] IncompleteArgumentException  [METHOD] safeArrayToString [RETURN_TYPE] String   Object[] array [VARIABLES] long  serialVersionUID  Object[]  array  boolean  
