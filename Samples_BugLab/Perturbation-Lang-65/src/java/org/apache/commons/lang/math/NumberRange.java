[BugLab_Wrong_Operator]^if  ( num != null )  {^61^^^^^60^76^if  ( num == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^if  ( min instanceof Comparable == false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( num instanceof Comparable >= false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( num  >=  Comparable == false )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Literal]^if  ( num instanceof Comparable == true )  {^64^^^^^60^76^if  ( num instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^if  ( min instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( num instanceof Double ||  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( num  !=  Double &&  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( num instanceof Float ||  (  ( Float )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Wrong_Operator]^if  ( num  ^  Float &&  (  ( Float )  num ) .isNaN (  )  )  {^70^^^^^60^76^if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^this.max = min;^75^^^^^60^76^this.max = num;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num [VARIABLES] String  toString  boolean  Number  max  min  num  long  serialVersionUID  int  hashCode  
[BugLab_Variable_Misuse]^if  ( num == null || num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num1 == null || num == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Argument_Swapping]^if  ( num2 == null || num1 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1 == null && num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1 != null || num2 == null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1 == null || num2 != null )  {^97^^^^^82^112^if  ( num1 == null || num2 == null )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num.getClass (  )  != num2.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num1.getClass (  )  != num.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Argument_Swapping]^if  ( num2.getClass (  )  != num1.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1.getClass (  )  > num2.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num1.getClass (  )  != num1.getClass (  )  )  {^100^^^^^85^115^if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num2 instanceof Comparable == false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1 instanceof Comparable <= false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1  >=  Comparable == false )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Literal]^if  ( num1 instanceof Comparable == true )  {^103^^^^^88^118^if  ( num1 instanceof Comparable == false )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num2 instanceof Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1  >>  Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( num1  ^  Double )  {^106^^^^^91^121^if  ( num1 instanceof Double )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^} else if  ( num2 instanceof Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^} else if  ( num1  !=  Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  (  (  ( Float )  num1 ) .isNaN (  )  &&  (  ( Float )  num2 ) .isNaN (  )  )  {^111^^^^^96^126^if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  (  (  ( Double )  num1 ) .isNaN (  )  &&  (  ( Double )  num2 ) .isNaN (  )  )  {^107^^^^^92^122^if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^} else if  ( num1  &  Float )  {^110^^^^^95^125^} else if  ( num1 instanceof Float )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num1 ) ;^116^^^^^101^131^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( hashCode == 0 )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^if  ( compare >= 0 )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Literal]^if  ( compare == hashCode )  {^117^^^^^102^132^if  ( compare == 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^} else if  ( hashCode > 0 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Operator]^} else if  ( compare >= 0 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Literal]^} else if  ( compare > 1 )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.min = num2;^124^^^^^120^126^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.max = num;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.min = num1;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.max = num2;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.min = num;^121^^^^^106^136^this.min = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.min = num2;^124^^^^^109^139^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.max = num1;^125^^^^^110^140^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.min = num2;^118^^^^^103^133^this.min = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.max = num2;^119^^^^^104^134^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Wrong_Literal]^} else if  ( compare > hashCode )  {^120^^^^^105^135^} else if  ( compare > 0 )  {^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.max = num1;^125^^^^^120^126^this.max = num2;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^this.max = num;^122^^^^^107^137^this.max = num1;^[CLASS] NumberRange  [METHOD] <init> [RETURN_TYPE] Number)   Number num1 Number num2 [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^return num2;^138^^^^^137^139^return min;^[CLASS] NumberRange  [METHOD] getMinimumNumber [RETURN_TYPE] Number   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^return num2;^147^^^^^146^148^return max;^[CLASS] NumberRange  [METHOD] getMaximumNumber [RETURN_TYPE] Number   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  long  serialVersionUID  int  compare  hashCode  
[BugLab_Variable_Misuse]^if  ( num2 == null )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( number != null )  {^164^^^^^163^173^if  ( number == null )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^return true;^165^^^^^163^173^return false;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^if  ( number.getClass (  )  != num2.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^if  ( min.getClass (  )  != number.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( number.getClass (  )  >= min.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^if  ( num2.getClass (  )  != min.getClass (  )  )  {^167^^^^^163^173^if  ( number.getClass (  )  != min.getClass (  )  )  {^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^int compareMin =  (  ( Comparable )  min ) .compareTo ( num2 ) ;^170^^^^^163^173^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^int compareMax =  (  ( Comparable )  max ) .compareTo ( num2 ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^int compareMax =  (  ( Comparable )  max ) .compareTo ( num1 ) ;^171^^^^^163^173^int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^return hashCode <= 0 && compareMax >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return compareMax <= 0 && compareMin >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^return compareMin <= 0 || compareMax >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^return compareMin > 0 && compareMax >= 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^return compareMin <= 0 && compareMax > 0;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^return compareMin <= -1 && compareMax >= -1;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^return compareMin <= compare && compareMax >= compare;^172^^^^^163^173^return compareMin <= 0 && compareMax >= 0;^[CLASS] NumberRange  [METHOD] containsNumber [RETURN_TYPE] boolean   Number number [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( obj <= this )  {^191^^^^^190^199^if  ( obj == this )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^return false;^192^^^^^190^199^return true;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( obj instanceof NumberRange != false )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( obj  <  NumberRange == false )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^if  ( obj instanceof NumberRange == true )  {^194^^^^^190^199^if  ( obj instanceof NumberRange == false )  {^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^return true;^195^^^^^190^199^return false;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^return number.equals ( range.min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^return min.equals ( number )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^return min.equals ( range.min )  && number.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^return min.equals ( range.min )  && max.equals ( number ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return range.equals ( min.min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return range.max.equals ( range.min )  && max.equals ( min ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return min.equals ( max )  && range.min.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return min.equals ( range.min )  && range.max.equals ( max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return min.equals ( range.max )  && max.equals ( range.min ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^return min.equals ( range.min )  || max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return min.equals ( range.min.min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return range.min.equals ( min )  && max.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^return min.equals ( max.min )  && range.equals ( range.max ) ;^198^^^^^190^199^return min.equals ( range.min )  && max.equals ( range.max ) ;^[CLASS] NumberRange  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] NumberRange  range  boolean  Number  max  min  num  num1  num2  number  Object  obj  String  toString  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^if  ( compareMin == 0 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( hashCode != 0 )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^if  ( hashCode == compareMin )  {^207^^^^^206^214^if  ( hashCode == 0 )  {^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^hashCode = 16;^208^^^^^206^214^hashCode = 17;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * compareMin + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 * hashCode + getClass (  |  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 + hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^hashCode = 38 * hashCode + getClass (  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * compareMin + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * hashCode + num2.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^hashCode = 37 * min + hashCode.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 * hashCode + min.hashCode (  >=  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 / hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^hashCode = hashCode * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * compareMin + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * hashCode + number.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Argument_Swapping]^hashCode = 37 * max + hashCode.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 * hashCode + max.hashCode (  <  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 / hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^hashCode = 38 * hashCode + max.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * hashCode + number.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 * hashCode + getClass (  >  ) .hashCode (  ) ;^209^^^^^206^214^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 * hashCode + min.hashCode (  ||  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 - hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^hashCode = 36 * hashCode + min.hashCode (  ) ;^210^^^^^206^214^hashCode = 37 * hashCode + min.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^hashCode = 37 * hashCode + max.hashCode (  ^  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^hashCode = 37 * hashCode + num2.hashCode (  ) ;^211^^^^^206^214^hashCode = 37 * hashCode + max.hashCode (  ) ;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^return compareMin;^213^^^^^206^214^return hashCode;^[CLASS] NumberRange  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Operator]^if  ( toString != null )  {^224^^^^^223^234^if  ( toString == null )  {^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^StringBuffer buf = new StringBuffer ( compare ) ;^225^^^^^223^234^StringBuffer buf = new StringBuffer ( 32 ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Wrong_Literal]^StringBuffer buf = new StringBuffer ( hashCode ) ;^225^^^^^223^234^StringBuffer buf = new StringBuffer ( 32 ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^buf.append ( num2 ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^buf.append ( num2 ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^buf.append ( number ) ;^227^^^^^223^234^buf.append ( min ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
[BugLab_Variable_Misuse]^buf.append ( number ) ;^229^^^^^223^234^buf.append ( max ) ;^[CLASS] NumberRange  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  String  toString  boolean  Number  max  min  num  num1  num2  number  long  serialVersionUID  int  compare  compareMax  compareMin  hashCode  
