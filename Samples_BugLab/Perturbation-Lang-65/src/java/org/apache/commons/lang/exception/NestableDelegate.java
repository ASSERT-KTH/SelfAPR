[buglab_swap_variables]^return causeMsg + ": " + baseMsg;^148^^^^^139^149^return baseMsg + ": " + causeMsg;^[CLASS] NestableDelegate  [METHOD] getMessage [RETURN_TYPE] String   String baseMsg [VARIABLES] Throwable  nestable  nestedCause  t  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  
[buglab_swap_variables]^for  ( throwables.lengthnt i = 0; i < i; i++ )  {^163^^^^^160^170^for  ( int i = 0; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] getMessages [RETURN_TYPE] String[]   [VARIABLES] Throwable  nestable  nestedCause  t  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  String[]  msgs  Throwable[]  throwables  int  i  
[buglab_swap_variables]^for  ( throwablesnt i = 0; i < i.length; i++ )  {^163^^^^^160^170^for  ( int i = 0; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] getMessages [RETURN_TYPE] String[]   [VARIABLES] Throwable  nestable  nestedCause  t  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  String[]  msgs  Throwable[]  throwables  int  i  
[buglab_swap_variables]^if  ( throwables.length >= fromIndex )  {^247^^^^^239^265^if  ( fromIndex >= throwables.length )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^if  ( fromIndex >= throwables.length.length )  {^247^^^^^239^265^if  ( fromIndex >= throwables.length )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^if  ( fromIndex >= throwables )  {^247^^^^^239^265^if  ( fromIndex >= throwables.length )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + throwables.length + " >= " + fromIndex ) ;^248^249^^^^239^265^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length ) ;^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length.length ) ;^248^249^^^^239^265^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length ) ;^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + throwables + " >= " + fromIndex.length ) ;^248^249^^^^239^265^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length ) ;^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables ) ;^248^249^^^^239^265^throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length ) ;^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^if  ( throwables.equals ( type[i].getClass (  )  )  )  {^259^^^^^251^263^if  ( type.equals ( throwables[i].getClass (  )  )  )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( fromIndexnt i = i; i < throwables.length; i++ )  {^258^^^^^251^263^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( throwables.lengthnt i = fromIndex; i < i; i++ )  {^258^^^^^251^263^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( int i = fromIndex; i < throwables.length.length; i++ )  {^258^^^^^251^263^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( int i = throwables.length; i < fromIndex; i++ )  {^258^^^^^251^263^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^if  ( throwables.isAssignableFrom ( type[i].getClass (  )  )  )  {^253^^^^^239^265^if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( fromIndexnt i = i; i < throwables.length; i++ )  {^252^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( throwables.lengthnt i = fromIndex; i < i; i++ )  {^252^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^if  ( throwables.equals ( type[i].getClass (  )  )  )  {^259^^^^^239^265^if  ( type.equals ( throwables[i].getClass (  )  )  )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( int i = fromIndex; i < throwables.length.length; i++ )  {^252^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( int i = throwables.length; i < fromIndex; i++ )  {^252^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( fromIndexnt i = i; i < throwables.length; i++ )  {^258^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( throwablesnt i = fromIndex; i < i.length; i++ )  {^258^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( int i = fromIndex; i < throwables; i++ )  {^258^^^^^239^265^for  ( int i = fromIndex; i < throwables.length; i++ )  {^[CLASS] NestableDelegate  [METHOD] indexOfThrowable [RETURN_TYPE] int   Class type int fromIndex [VARIABLES] Throwable  nestable  nestedCause  t  Class  type  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  Throwable[]  throwables  int  fromIndex  i  
[buglab_swap_variables]^for  ( lennt i=0, i=st.length; i < len; i++ )  {^337^^^^^322^352^for  ( int i=0, len=st.length; i < len; i++ )  {^[CLASS] NestableDelegate  [METHOD] printStackTrace [RETURN_TYPE] void   PrintWriter out [VARIABLES] boolean  matchSubclasses  topDown  trimStackFrames  Iterator  iter  Throwable  nestable  nestedCause  t  throwable  List  stacks  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  st  int  i  len  PrintWriter  out  
[buglab_swap_variables]^for  ( int i=0=st.length; i < len; i++ )  {^337^^^^^322^352^for  ( int i=0, len=st.length; i < len; i++ )  {^[CLASS] NestableDelegate  [METHOD] printStackTrace [RETURN_TYPE] void   PrintWriter out [VARIABLES] boolean  matchSubclasses  topDown  trimStackFrames  Iterator  iter  Throwable  nestable  nestedCause  t  throwable  List  stacks  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  st  int  i  len  PrintWriter  out  
[buglab_swap_variables]^stacks.set ( currList, i.toArray ( new String[currList.size (  ) ] ) ) ;^389^390^391^392^^377^395^stacks.set ( i, currList.toArray ( new String[currList.size (  ) ] ) ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^stacks.set (  currList.toArray ( new String[currList.size (  ) ] ) ) ;^389^390^391^392^^377^395^stacks.set ( i, currList.toArray ( new String[currList.size (  ) ] ) ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^stacks.set ( i.toArray ( new String[currList.size (  ) ] ) ) ;^389^390^391^392^^377^395^stacks.set ( i, currList.toArray ( new String[currList.size (  ) ] ) ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^for  ( sizent i=stacks.size (  ) , i=size-1; i > 0; i-- )  {^378^^^^^377^395^for  ( int size=stacks.size (  ) , i=size-1; i > 0; i-- )  {^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^for  ( int size=stacks.size (  ) =size-1; i > 0; i-- )  {^378^^^^^377^395^for  ( int size=stacks.size (  ) , i=size-1; i > 0; i-- )  {^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^String[] curr =  ( String[] )  i.get ( stacks ) ;^379^^^^^377^395^String[] curr =  ( String[] )  stacks.get ( i ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^String[] next =  ( String[] )  i.get ( stacks-1 ) ;^380^^^^^377^395^String[] next =  ( String[] )  stacks.get ( i-1 ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^int trimmed = curr.length.length - currList.size (  ) ;^386^^^^^377^395^int trimmed = curr.length - currList.size (  ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^int trimmed = currList - curr.length.size (  ) ;^386^^^^^377^395^int trimmed = curr.length - currList.size (  ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^ExceptionUtils.removeCommonFrames ( nextList, currList ) ;^384^^^^^377^395^ExceptionUtils.removeCommonFrames ( currList, nextList ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^ExceptionUtils.removeCommonFrames (  nextList ) ;^384^^^^^377^395^ExceptionUtils.removeCommonFrames ( currList, nextList ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^ExceptionUtils.removeCommonFrames ( currList ) ;^384^^^^^377^395^ExceptionUtils.removeCommonFrames ( currList, nextList ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^int trimmed = currList.length - curr.size (  ) ;^386^^^^^377^395^int trimmed = curr.length - currList.size (  ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
[buglab_swap_variables]^int trimmed = curr - curr.lengthList.size (  ) ;^386^^^^^377^395^int trimmed = curr.length - currList.size (  ) ;^[CLASS] NestableDelegate  [METHOD] trimStackFrames [RETURN_TYPE] void   List stacks [VARIABLES] Throwable  nestable  nestedCause  t  throwable  List  currList  nextList  stacks  boolean  matchSubclasses  topDown  trimStackFrames  String  MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  String[]  curr  next  int  i  size  trimmed  
