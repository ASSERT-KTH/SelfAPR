[BugLab_Variable_Misuse]^_mask = count;^44^^^^^43^55^_mask = mask;^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Variable_Misuse]^while  (  ( count & 1 )  == 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Operator]^while  (  ( bit_pattern & 1 )  != 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Operator]^while  (  ( bit_pattern  >  1 )  == 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^while  (  ( bit_pattern & bit_pattern )  == 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^while  (  ( bit_pattern & 1 )  == -1 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^while  (  ( bit_pattern & 2 )  == 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^bit_pattern >>= count;^51^^^^^43^55^bit_pattern >>= 1;^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Variable_Misuse]^if  ( mask != 0 )  {^48^^^^^43^55^if  ( bit_pattern != 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Operator]^if  ( bit_pattern == 0 )  {^48^^^^^43^55^if  ( bit_pattern != 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^if  ( bit_pattern != _shift_count )  {^48^^^^^43^55^if  ( bit_pattern != 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^if  ( bit_pattern != -1 )  {^48^^^^^43^55^if  ( bit_pattern != 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Operator]^while  (  ( bit_pattern & 1 )  <= 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Operator]^while  (  ( bit_pattern  >=  1 )  == 0 )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^while  (  ( bit_pattern & 1 )  ==  )  {^49^^^^^43^55^while  (  ( bit_pattern & 1 )  == 0 )  {^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Wrong_Literal]^bit_pattern >>= 0;^51^^^^^43^55^bit_pattern >>= 1;^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Variable_Misuse]^_shift_count = mask;^54^^^^^43^55^_shift_count = count;^[CLASS] BitField  [METHOD] <init> [RETURN_TYPE] BitField(int)   int mask [VARIABLES] int  _mask  _shift_count  bit_pattern  count  mask  boolean  
[BugLab_Variable_Misuse]^return getRawValue ( mask )  >> _shift_count;^72^^^^^71^73^return getRawValue ( holder )  >> _shift_count;^[CLASS] BitField  [METHOD] getValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return getRawValue ( holder )  >> mask;^72^^^^^71^73^return getRawValue ( holder )  >> _shift_count;^[CLASS] BitField  [METHOD] getValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Argument_Swapping]^return getRawValue ( _shift_count )  >> holder;^72^^^^^71^73^return getRawValue ( holder )  >> _shift_count;^[CLASS] BitField  [METHOD] getValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Operator]^return getRawValue ( holder )    instanceof   _shift_count;^72^^^^^71^73^return getRawValue ( holder )  >> _shift_count;^[CLASS] BitField  [METHOD] getValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return mask & _mask;^101^^^^^100^102^return holder & _mask;^[CLASS] BitField  [METHOD] getRawValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return holder & mask;^101^^^^^100^102^return holder & _mask;^[CLASS] BitField  [METHOD] getRawValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Argument_Swapping]^return _mask & holder;^101^^^^^100^102^return holder & _mask;^[CLASS] BitField  [METHOD] getRawValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Operator]^return holder   instanceof   _mask;^101^^^^^100^102^return holder & _mask;^[CLASS] BitField  [METHOD] getRawValue [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return  ( mask & _mask )  != 0;^129^^^^^128^130^return  ( holder & _mask )  != 0;^[CLASS] BitField  [METHOD] isSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return  ( holder & mask )  != 0;^129^^^^^128^130^return  ( holder & _mask )  != 0;^[CLASS] BitField  [METHOD] isSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Argument_Swapping]^return  ( _mask & holder )  != 0;^129^^^^^128^130^return  ( holder & _mask )  != 0;^[CLASS] BitField  [METHOD] isSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Operator]^return  ( holder & _mask )  > 0;^129^^^^^128^130^return  ( holder & _mask )  != 0;^[CLASS] BitField  [METHOD] isSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Operator]^return  ( holder  <  _mask )  != 0;^129^^^^^128^130^return  ( holder & _mask )  != 0;^[CLASS] BitField  [METHOD] isSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Literal]^return  ( holder & _mask )  != _mask;^129^^^^^128^130^return  ( holder & _mask )  != 0;^[CLASS] BitField  [METHOD] isSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return  ( mask & _mask )  == _mask;^145^^^^^144^146^return  ( holder & _mask )  == _mask;^[CLASS] BitField  [METHOD] isAllSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return  ( holder & mask )  == _mask;^145^^^^^144^146^return  ( holder & _mask )  == _mask;^[CLASS] BitField  [METHOD] isAllSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Argument_Swapping]^return  ( _mask & holder )  == _mask;^145^^^^^144^146^return  ( holder & _mask )  == _mask;^[CLASS] BitField  [METHOD] isAllSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Operator]^return  ( holder & _mask )  != _mask;^145^^^^^144^146^return  ( holder & _mask )  == _mask;^[CLASS] BitField  [METHOD] isAllSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Wrong_Operator]^return  ( holder  <  _mask )  == _mask;^145^^^^^144^146^return  ( holder & _mask )  == _mask;^[CLASS] BitField  [METHOD] isAllSet [RETURN_TYPE] boolean   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  boolean  
[BugLab_Variable_Misuse]^return  ( holder & ~_mask )  |  (  ( mask << _shift_count )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Variable_Misuse]^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & holder ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Variable_Misuse]^return  ( holder & ~_mask )  |  (  ( value << mask )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Argument_Swapping]^return  ( _mask & ~_mask )  |  (  ( value << _shift_count )  & holder ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Argument_Swapping]^return  ( holder & ~_mask )  |  (  ( _shift_count << value )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Argument_Swapping]^return  ( _shift_count & ~_mask )  |  (  ( value << holder )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Wrong_Operator]^return  >=   ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Wrong_Operator]^return  ( holder  <<  ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Wrong_Operator]^return  ( holder  <=  ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Wrong_Operator]^return  ( holder & ~_mask )  |  (  ( value  >>  _shift_count )  & _mask ) ;^159^^^^^158^160^return  ( holder & ~_mask )  |  (  ( value << _shift_count )  & _mask ) ;^[CLASS] BitField  [METHOD] setValue [RETURN_TYPE] int   int holder int value [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Argument_Swapping]^return  ( short )  setValue ( value, holder ) ;^173^^^^^172^174^return  ( short )  setValue ( holder, value ) ;^[CLASS] BitField  [METHOD] setShortValue [RETURN_TYPE] short   short holder short value [VARIABLES] short  holder  value  int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Variable_Misuse]^return mask & ~_mask;^185^^^^^184^186^return holder & ~_mask;^[CLASS] BitField  [METHOD] clear [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Wrong_Operator]^return holder  !=  ~_mask;^185^^^^^184^186^return holder & ~_mask;^[CLASS] BitField  [METHOD] clear [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Variable_Misuse]^return value | _mask;^222^^^^^221^223^return holder | _mask;^[CLASS] BitField  [METHOD] set [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Variable_Misuse]^return holder | mask;^222^^^^^221^223^return holder | _mask;^[CLASS] BitField  [METHOD] set [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Argument_Swapping]^return _mask | holder;^222^^^^^221^223^return holder | _mask;^[CLASS] BitField  [METHOD] set [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Wrong_Operator]^return  &&  holder | _mask;^222^^^^^221^223^return holder | _mask;^[CLASS] BitField  [METHOD] set [RETURN_TYPE] int   int holder [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  
[BugLab_Variable_Misuse]^return flag ? set ( value )  : clear ( holder ) ;^260^^^^^259^261^return flag ? set ( holder )  : clear ( holder ) ;^[CLASS] BitField  [METHOD] setBoolean [RETURN_TYPE] int   int holder boolean flag [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  flag  
[BugLab_Argument_Swapping]^return holder ? set ( flag )  : clear ( holder ) ;^260^^^^^259^261^return flag ? set ( holder )  : clear ( holder ) ;^[CLASS] BitField  [METHOD] setBoolean [RETURN_TYPE] int   int holder boolean flag [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  flag  
[BugLab_Argument_Swapping]^return holder ? setShort ( flag )  : clearShort ( holder ) ;^273^^^^^272^274^return flag ? setShort ( holder )  : clearShort ( holder ) ;^[CLASS] BitField  [METHOD] setShortBoolean [RETURN_TYPE] short   short holder boolean flag [VARIABLES] short  holder  int  _mask  _shift_count  bit_pattern  count  holder  mask  value  boolean  flag  
[BugLab_Argument_Swapping]^return holder ? setByte ( flag )  : clearByte ( holder ) ;^286^^^^^285^287^return flag ? setByte ( holder )  : clearByte ( holder ) ;^[CLASS] BitField  [METHOD] setByteBoolean [RETURN_TYPE] byte   byte holder boolean flag [VARIABLES] int  _mask  _shift_count  bit_pattern  count  holder  mask  value  byte  holder  boolean  flag  
