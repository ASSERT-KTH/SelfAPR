[BugLab_Variable_Misuse]^int sz = i;^166^^^^^164^170^int sz = set.length;^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Argument_Swapping]^int sz = set.length.length;^166^^^^^164^170^int sz = set.length;^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Argument_Swapping]^int sz = set;^166^^^^^164^170^int sz = set.length;^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Variable_Misuse]^for  ( sznt i = 0; i < sz; i++ )  {^167^^^^^164^170^for  ( int i = 0; i < sz; i++ )  {^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Argument_Swapping]^for  ( sznt i = 0; i < i; i++ )  {^167^^^^^164^170^for  ( int i = 0; i < sz; i++ )  {^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= sz; i++ )  {^167^^^^^164^170^for  ( int i = 0; i < sz; i++ )  {^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < sz; i++ )  {^167^^^^^164^170^for  ( int i = 0; i < sz; i++ )  {^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Wrong_Literal]^for  ( int i = i; i < sz; i++ )  {^167^^^^^164^170^for  ( int i = 0; i < sz; i++ )  {^[CLASS] CharSet  [METHOD] <init> [RETURN_TYPE] String[])   String[] set [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String[]  set  Map  COMMON  long  serialVersionUID  int  i  sz  
[BugLab_Argument_Swapping]^Object set = setStr.get ( COMMON ) ;^138^^^^^137^143^Object set = COMMON.get ( setStr ) ;^[CLASS] CharSet  [METHOD] getInstance [RETURN_TYPE] CharSet   String setStr [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  Object  set  String  setStr  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( set == null )  {^139^^^^^137^143^if  ( set != null )  {^[CLASS] CharSet  [METHOD] getInstance [RETURN_TYPE] CharSet   String setStr [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  Object  set  String  setStr  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( str != null )  {^179^^^^^178^205^if  ( str == null )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^while  ( len < len )  {^185^^^^^178^205^while  ( pos < len )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^while  ( pos < pos )  {^185^^^^^178^205^while  ( pos < len )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^while  ( pos <= len )  {^185^^^^^178^205^while  ( pos < len )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^if  ( pos >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^if  ( remainder >= 4 && str.charAt ( len )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^if  ( pos >= 4 && str.charAt ( remainder )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^if  ( str >= 4 && remainder.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^if  ( remainder >= 4 && pos.charAt ( str )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 || str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder > 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  >= '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  != '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos  <<  2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if   instanceof   ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  >  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder < 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ||  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos  ^  2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  !=  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  <=  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ^  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= pos && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos  )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= 5 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + len )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( pos >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( remainder >= 3 && str.charAt ( len + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^} else if  ( str >= 3 && remainder.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^} else if  ( remainder >= 3 && pos.charAt ( str + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 || str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder > 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  < '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  >>  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ||  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  > '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  <=  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if   instanceof   ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ^  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  |  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >=  && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 3 && str.charAt ( pos + pos )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 3 && str.charAt ( pos + len )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( pos >= 2 && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( remainder >= 2 && str.charAt ( remainder )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^} else if  ( str >= 2 && remainder.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^} else if  ( pos >= 2 && str.charAt ( remainder )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 2 || str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder > 2 && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 2 && str.charAt ( pos )  > '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= remainder && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= len && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^set.add ( new CharRange ( str.charAt ( remainder )  )  ) ;^201^^^^^195^203^set.add ( new CharRange ( str.charAt ( pos )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^set.add ( new CharRange ( pos.charAt ( str )  )  ) ;^201^^^^^195^203^set.add ( new CharRange ( str.charAt ( pos )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += pos;^198^^^^^178^205^pos += 2;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^set.add ( new CharRange ( pos.charAt ( str + 1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  |  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos  ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , false )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^set.add ( new CharRange ( str.charAt ( remainder + 1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  <<  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + pos ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  <=  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^set.add ( new CharRange ( str.charAt ( remainder )  )  ) ;^201^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^set.add ( new CharRange ( pos.charAt ( str )  )  ) ;^201^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^} else if  ( remainder >= 2 && pos.charAt ( str )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos   instanceof   1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^set.add ( new CharRange ( str.charAt ( remainder ) , str.charAt ( pos + 2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^set.add ( new CharRange ( pos.charAt ( str ) , str.charAt ( pos + 2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  <=  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  ||  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + len )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  >  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( len >= 2 && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 2 && str.charAt ( pos )  != '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 1 && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 3 && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  >>  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  &  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  !=  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += 4;^194^^^^^178^205^pos += 3;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += 3;^198^^^^^178^205^pos += 2;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += 2;^202^^^^^178^205^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  |  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + remainder )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  ||  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + remainder ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( remainder >= 3 && str.charAt ( remainder + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  ||  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 3 && str.charAt ( pos  )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  &  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  <<  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + len ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^set.add ( new CharRange ( str.charAt ( remainder + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^set.add ( new CharRange ( pos.charAt ( str + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  >=  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  ==  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + remainder ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + pos ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , false )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  !=  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  >  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + pos ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + remainder ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  ||  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos  ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos   instanceof   3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( len >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^} else if  ( pos >= 3 && str.charAt ( remainder + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  != '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  !=  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder == 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  ==  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  !=  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= remainder && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^} else if  ( remainder >= 2 && str.charAt ( len )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder == 2 && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += ;^202^^^^^195^203^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += 1;^198^^^^^178^205^pos += 2;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  &&  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += remainder;^198^^^^^178^205^pos += 2;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += remainder;^202^^^^^178^205^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += remainder;^194^^^^^178^205^pos += 3;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  ==  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  >>  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 2 && str.charAt ( pos )  <= '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += pos;^202^^^^^195^203^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos +  ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  <  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += 3;^190^^^^^178^205^pos += 4;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += pos;^202^^^^^178^205^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos   instanceof   1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  !=  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  &&  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^int remainder =  ( pos - pos ) ;^186^^^^^178^205^int remainder =  ( len - pos ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^int remainder =  ( len - len ) ;^186^^^^^178^205^int remainder =  ( len - pos ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^int remainder =  ( pos - len ) ;^186^^^^^178^205^int remainder =  ( len - pos ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^int remainder =  ( len  >  pos ) ;^186^^^^^178^205^int remainder =  ( len - pos ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Variable_Misuse]^if  ( remainder >= 4 && str.charAt ( remainder )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  |  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  &  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos +  ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  >  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  <=  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  >=  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  > '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos  ==  2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  >=  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  <<  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder == 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos  >>  2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  &&  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= remainder && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= 3 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  <= '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ==  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 2 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= pos && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += len;^202^^^^^195^203^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  ^  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += ;^202^^^^^178^205^pos += 1;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  ==  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += len;^194^^^^^178^205^pos += 3;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos   instanceof   2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >=  && str.charAt ( pos )  == '^' )  {^195^^^^^178^205^} else if  ( remainder >= 2 && str.charAt ( pos )  == '^' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  >=  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += pos;^194^^^^^178^205^pos += 3;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  >=  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos  <  2 )  )  ) ;^193^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos ) , str.charAt ( pos + 2 )  )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += ;^190^^^^^178^205^pos += 4;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  ^  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  ||  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  >= '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  <  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  <=  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= len && str.charAt ( pos + 1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^} else if  ( remainder >= 3 && str.charAt ( pos + remainder )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += len;^198^^^^^178^205^pos += 2;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += 2;^194^^^^^178^205^pos += 3;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^pos += len;^190^^^^^178^205^pos += 4;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  <  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  >  1 ) , true )  ) ;^197^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^int remainder =  ( len  <<  pos ) ;^186^^^^^178^205^int remainder =  ( len - pos ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos  !=  2 )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Literal]^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + pos )  == '-' )  {^187^^^^^178^205^if  ( remainder >= 4 && str.charAt ( pos )  == '^' && str.charAt ( pos + 2 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  <  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos  <<  1 ) , str.charAt ( pos + 3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos  <<  3 ) , true )  ) ;^189^^^^^178^205^set.add ( new CharRange ( str.charAt ( pos + 1 ) , str.charAt ( pos + 3 ) , true )  ) ;^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Wrong_Operator]^} else if  ( remainder >= 3 && str.charAt ( pos  <<  1 )  == '-' )  {^191^^^^^178^205^} else if  ( remainder >= 3 && str.charAt ( pos + 1 )  == '-' )  {^[CLASS] CharSet  [METHOD] add [RETURN_TYPE] void   String str [VARIABLES] Set  set  boolean  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  String  str  Map  COMMON  long  serialVersionUID  int  len  pos  remainder  
[BugLab_Argument_Swapping]^if  ( ch.contains ( range )  )  {^229^^^^^226^234^if  ( range.contains ( ch )  )  {^[CLASS] CharSet  [METHOD] contains [RETURN_TYPE] boolean   char ch [VARIABLES] Set  set  boolean  char  ch  Iterator  it  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  Map  COMMON  long  serialVersionUID  CharRange  range  
[BugLab_Wrong_Literal]^return false;^230^^^^^226^234^return true;^[CLASS] CharSet  [METHOD] contains [RETURN_TYPE] boolean   char ch [VARIABLES] Set  set  boolean  char  ch  Iterator  it  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  Map  COMMON  long  serialVersionUID  CharRange  range  
[BugLab_Argument_Swapping]^for  ( Iterator set = it.iterator (  ) ; it.hasNext (  ) ; )  {^227^^^^^226^234^for  ( Iterator it = set.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CharSet  [METHOD] contains [RETURN_TYPE] boolean   char ch [VARIABLES] Set  set  boolean  char  ch  Iterator  it  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  Map  COMMON  long  serialVersionUID  CharRange  range  
[BugLab_Wrong_Literal]^return true;^233^^^^^226^234^return false;^[CLASS] CharSet  [METHOD] contains [RETURN_TYPE] boolean   char ch [VARIABLES] Set  set  boolean  char  ch  Iterator  it  CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  Map  COMMON  long  serialVersionUID  CharRange  range  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^250^^^^^249^258^if  ( obj == this )  {^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^251^^^^^249^258^return true;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( obj instanceof CharSet <= false )  {^253^^^^^249^258^if  ( obj instanceof CharSet == false )  {^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( obj  <<  CharSet == false )  {^253^^^^^249^258^if  ( obj instanceof CharSet == false )  {^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( obj instanceof CharSet == true )  {^253^^^^^249^258^if  ( obj instanceof CharSet == false )  {^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^254^^^^^249^258^return false;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Variable_Misuse]^return set.equals ( ASCII_NUMERIC.set ) ;^257^^^^^249^258^return set.equals ( other.set ) ;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Argument_Swapping]^return other.equals ( set.set ) ;^257^^^^^249^258^return set.equals ( other.set ) ;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Argument_Swapping]^return other.set.equals ( set ) ;^257^^^^^249^258^return set.equals ( other.set ) ;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Variable_Misuse]^return set.equals ( EMPTY.set ) ;^257^^^^^249^258^return set.equals ( other.set ) ;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Argument_Swapping]^return set.equals ( other.set.set ) ;^257^^^^^249^258^return set.equals ( other.set ) ;^[CLASS] CharSet  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Object  obj  Set  set  boolean  Map  COMMON  long  serialVersionUID  
[BugLab_Wrong_Operator]^return 89 + set.hashCode (  <<  ) ;^267^^^^^266^268^return 89 + set.hashCode (  ) ;^[CLASS] CharSet  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] CharSet  ASCII_ALPHA  ASCII_ALPHA_LOWER  ASCII_ALPHA_UPPER  ASCII_NUMERIC  EMPTY  other  Set  set  boolean  Map  COMMON  long  serialVersionUID  
