[BugLab_Wrong_Literal]^public static final Fraction ZERO = new Fraction ( 1, 1 ) ;^44^^^^^39^49^public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE = new Fraction ( 2, 2 ) ;^48^^^^^43^53^public static final Fraction ONE = new Fraction ( 1, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_HALF = new Fraction ( 2, 2 ) ;^52^^^^^47^57^public static final Fraction ONE_HALF = new Fraction ( 1, 2 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_HALF = new Fraction ( 1, 4 ) ;^52^^^^^47^57^public static final Fraction ONE_HALF = new Fraction ( 1, 2 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_THIRD = new Fraction ( 1, 4 ) ;^56^^^^^51^61^public static final Fraction ONE_THIRD = new Fraction ( 1, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction TWO_THIRDS = new Fraction ( 1, 3 ) ;^60^^^^^55^65^public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction TWO_THIRDS = new Fraction ( 2, 4 ) ;^60^^^^^55^65^public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_QUARTER = new Fraction ( 0, 4 ) ;^64^^^^^59^69^public static final Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_QUARTER = new Fraction ( 1, 5 ) ;^64^^^^^59^69^public static final Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction TWO_QUARTERS = new Fraction ( 1, 4 ) ;^68^^^^^63^73^public static final Fraction TWO_QUARTERS = new Fraction ( 2, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_FIFTH = new Fraction ( 0, 5 ) ;^76^^^^^71^81^public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction ONE_FIFTH = new Fraction ( 1, 4 ) ;^76^^^^^71^81^public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction TWO_FIFTHS = new Fraction ( this, 5 ) ;^80^^^^^75^85^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 6 ) ;^80^^^^^75^85^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction THREE_FIFTHS = new Fraction ( , 5 ) ;^84^^^^^79^89^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 6 ) ;^84^^^^^79^89^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 6 ) ;^88^^^^^83^93^public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[BugLab_Variable_Misuse]^this.numerator = hashCode;^122^^^^^120^124^this.numerator = numerator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^this.denominator = numerator;^123^^^^^120^124^this.denominator = denominator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( numerator == 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Wrong_Operator]^if  ( denominator != 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Wrong_Literal]^if  ( denominator == -1 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( numerator < 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Wrong_Operator]^if  ( denominator <= 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.MIN_VALUE || hashCode==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.hashCode || denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Argument_Swapping]^if  ( denominator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Wrong_Operator]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^hashCode = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^numerator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( hashCode==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.numerator || denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^return new Fraction ( hashCode, denominator ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^return new Fraction ( numerator, hashCode ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Argument_Swapping]^return new Fraction ( denominator, numerator ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[BugLab_Variable_Misuse]^if  ( whole == 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( denominator <= 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( denominator == -1 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( denominator == 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( denominator < whole )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( whole < 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( numerator > 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( numerator < 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( whole <= 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( whole < numerator )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numeratorValue = whole *  ( long ) denominator + hashCode;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Argument_Swapping]^numeratorValue = numerator *  ( long ) denominator + whole;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^numeratorValue = whole *  &  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^numeratorValue + = whole *  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numeratorValue = hashCode *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^numeratorValue = whole *  ( long ) denominator   instanceof   numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^numeratorValue - = whole *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numeratorValue = numerator *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numeratorValue = whole *  ( long ) denominator - whole;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Argument_Swapping]^numeratorValue = numerator *  ( long ) denominator - whole;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^numeratorValue = whole *  ( long ) denominator  !=  numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numeratorValue = hashCode *  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numeratorValue = whole *  ( long ) denominator + whole;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( serialVersionUID < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( numeratorValue < Integer.whole || numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.whole )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( numeratorValue < Integer.MIN_VALUE && numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( numeratorValue <= Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue == Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^return new Fraction (  ( int )  numeratorValue, whole ) ;^188^^^^^168^189^return new Fraction (  ( int )  numeratorValue, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( denominator >= 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( denominator == 1 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( hashCode==0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( numerator==numerator )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^return THREE_QUARTERS;^210^^^^^205^229^return ZERO;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^return TWO_THIRDS;^210^^^^^205^229^return ZERO;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( whole==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( denominator==Integer.MIN_VALUE &&  ( whole&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Argument_Swapping]^if  ( numerator==Integer.MIN_VALUE &&  ( denominator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( denominator==Integer.MIN_VALUE ||  ( numerator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&0 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==hashCode )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^numerator/=1; denominator/=1;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^numerator/=hashCode; denominator/=hashCode;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( whole < 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( denominator <= 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Literal]^if  ( denominator < denominator )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( whole==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.whole || denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Argument_Swapping]^if  ( denominator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Wrong_Operator]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^whole = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^whole = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.MIN_VALUE || whole==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.hashCode || denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( whole, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( numerator, whole ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Argument_Swapping]^int gcd = greatestCommonDivisor ( denominator, numerator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^numerator /= numerator;^226^^^^^205^229^numerator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^denominator /= whole;^227^^^^^205^229^denominator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^return new Fraction ( whole, denominator ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^return new Fraction ( numerator, whole ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Argument_Swapping]^return new Fraction ( denominator, numerator ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[BugLab_Variable_Misuse]^int sign =  ( x2 < 0 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^int sign =  ( value <= 0 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^value = Math.abs ( y1 ) ;^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^value = Math.abs ( y2 ) ;^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^if  ( y2  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^if  ( value  > Integer.numer2 || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^if  ( value  > Integer.MAX_VALUE && Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^if  ( value  >= Integer.MAX_VALUE || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^if  ( x2  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^value -= numerator;^253^^^^^238^268^value -= wholeNumber;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^value += wholeNumber;^253^^^^^238^268^value -= wholeNumber;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int numerdenom2 = denom2;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int denom0 = 0;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int numerhashCode = hashCode;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int denom1 = numer0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int numer2 = numer1;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int denom2 = denom1;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^int a2 = a1;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^double xa2 = a2;^263^^^^^248^278^double x1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^double x2 = numer2;^264^^^^^249^279^double x2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^double y1 = y2 - a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^double y1 = value - numer1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^double y1 = a1 - value;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^double y1 = value  !=  a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^double y2 = whole;^266^^^^^251^281^double y2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^a2 =  ( int )   ( x1 / x2 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^a2 =  ( int )   ( y1 / x1 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^a2 =  ( int )   ( x1 - y1 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^x2 = y2;^274^^^^^259^289^x2 = y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^y2 = y2 - a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^y2 = x1 - numer2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^y2 = x1 - a2 * x2;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^y2 = y1 - a2 * x1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^y2 = a2 - x1 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^y2 = x1  >=  a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^y2 / = x1 - a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^numer2 = numer2 * numer1 + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^numer2 = a1 * sign + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^numer2 = numer0 * numer1 + a1;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^numer2 = a1 * numer0 + numer1;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^numer2 = a1 + numer1 + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^denom2 = numer2 * denom1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^denom2 = a1 * numer2 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^denom2 = denom1 * a1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^denom2 = a1 * denom0 + denom1;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^denom2 = a1 + denom1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^fraction =  ( double )  numer2 *  ( double )  denom2;^278^^^^^263^293^fraction =  ( double )  numer2 /  ( double )  denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^delta2 = Math.abs ( y2 - fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^delta2 = Math.abs ( value - y2 ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^delta2 = Math.abs ( fraction - value ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^delta2 = Math.abs ( value  <  fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^x1 = y2;^282^^^^^267^297^x1 = x2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^y1 = y1;^283^^^^^268^298^y1 = y2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^numer0 = i;^284^^^^^269^299^numer0 = numer1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^numer1 = numer0;^286^^^^^271^301^numer1 = numer2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^delta2 = Math.abs ( value - y1 ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^delta2 = Math.abs ( value   instanceof   fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^if  ( i != 25 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Literal]^if  ( i == wholeNumber )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( i + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer0 + numer2 * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer0 + wholeNumber * wholeNumber )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * whole, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^return getReducedFraction (  ( denom0 + wholeNumber * numer0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^return getReducedFraction (  ( wholeNumber + numer0 * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^return getReducedFraction (  ( numer0 + denom0 * wholeNumber )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Argument_Swapping]^return getReducedFraction (  ( sign + wholeNumber * denom0 )  * numer0, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^return / getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^return getReducedFraction (  ( numer0  &&  wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^return getReducedFraction (  ( numer0 + wholeNumber / denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer2 + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer0 + numer1 * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer0 + wholeNumber * numer2 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * numer2, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^return + getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^return getReducedFraction (  ( numer0  >=  wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Wrong_Operator]^return getReducedFraction (  ( numer0 + wholeNumber - denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[BugLab_Variable_Misuse]^if  ( toString == null )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( str != null )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int pos = toString.indexOf ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( wholeNumber >= 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( pos == 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos >= denom )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( Double.parseDouble ( toString )  ) ;^322^^^^^307^337^return getFraction ( Double.parseDouble ( str )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^pos = toString.indexOf ( ' ' ) ;^326^^^^^311^341^pos = str.indexOf ( ' ' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( pos >= 0 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos > gcd )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos > -1 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos >  )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0 < 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( pos > 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos < 1 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( i, numer, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer1, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, numer ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( denom, numer, whole ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( whole, denom, numer ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( a2, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  ^  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos  )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer1 )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( wholeNumber, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( i + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  ==  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  &&  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + i )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, numer0 ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( numer, whole, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^str = toString.substring ( pos + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^str = str.substring ( i + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^str = pos.substring ( str + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^str = str.substring ( pos  <  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^str = str.substring ( pos + numer0 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^pos = toString.indexOf ( '/' ) ;^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( pos, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, wholeNumber, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, numer2 ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( numer, whole, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( whole, denom, numer ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( denom, numer, whole ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int whole = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int whole = Integer.parseInt ( str.substring ( 0, numer )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int whole = Integer.parseInt ( pos.substring ( 0, str )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int whole = Integer.parseInt ( str.substring ( -1, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numerator )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( whole, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + numer2 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int whole = Integer.parseInt ( str.substring ( 0, i )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int whole = Integer.parseInt ( str.substring ( wholeNumber, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^str = str.substring ( pos  >=  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^str = str.substring ( pos  ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer0 )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( denom2, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( numerator, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( i + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  ||  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos  )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer1 + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >>  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + denom2 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer0, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, i, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, wholeNumber ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( i < 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( pos <= 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos < a2 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos < denominator )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, numer2 ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, i )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer2 + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  <<  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numerator )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( denominator, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( numer2, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + gcd )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, wholeNumber ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^str = str.substring ( numer + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^str = str.substring ( pos  ^  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer1, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, pos, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int whole = Integer.parseInt ( str.substring ( 1, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( numer, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int whole = Integer.parseInt ( str.substring ( a2, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int whole = Integer.parseInt ( str.substring ( 0, numer1 )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int whole = Integer.parseInt ( str.substring ( denom2, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^str = str.substring ( numer0 + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^str = str.substring ( pos  !=  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^str = str.substring ( pos + gcd ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( 1, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( denom0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  &&  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >=  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + numerator )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( whole, numer, numer1 ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^pos = toString.indexOf ( '/' ) ;^341^^^^^326^356^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer2 < 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( pos > 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos < denom )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( pos < 1 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer2, denom ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer, wholeNumber ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( denom, numer ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, wholeNumber )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( -1, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numerator + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >=  1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos  )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer2 )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( a2, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( numerator, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( i + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos   instanceof   1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + wholeNumber )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  |  1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + denom )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( wholeNumber, denom ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer, numer1 ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( Integer.parseInt ( toString ) , 1 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return getFraction ( Integer.parseInt ( str ) , pos ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return getFraction ( Integer.parseInt ( str ) , gcd ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numerator, denom ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer, numer0 ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return getFraction ( denom, numer ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numerator )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( 1, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer0 + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >=  1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos + denominator )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int numer = Integer.parseInt ( str.substring ( 0, numer0 )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( hashCode, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int numer = Integer.parseInt ( str.substring ( a1, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer2 + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  <  1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^int denom = Integer.parseInt ( str.substring ( pos  )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int denom = Integer.parseInt ( str.substring ( numer + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >  1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return getFraction ( numer0, denom ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return i;^364^^^^^363^365^return numerator;^[CLASS] Fraction  [METHOD] getNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return pos;^373^^^^^372^374^return denominator;^[CLASS] Fraction  [METHOD] getDenominator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Math.abs ( numer0 % denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Math.abs ( numerator % numer0 ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return Math.abs ( denominator % numerator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return Math.abs ( numerator  >=  denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Math.abs ( numer % denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Math.abs ( numerator % numer2 ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return Math.abs ( numerator  &  denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return numer / denominator;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return numerator / numer1;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return denominator / numerator;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return numerator + denominator;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return numer / denominator;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return numerator / numer0;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return denominator / numerator;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return numerator + denominator;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return  ( long )  numerator / numer0;^426^^^^^425^427^return  ( long )  numerator / denominator;^[CLASS] Fraction  [METHOD] longValue [RETURN_TYPE] long   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return  ( long )  numerator * denominator;^426^^^^^425^427^return  ( long )  numerator / denominator;^[CLASS] Fraction  [METHOD] longValue [RETURN_TYPE] long   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return  (  ( float )  numerator )  *  (  ( float )  denominator ) ;^436^^^^^435^437^return  (  ( float )  numerator )  /  (  ( float )  denominator ) ;^[CLASS] Fraction  [METHOD] floatValue [RETURN_TYPE] float   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return  (  ( double )  numerator )  -  (  ( double )  denominator ) ;^446^^^^^445^447^return  (  ( double )  numerator )  /  (  ( double )  denominator ) ;^[CLASS] Fraction  [METHOD] doubleValue [RETURN_TYPE] double   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( Math.abs ( numer2 ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , sign ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^int gcd = greatestCommonDivisor ( Math.abs ( denominator ) , numerator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( Math.abs ( numer1 ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , pos ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^int gcd = greatestCommonDivisor ( Math.abs ( i ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer == 1 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( gcd != 1 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( gcd == denom0 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Fraction.getFraction ( numerator / wholeNumber, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Fraction.getFraction ( numer2 / gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Fraction.getFraction ( numerator / gcd, whole / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return Fraction.getFraction ( gcd / numerator, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return Fraction.getFraction ( numerator / denominator, gcd / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return Fraction.getFraction ( numerator - gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return Fraction.getFraction ( numerator / gcd, denominator - gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Fraction.getFraction ( numerator / numer0, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Fraction.getFraction ( sign / gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return Fraction.getFraction ( numerator / gcd, sign / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return Fraction.getFraction ( denominator / gcd, numerator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^return Fraction.getFraction ( numerator + gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0 == 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( numerator != 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( numerator == denom2 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer1==Integer.MIN_VALUE )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.i )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( sign<0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( numer, numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( denominator, numer ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return new Fraction ( numerator, denominator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( sign, numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( denominator, numer0 ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( -denominator, -sign ) ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( -denominator, -numer ) ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( denominator, numer2 ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( numer0, numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numerator==Integer.i )  {^501^^^^^499^505^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return new Fraction ( -numerator, numer0 ) ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0 >= 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( numerator < 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( numerator >= sign )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer1 == 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^iTHREE_QUARTERS  ( power == 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( power != 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  ( power <= 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( power == denom2 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else if  ( whole == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else iTHREE_FIFTHS  ( power == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^} else if  ( power >= 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^} else if  ( power != 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power == a2 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power == numer0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else if  ( numer2 < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else iTWO_THIRDS  ( power < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^} else if  ( power <= 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power <  )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power < -1 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  (  ( numer1 % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^iTWO_QUARTERS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power % 2 )  >= 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  !=  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 2 )  ==  )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % denom2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return THREE_QUARTERS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer1/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return power.pow ( f/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denom1 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_THIRDS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer0/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/whole ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return ZERO.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/1 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_FIFTHS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer2/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Argument_Swapping]^return power.pow ( f/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return THREE_FIFTHS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/3 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_THIRDS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer0/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return THREE_FIFTHS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power==Integer.numer )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( sign/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer2/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( hashCode ) .pow ( - ( power/hashCode )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( numer2 ) .pow ( - ( power/numer2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( denom1 ) .pow ( - ( power/denom1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( -numer0 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( sign ) .pow ( - ( power/sign )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer0/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( 1 ) .pow ( - ( power/1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  <  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % denom1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numerator/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/pos ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_FIFTHS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numer2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return ZERO.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( wholeNumber/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( -numer ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/a2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( whole/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denom0 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( -numerator ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_QUARTERS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denominator ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else if  ( numer < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else iTHREE_FIFTHS  ( power < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power < numer0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power < denom0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  (  ( numer0 % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^iTWO_FIFTHS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power % 2 )  != 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  &&  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 2 )  == a2 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % numerator )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numer ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numerator ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numerator ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer1/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/ ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return THREE_QUARTERS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/whole ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( numer2/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer2==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power==Integer.numer0 )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer1/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( numer ) .pow ( - ( power/numer )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( denominator ) .pow ( - ( power/denominator )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( gcd ) .pow ( - ( power/gcd )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( power ) .pow ( - ( power/power )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( pos ) .pow ( - ( power/pos )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow (  ) .pow ( - ( power/ )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( numerator ) .pow ( - ( power/numerator )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( -pos ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power==Integer.wholeNumber )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( i ) .pow ( - ( power/i )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( 3 ) .pow ( - ( power/3 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  (  ( wholeNumber % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^iTHREE_FIFTHS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  ^  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 3 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 2 )  == denominator )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/3 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/i ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_FIFTHS;^539^^^^^535^553^return ONE;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denom1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( sign/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/hashCode ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/sign ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else if  ( numer1 == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else iZERO  ( power == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^} else if  ( power <= 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power == denominator )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power == 1 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else iZERO  ( power < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power < denom2 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  (  ( numer % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^iZERO  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  &  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 2 )  == i )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numer0 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/a2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( wholeNumber/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denom2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power==Integer.numer2 )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( denom2 ) .pow ( - ( power/denom2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( -numer2 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( whole ) .pow ( - ( power/whole )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( -numer1 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power==Integer.numerator )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return this.invert (  ) .pow ( 2 ) .pow ( - ( pos/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( numer0 ) .pow ( - ( power/numer0 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  >=  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % a1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power %  )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/a1 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denom ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return TWO_QUARTERS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numer ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/denom ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/sign ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return f.pow ( pos/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else if  ( pos < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^} else iTHREE_QUARTERS  ( power < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^} else if  ( power < numer2 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % power )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/power ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numer1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/numer2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer1==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power==Integer.numer1 )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( wholeNumber ) .pow ( - ( power/wholeNumber )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( a1 ) .pow ( - ( power/a1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return this.invert (  ) .pow ( denom ) .pow ( - ( power/denom )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( wholeNumber==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^iTHREE_QUARTERS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Operator]^if  (  ( power  |  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % 2 )  == wholeNumber )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  (  ( power % numer0 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/hashCode ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Wrong_Literal]^return f.pow ( power/pos ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^return THREE_QUARTERS;^539^^^^^535^553^return ONE;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0>0 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( u>denom0 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( whole>0 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( power>0 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0>0 )  { v=-v; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( v>denominator )  { v=-v; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numerator>0 )  { v=-v; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^int k=1;^574^^^^^559^589^int k=0;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^while  (  ( numer1&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^while  (  ( u&1 ) ==0 &&  ( numer2&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && t<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Argument_Swapping]^while  (  ( k&1 ) ==0 &&  ( v&1 ) ==0 && u<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Argument_Swapping]^while  (  ( v&1 ) ==0 &&  ( u&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Argument_Swapping]^while  (  ( u&1 ) ==0 &&  ( k&1 ) ==0 && v<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Operator]^while  (  ( u&1 ) ==0 ||  ( v&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^while  (  ( u&whole ) ==0 &&  ( v&whole ) ==0 && k<3whole )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^while  (  ( u&k ) ==0 &&  ( v&k ) ==0 && k<3k )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^u/=3; v/=3; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^u/=1; v/=1; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^u/=denom1; v/=denom1; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numerator==31 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^if  ( k==numer2 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^while  (  ( t&0 ) ==0 )  {^589^^^^^574^604^while  (  ( t&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^while  (  ( t&1 ) ==t )  {^589^^^^^574^604^while  (  ( t&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^if  ( numer0>0 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^v = power;^596^^^^^593^597^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^t/=1;^590^^^^^575^605^t/=2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^v = u;^596^^^^^581^611^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^t =  ( numer1 - u ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^t =  ( v - numerator ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Argument_Swapping]^t =  ( u - v ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Operator]^t =  ( v  <<  u ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^t =  ( v - u ) /3;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Variable_Misuse]^return -u* ( 1<<numer1 ) ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Operator]^return + -u* ( 1<<k ) ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Literal]^return -u* ( denom<<k ) ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[BugLab_Wrong_Operator]^long + m =  (  ( long ) x ) * (  ( long ) y ) ;^619^^^^^618^625^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( serialVersionUID < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( m < Integer.numer2 || m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( m < Integer.MIN_VALUE || m > Integer.numerator )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( m < Integer.MIN_VALUE && m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( m == Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( m < Integer.MIN_VALUE || m >= Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^long / m =  (  ( long ) x ) * (  ( long ) y ) ;^638^^^^^636^643^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( serialVersionUID > Integer.MAX_VALUE )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( m > Integer.numer1 )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( m == Integer.MAX_VALUE )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^long s =  <  ( long ) x+ ( long ) y;^655^^^^^654^661^long s =  ( long ) x+ ( long ) y;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( s < Integer.numer2 || s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( s < Integer.MIN_VALUE || s > Integer.sign )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( s < Integer.MIN_VALUE && s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( s <= Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( s < Integer.MIN_VALUE || s == Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( serialVersionUID < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( s < Integer.MIN_VALUE || s > Integer.numer1 )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( s < Integer.MIN_VALUE && s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( s == Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( s < Integer.MIN_VALUE || s >= Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( ZERO == null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( fraction != null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numer1 == 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator != 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return isAdd ? TWO_FIFTHS : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return fraction ? isAdd : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return isAdd ? THREE_QUARTERS : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return isAdd ? f : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( TWO_QUARTERS.numerator == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( power == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( fraction.numerator.numerator == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( fraction == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( fraction.numerator <= 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( denominator, TWO_QUARTERS.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( y, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( denominator, numerator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d1 = greatestCommonDivisor ( fraction, denominator.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d1 = greatestCommonDivisor ( fraction.denominator, denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( denominator, TWO_THIRDS.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( pos, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( pos==1 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( d== )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( numer2, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, numer2 )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, TWO_FIFTHS.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, numer1 )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( uvp ? addAndCheck ( isAdd, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( fraction.denominator, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, uvp )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( upv, uvp )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( fraction ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, isAdd.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( uvp, denominator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( upv, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( fraction.denominator ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, isAdd )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( numerator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, numer2 )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( fraction.denominator, denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( uvp, fraction.denominator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, upv )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( numerator, THREE_QUARTERS.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( power, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( numerator, upv ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int uvp = mulAndCheck ( numerator, fraction.denominator.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int uvp = mulAndCheck ( fraction.denominator, numerator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( THREE_QUARTERS.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( uvp, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( fraction.numerator, numerator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int upv = mulAndCheck ( denominator.numerator, fraction ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int upv = mulAndCheck ( denominator, fraction.numerator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( numerator, TWO_FIFTHS.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( pos, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( numerator, numerator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( f.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( isAdd ? addAndCheck ( numer1, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( isAdd ? addAndCheck ( uvp, pos )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^( isAdd ? addAndCheck ( upv, uvp )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( isAdd ? addAndCheck ( uvp, sign )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator, f.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( numerator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator, numer2 )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^mulPosAndCheck ( fraction, denominator.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^mulPosAndCheck ( fraction.denominator, denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( t, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, numerator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, THREE_QUARTERS.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( numer2, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( fraction, denominator.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( numerator, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, v )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, f.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, numerator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( numerator, numer1 ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( numer2, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( fraction.numerator, numer2 ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int upv = mulAndCheck ( fraction, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( t, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int uvp = mulAndCheck ( numerator, numer2 ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int uvp = mulAndCheck ( fraction, numerator.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( TWO_FIFTHS.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int upv = mulAndCheck ( fraction.numerator, pos ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( isAdd ? addAndCheck ( tmodd1, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( isAdd ? addAndCheck ( uvp, numerator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( isAdd ? addAndCheck ( power, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator, TWO_THIRDS.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^mulPosAndCheck ( denominator, fraction.denominator.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( TWO_FIFTHS.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/pos )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( numer1 ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( numer1/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger uvp = BigInteger.valueOf ( fraction.denominator ) .multiply ( BigInteger.valueOf ( numerator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( THREE_QUARTERS.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/numerator )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger uvp = BigInteger.valueOf ( upv ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^.multiply ( BigInteger.valueOf ( THREE_QUARTERS.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^.multiply ( BigInteger.valueOf ( fraction.denominator/numer2 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^.multiply ( BigInteger.valueOf ( t/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^.multiply ( BigInteger.valueOf ( fraction.denominator.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger upv = BigInteger.valueOf ( numer1 ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( numer2/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger upv = BigInteger.valueOf ( denominator.numerator ) .multiply ( BigInteger.valueOf ( fraction/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger upv = BigInteger.valueOf ( denominator ) .multiply ( BigInteger.valueOf ( fraction.numerator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger upv = BigInteger.valueOf ( THREE_QUARTERS.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( u/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger upv = BigInteger.valueOf ( TWO_FIFTHS.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger upv = BigInteger.valueOf ( fraction.numerator.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger upv = BigInteger.valueOf ( fraction ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^.multiply ( BigInteger.valueOf ( denominator/pos )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^.multiply ( BigInteger.valueOf ( numerator/d1 )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger t = isAdd ? w.add ( upv )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger t = isAdd ? uvp.add ( w )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger t = upv ? uvp.add ( isAdd )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger t = isAdd ? upv.add ( uvp )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int wmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int tmodd1 = t.mod ( BigInteger.valueOf ( numer2 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d1modd1 = t.mod ( BigInteger.valueOf ( t )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int tmodd1 = t.mod ( BigInteger.valueOf ( pos )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 =  ( pos==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d2 =  ( d1==0 ) ?d1:greatestCommonDivisor ( tmodd1, tmodd1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^int d2 =  ( tmodd1==1 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, pos ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger w = uvp.divide ( BigInteger.valueOf ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger w = t.divide ( BigInteger.valueOf ( numerator )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^BigInteger w = d2.divide ( BigInteger.valueOf ( t )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger w = w.divide ( BigInteger.valueOf ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger w = t.divide ( BigInteger.valueOf ( v )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^BigInteger w = t.divide ( BigInteger.valueOf ( numer2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( w.bitLength (  )  >= 31 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( w.bitLength (  )  > 30 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( uvp.bitLength (  )  > 31 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( uvp.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, TWO_QUARTERS.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/numerator )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( sign/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, pos/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return new Fraction ( fraction.denominator.intValue (  ) , mulPosAndCheck ( denominator/d1, w/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, TWO_THIRDS.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/pos )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( numer2/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( uvp.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^761^762^^^^746^776^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator/d1, TWO_QUARTERS.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator/d1, fraction.denominator/numerator )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( numer2/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator/d1, u/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( TWO_FIFTHS == null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( fraction != null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == 0 || f.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numer2 == 0 || fraction.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == 0 || u == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( fraction == 0 || numerator.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( fraction.numerator == 0 || numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator == 0 && fraction.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator <= 0 || fraction.numerator <= 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator == 0 || fraction.numerator != 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( numerator == 1 || fraction.numerator == 1 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( numerator ==  || fraction.numerator ==  )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return THREE_QUARTERS;^780^^^^^775^789^return ZERO;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return TWO_FIFTHS;^780^^^^^775^789^return ZERO;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( numerator, TWO_FIFTHS.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( pos, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( numerator, upv ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d1 = greatestCommonDivisor ( fraction, numerator.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d1 = greatestCommonDivisor ( fraction.denominator, numerator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( numerator, TWO_THIRDS.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( power, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d1 = greatestCommonDivisor ( numerator, numer1 ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 = greatestCommonDivisor ( pos, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 = greatestCommonDivisor ( fraction.numerator, pos ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d2 = greatestCommonDivisor ( denominator.numerator, fraction ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d2 = greatestCommonDivisor ( fraction, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^int d2 = greatestCommonDivisor ( denominator, fraction.numerator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 = greatestCommonDivisor ( TWO_QUARTERS.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 = greatestCommonDivisor ( u, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^int d2 = greatestCommonDivisor ( fraction.numerator, numer2 ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, THREE_QUARTERS.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numer1/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( numerator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.denominator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.numerator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/numer2 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, TWO_FIFTHS.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/y ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( sign/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, power/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return getReducedFraction ( mulAndCheck ( fraction.numerator/d1, numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return getReducedFraction ( mulAndCheck ( denominator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( numerator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^return getReducedFraction ( mulAndCheck ( fraction.denominator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, numerator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/numer2 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( mulAndCheck ( numerator/d1, THREE_QUARTERS.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( mulAndCheck ( numerator/d1, fraction.numerator/power ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( mulAndCheck ( tmodd1/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^( mulAndCheck ( numerator/d1, numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator/d2, fraction.denominator/pos )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( pos/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^mulPosAndCheck ( denominator/d2, power/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( TWO_FIFTHS == null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( fraction != null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( TWO_QUARTERS.numerator == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numer1 == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( fraction.numerator.numerator == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( fraction == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( fraction.numerator <= 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return multiplyBy ( TWO_THIRDS.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return multiplyBy ( THREE_QUARTERS.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return multiplyBy ( TWO_FIFTHS.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^823^^^^^822^832^if  ( obj == this )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return false;^824^^^^^822^832^return true;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( obj instanceof Fraction != false )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( obj  |  Fraction == false )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( obj instanceof Fraction == true )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return true;^827^^^^^822^832^return false;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return  ( getNumerator (  )  == ZERO.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^return  ( getNumerator (  )  == other.getNumerator (  )  || getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^return  ( getNumerator (  )  >= other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  != other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return  ( getNumerator (  )  == TWO_QUARTERS.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^getDenominator (  )  == TWO_QUARTERS.getDenominator (  )  ) ;^831^^^^^822^832^getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( hashCode != 0 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( hashCode == tmodd1 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^hashCode = 37 *  <=  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^hashCode / = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^hashCode = 37 *  ( 37 * 17  ^  getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^hashCode = 37 *  ( 37 + 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^hashCode = upv *  ( upv * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^hashCode = 37 *  ( 37 *  + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^hashCode = 37 *  !=  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^hashCode = 37 *  ( 37 - 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^hashCode = 36 *  ( 36 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^hashCode = sign *  ( sign * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^hashCode = 37 *  ( 37 * d2 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return pos;^844^^^^^839^845^return hashCode;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( this==TWO_FIFTHS )  {^861^^^^^859^878^if  ( this==other )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return numer;^862^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == TWO_THIRDS.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numer1 == other.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == pos && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == other.numerator && pos == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == other.numerator && denominator == t )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( numerator == other.numerator.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( other == numerator.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( other.numerator == numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( numerator == other.numerator && other.denominator == denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( other.denominator == other.numerator && denominator == numerator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator == other.numerator || denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator != other.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator == other.numerator && denominator != other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return uvp;^865^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return tmodd1;^865^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^long first =  ( long )  numerator *  ( long )  THREE_QUARTERS.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^long / first =  ( long )  numerator *  ( long )  other.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^long second =  ( long )  THREE_QUARTERS.numerator *  ( long )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^long - second =  ( long )  other.numerator *  ( long )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( serialVersionUID == second )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^if  ( second == first )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( first >= second )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( first < serialVersionUID )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^} else if  ( second < first )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( first <= second )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return 2;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return -0;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return -a1;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return a1;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return d2;^872^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return 0;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return -2;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return 1;^872^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^return numer1;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( toProperString == null )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( toString != null )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toString = new StringBuffer (  ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toString = new StringBuffer ( numer2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toString = new StringBuffer ( a1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toString = new StringBuffer ( 33 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toString = new StringBuffer ( numer ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toString = new StringBuffer ( 31 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return toProperString;^894^^^^^887^895^return toString;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( toString == null )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( toProperString != null )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator < 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator != 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( numerator <= 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( numerator == denom0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( numerator == upv )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( numerator == -1 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( tmodd1 == denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( numerator == numerator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^} else if  ( denominator == numerator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator <= denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator != denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( numer2 == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( numerator == -1 * pos )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Argument_Swapping]^} else if  ( denominator == -1 * numerator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator != -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator == -1 - denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( pos>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numerator>0?-numerator:numerator )  < -numerator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  (  ( numerator>0?-numerator:numerator )  <= -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>y?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( tmodd1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numer2 == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( properNumerator != 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == -1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( v ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( power ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer (  ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( tmodd1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer (  ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( upv ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( x ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( upv == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( properNumerator <= 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( upv ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( sign ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numerator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( sign ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( upv ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( uvp>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numerator>0?-numerator:numerator )  < -sign )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  (  ( numerator>0?-numerator:numerator )  > -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( k ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( wholeNumber ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( whole ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( wholeNumber ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( t ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numerator == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator ==  )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( power ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( k ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( numerator == -1 * power )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator == -1 / denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  ( numerator == -gcd * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numer2>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numerator>0?-numerator:numerator )  < -power )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>numer?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( y ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( pos ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( properNumerator >= 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( tmodd1 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( t ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( sign ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == a2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( y ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( y ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numerator>0?-numerator:numerator )  < -pos )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>-1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer (  ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( uvp ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( pos == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( v ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( whole ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( sign ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == 1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( power ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( y ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( pos ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( pos ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( pos == denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( numerator == -1 * numerator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator <= -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  ( numerator == -wholeNumber * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( t>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == d1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( uvp ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( upv ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == y )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( upv ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer (  ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numerator>0?-numerator:numerator )  < -upv )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( power ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( t ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( u == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( whole ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == denom2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( sign ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( v ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( whole ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( i ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( power ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( pos == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  ( numerator == -2 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( sign>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( numerator>0?-numerator:numerator )  < -t )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  (  ( numerator>0?-numerator:numerator )  == -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>u?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( properNumerator > 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == denominator )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( uvp ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( u ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( v ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( y ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( i ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>a1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( v ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == hashCode )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( x ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( u ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( t ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == x )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( t ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( x ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( numer2 == 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( numerator == 1 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( power == denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator > denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( tmodd1 == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator > -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  ( numerator == -v * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( power>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == denom )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( power ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( u ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>x?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( whole ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( power == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( tmodd1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( uvp ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == whole )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( whole ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator >= -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>properNumerator?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( denom ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( k ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( i ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( tmodd1 == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( i ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( v ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  ( sign == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^} else if  (  ( u>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>denominator?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( x ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^} else if  (  ( numerator>numerator?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == power )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( wholeNumber ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^} else if  ( numerator < -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( tmodd1 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( pos ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( u ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^if  ( y == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Operator]^if  ( properNumerator < 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^if  ( properNumerator == tmodd1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Wrong_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[BugLab_Variable_Misuse]^return toString;^934^^^^^906^935^return toProperString;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
