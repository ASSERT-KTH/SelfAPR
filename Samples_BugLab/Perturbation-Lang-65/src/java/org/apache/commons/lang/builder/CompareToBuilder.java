[BugLab_Wrong_Literal]^comparison = comparison;^110^^^^^108^111^comparison = 0;^[CLASS] CompareToBuilder  [METHOD] <init> [RETURN_TYPE] CompareToBuilder()   [VARIABLES] int  comparison  boolean  
[BugLab_Argument_Swapping]^return reflectionCompare ( rhs, lhs, false, null, null ) ;^141^^^^^140^142^return reflectionCompare ( lhs, rhs, false, null, null ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs [VARIABLES] int  comparison  Object  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^return reflectionCompare ( lhs, rhs, true, null, null ) ;^141^^^^^140^142^return reflectionCompare ( lhs, rhs, false, null, null ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs [VARIABLES] int  comparison  Object  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^return reflectionCompare ( rhs, lhs, compareTransients, null, null ) ;^173^^^^^172^174^return reflectionCompare ( lhs, rhs, compareTransients, null, null ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients [VARIABLES] int  comparison  Object  lhs  rhs  boolean  compareTransients  
[BugLab_Argument_Swapping]^return reflectionCompare ( lhs, compareTransients, rhs, null, null ) ;^173^^^^^172^174^return reflectionCompare ( lhs, rhs, compareTransients, null, null ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients [VARIABLES] int  comparison  Object  lhs  rhs  boolean  compareTransients  
[BugLab_Variable_Misuse]^return reflectionCompare ( rhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^205^^^^^204^206^return reflectionCompare ( lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs Collection excludeFields [VARIABLES] Collection  excludeFields  Object  lhs  rhs  boolean  int  comparison  
[BugLab_Argument_Swapping]^return reflectionCompare ( excludeFields, rhs, ReflectionToStringBuilder.toNoNullStringArray ( lhs )  ) ;^205^^^^^204^206^return reflectionCompare ( lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs Collection excludeFields [VARIABLES] Collection  excludeFields  Object  lhs  rhs  boolean  int  comparison  
[BugLab_Argument_Swapping]^return reflectionCompare ( rhs, lhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^205^^^^^204^206^return reflectionCompare ( lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs Collection excludeFields [VARIABLES] Collection  excludeFields  Object  lhs  rhs  boolean  int  comparison  
[BugLab_Variable_Misuse]^return reflectionCompare ( lhs, lhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^205^^^^^204^206^return reflectionCompare ( lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs Collection excludeFields [VARIABLES] Collection  excludeFields  Object  lhs  rhs  boolean  int  comparison  
[BugLab_Variable_Misuse]^return reflectionCompare ( rhs, rhs, false, null, excludeFields ) ;^237^^^^^236^238^return reflectionCompare ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  String[]  excludeFields  boolean  int  comparison  
[BugLab_Argument_Swapping]^return reflectionCompare ( rhs, lhs, false, null, excludeFields ) ;^237^^^^^236^238^return reflectionCompare ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  String[]  excludeFields  boolean  int  comparison  
[BugLab_Argument_Swapping]^return reflectionCompare ( excludeFields, rhs, false, null, lhs ) ;^237^^^^^236^238^return reflectionCompare ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  String[]  excludeFields  boolean  int  comparison  
[BugLab_Wrong_Literal]^return reflectionCompare ( lhs, rhs, true, null, excludeFields ) ;^237^^^^^236^238^return reflectionCompare ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  String[]  excludeFields  boolean  int  comparison  
[BugLab_Argument_Swapping]^return reflectionCompare ( lhs, excludeFields, false, null, rhs ) ;^237^^^^^236^238^return reflectionCompare ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  String[]  excludeFields  boolean  int  comparison  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^279^^^^^272^296^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^279^^^^^272^296^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Literal]^return comparison;^280^^^^^272^296^return 0;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^282^^^^^272^296^if  ( lhs == null || rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^282^^^^^272^296^if  ( lhs == null || rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^282^^^^^272^296^if  ( lhs == null || rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^282^^^^^272^296^if  ( lhs == null || rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^Class rhsClazz = lhs.getClass (  ) ;^285^^^^^272^296^Class lhsClazz = lhs.getClass (  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^if  ( !lhsClazz.isInstance ( lhs )  )  {^286^^^^^272^296^if  ( !lhsClazz.isInstance ( rhs )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, lhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, rhs, reflectUpToClass, compareToBuilder, compareTransients, excludeFields ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( rhs, lhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhsClazz, rhs, lhs, compareToBuilder, compareTransients, excludeFields ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( compareToBuilder, rhs, lhsClazz, lhs, compareTransients, excludeFields ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, compareTransients, compareToBuilder, lhsClazz, excludeFields ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( excludeFields, rhs, lhsClazz, compareToBuilder, compareTransients, lhs ) ;^290^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^while  ( reflectUpToClass.getSuperclass (  )  != null && lhsClazz != lhsClazz )  {^291^^^^^272^296^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^while  ( reflectUpToClassClazz.getSuperclass (  )  != null && lhsClazz != lhs )  {^291^^^^^272^296^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^while  ( lhsClazz.getSuperclass (  )  != null || lhsClazz != reflectUpToClass )  {^291^^^^^272^296^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^while  ( lhsClazz.getSuperclass (  )  == null && lhsClazz != reflectUpToClass )  {^291^^^^^272^296^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz == reflectUpToClass )  {^291^^^^^272^296^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^lhsClazz = reflectUpToClass.getSuperclass (  ) ;^292^^^^^272^296^lhsClazz = lhsClazz.getSuperclass (  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^reflectionAppend ( rhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, rhs, reflectUpToClass, compareToBuilder, compareTransients, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( rhs, lhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, compareTransients, lhsClazz, compareToBuilder, rhs, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, lhsClazz, rhs, compareToBuilder, compareTransients, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, compareToBuilder, lhsClazz, compareTransients, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, lhsClazz, excludeFields, compareTransients, compareToBuilder ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^while  ( reflectUpToClass.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^291^^^^^272^296^while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, lhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, compareTransients, compareToBuilder, lhsClazz, excludeFields ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Argument_Swapping]^reflectionAppend ( excludeFields, rhs, lhsClazz, compareToBuilder, compareTransients, lhs ) ;^293^^^^^272^296^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionCompare [RETURN_TYPE] int   Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClazz  reflectUpToClass  boolean  compareTransients  String[]  excludeFields  CompareToBuilder  compareToBuilder  int  comparison  
[BugLab_Wrong_Operator]^List excludedFieldList = excludeFields == null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^318^^^^^315^335^List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Literal]^AccessibleObject.setAccessible ( fields, false ) ;^319^^^^^315^335^AccessibleObject.setAccessible ( fields, true ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^if  ( !excludedFieldList.contains ( useTransients.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( f || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) ||  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  != -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients && !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Literal]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -comparison ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^builder.append ( rhs.get ( lhs ) , f.get ( f )  ) ;^327^^^^^315^335^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^builder.append ( f.get ( rhs ) , f.get ( lhs )  ) ;^327^^^^^315^335^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Variable_Misuse]^builder.append ( f.get ( rhs ) , f.get ( rhs )  ) ;^327^^^^^315^335^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^builder.append ( lhs.get ( f ) , f.get ( rhs )  ) ;^327^^^^^315^335^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Variable_Misuse]^builder.append ( f.get ( lhs ) , f.get ( lhs )  ) ;^327^^^^^315^335^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Variable_Misuse]^for  ( comparisonnt i = 0; i < fields.length && builder.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < comparison && builder.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( fields.lengthnt i = 0; i < i && builder.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < fields.length.length && builder.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < builderields.length && f.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < builder.comparison && fields.length == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < fields.length && builder == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < fields.length || builder.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= fields.length && builder.comparison == 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < fields.length && builder.comparison < 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < fields.length && builder.comparison >= 0; i++ )  {^320^^^^^315^335^for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  >= -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] CompareToBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  useTransients  Object  lhs  rhs  Class  clazz  List  excludedFieldList  String[]  excludeFields  CompareToBuilder  builder  int  comparison  i  Field[]  fields  IllegalAccessException  e  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^347^^^^^346^352^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] appendSuper [RETURN_TYPE] CompareToBuilder   int superCompareTo [VARIABLES] int  comparison  i  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^347^^^^^346^352^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] appendSuper [RETURN_TYPE] CompareToBuilder   int superCompareTo [VARIABLES] int  comparison  i  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison = i;^350^^^^^346^352^comparison = superCompareTo;^[CLASS] CompareToBuilder  [METHOD] appendSuper [RETURN_TYPE] CompareToBuilder   int superCompareTo [VARIABLES] int  comparison  i  superCompareTo  boolean  
[BugLab_Argument_Swapping]^return append ( rhs, lhs, null ) ;^375^^^^^374^376^return append ( lhs, rhs, null ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs [VARIABLES] int  comparison  i  superCompareTo  Object  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^404^^^^^389^419^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( comparison >= 0 )  {^404^^^^^389^419^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Literal]^if  ( comparison != superCompareTo )  {^404^^^^^389^419^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^407^^^^^392^422^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs >= rhs )  {^407^^^^^392^422^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^410^^^^^395^425^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^410^^^^^395^425^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = -0;^411^^^^^396^426^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = -i;^411^^^^^396^426^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^414^^^^^399^429^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^414^^^^^399^429^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = +2;^415^^^^^400^430^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = +0;^415^^^^^400^430^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( rhs.getClass (  ) .isArray (  )  )  {^418^^^^^403^433^if  ( lhs.getClass (  ) .isArray (  )  )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( comparator != null )  {^445^^^^^430^460^if  ( comparator == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison = lhs.compare ( comparator, rhs ) ;^448^^^^^445^449^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison = comparator.compare ( rhs, lhs ) ;^448^^^^^445^449^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison = rhs.compare ( lhs, comparator ) ;^448^^^^^445^449^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison =  (  ( Comparable )  lhs ) .compareTo ( lhs ) ;^446^^^^^431^461^comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison = rhs.compare ( lhs, comparator ) ;^448^^^^^433^463^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison = comparator.compare ( rhs, lhs ) ;^448^^^^^433^463^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( rhs instanceof long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  <=  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  >>  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  ^  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  ||  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  >=  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  &&  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  double[] )  {^432^^^^^417^447^} else if  ( lhs instanceof double[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  boolean[] )  {^436^^^^^421^451^} else if  ( lhs instanceof boolean[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  float[] )  {^434^^^^^419^449^} else if  ( lhs instanceof float[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  byte[] )  {^430^^^^^415^445^} else if  ( lhs instanceof byte[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  char[] )  {^428^^^^^413^443^} else if  ( lhs instanceof char[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  &  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  !=  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  <  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs  ==  long[] )  {^422^^^^^407^437^if  ( lhs instanceof long[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  int[] )  {^424^^^^^409^439^} else if  ( lhs instanceof int[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  short[] )  {^426^^^^^411^441^} else if  ( lhs instanceof short[] )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison = comparator.compare ( lhs, lhs ) ;^448^^^^^433^463^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison = lhs.compare ( comparator, rhs ) ;^448^^^^^433^463^comparison = comparator.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object lhs Object rhs Comparator comparator [VARIABLES] Object  lhs  rhs  boolean  int  comparison  i  superCompareTo  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^464^^^^^463^469^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^464^^^^^463^469^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != comparison )  {^464^^^^^463^469^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  (  ( rhs < lhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^467^^^^^463^469^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs <= rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^467^^^^^463^469^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs >= rhs )  ? 1 : 0 )  ) ;^467^^^^^463^469^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : -1 )  ) ;^467^^^^^463^469^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long lhs long rhs [VARIABLES] int  comparison  i  superCompareTo  long  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs != 0 )  {^480^^^^^479^485^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison <= 0 )  {^480^^^^^479^485^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  (  ( superCompareTo < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  (  ( lhs < superCompareTo )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  (  ( rhs < lhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs <= rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs == rhs )  ? 1 : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -0 :  (  ( lhs > rhs )  ? 0 : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? - :  (  ( lhs > rhs )  ?  : 0 )  ) ;^483^^^^^479^485^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int lhs int rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^496^^^^^495^501^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^496^^^^^495^501^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != rhs )  {^496^^^^^495^501^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  (  ( rhs < lhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^499^^^^^495^501^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs > rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^499^^^^^495^501^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs == rhs )  ? 1 : 0 )  ) ;^499^^^^^495^501^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -0 :  (  ( lhs > rhs )  ? 0 : 0 )  ) ;^499^^^^^495^501^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : rhs )  ) ;^499^^^^^495^501^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^512^^^^^511^517^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^512^^^^^511^517^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != superCompareTo )  {^512^^^^^511^517^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  (  ( rhs < lhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^515^^^^^511^517^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs <= rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^515^^^^^511^517^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs >= rhs )  ? 1 : 0 )  ) ;^515^^^^^511^517^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -2 :  (  ( lhs > rhs )  ? 2 : 0 )  ) ;^515^^^^^511^517^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : superCompareTo )  ) ;^515^^^^^511^517^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^528^^^^^527^533^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( comparison > 0 )  {^528^^^^^527^533^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  (  ( rhs < lhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^531^^^^^527^533^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs > rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^531^^^^^527^533^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs >= rhs )  ? 1 : 0 )  ) ;^531^^^^^527^533^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -0 :  (  ( lhs > rhs )  ? 0 : 0 )  ) ;^531^^^^^527^533^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -lhs :  (  ( lhs > rhs )  ? lhs : 0 )  ) ;^531^^^^^527^533^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : lhs )  ) ;^531^^^^^527^533^comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte lhs byte rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  byte  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^549^^^^^548^554^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double lhs double rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  double  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( comparison >= 0 )  {^549^^^^^548^554^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double lhs double rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  double  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison = NumberUtils.compare ( rhs, lhs ) ;^552^^^^^548^554^comparison = NumberUtils.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double lhs double rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  double  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs != 0 )  {^570^^^^^569^575^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison > 0 )  {^570^^^^^569^575^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != 1 )  {^570^^^^^569^575^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison = NumberUtils.compare ( rhs, lhs ) ;^573^^^^^569^575^comparison = NumberUtils.compare ( lhs, rhs ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( rhs != 0 )  {^586^^^^^585^598^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^586^^^^^585^598^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Literal]^if  ( comparison != 1 )  {^586^^^^^585^598^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^589^^^^^585^598^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^589^^^^^585^598^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( rhs == false )  {^592^^^^^585^598^if  ( lhs == false )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs <= false )  {^592^^^^^585^598^if  ( lhs == false )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Literal]^if  ( lhs == true )  {^592^^^^^585^598^if  ( lhs == false )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Literal]^comparison = +0;^595^^^^^585^598^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Literal]^comparison = -superCompareTo;^593^^^^^585^598^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Wrong_Literal]^comparison = -0;^593^^^^^585^598^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean lhs boolean rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  lhs  rhs  
[BugLab_Argument_Swapping]^return append ( rhs, lhs, null ) ;^622^^^^^621^623^return append ( lhs, rhs, null ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^649^^^^^648^671^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( comparison <= 0 )  {^649^^^^^648^671^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^652^^^^^648^671^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^652^^^^^648^671^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^655^^^^^648^671^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^655^^^^^648^671^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = -rhs;^656^^^^^648^671^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = -lhs;^656^^^^^648^671^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^659^^^^^648^671^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^659^^^^^648^671^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison = +;^660^^^^^648^671^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^663^^^^^648^671^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( lhs != rhs.length )  {^663^^^^^648^671^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs )  {^663^^^^^648^671^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^663^^^^^648^671^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^if  ( rhs.length.length != lhs )  {^663^^^^^648^671^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^663^^^^^648^671^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < lhs.length )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < lhs )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs.length.length )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -2 : +2;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison =  ( rhs < rhs.length )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -comparison : +comparison;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -superCompareTo : +superCompareTo;^664^^^^^648^671^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs && comparison == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && comparison == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison != 0; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^for  ( int i = rhs; i < lhs.length && comparison == rhs; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^append ( rhs[i], rhs[i], comparator ) ;^668^^^^^648^671^append ( lhs[i], rhs[i], comparator ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i], comparator ) ;^668^^^^^648^671^append ( lhs[i], rhs[i], comparator ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Argument_Swapping]^append ( lhs[i], comparator[i], rhs ) ;^668^^^^^648^671^append ( lhs[i], rhs[i], comparator ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < lhs.length && comparison == 1; i++ )  {^667^^^^^648^671^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^append ( lhs[i], lhs[i], comparator ) ;^668^^^^^648^671^append ( lhs[i], rhs[i], comparator ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   Object[] lhs Object[] rhs Comparator comparator [VARIABLES] boolean  int  comparison  i  lhs  rhs  superCompareTo  Object[]  lhs  rhs  Comparator  comparator  
[BugLab_Variable_Misuse]^if  ( rhs != 0 )  {^689^^^^^688^711^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison <= 0 )  {^689^^^^^688^711^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^692^^^^^688^711^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^692^^^^^688^711^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^695^^^^^688^711^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^695^^^^^688^711^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -2;^696^^^^^688^711^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^699^^^^^688^711^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^699^^^^^688^711^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = +i;^700^^^^^688^711^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = +lhs;^700^^^^^688^711^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( rhs != rhs.length )  {^703^^^^^688^711^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs )  {^703^^^^^688^711^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length.length != lhs )  {^703^^^^^688^711^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^703^^^^^688^711^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^703^^^^^688^711^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs.length < rhs.length )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs < rhs.length )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -0 : +0;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -comparison : +comparison;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -2 : +2;^704^^^^^688^711^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs && comparison == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && comparison == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison.length && lhs == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison != 0; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = rhs; i < lhs.length && comparison == rhs; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = lhs; i < lhs.length && comparison == lhs; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^708^^^^^688^711^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < lhs.length && comparison == 1; i++ )  {^707^^^^^688^711^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^729^^^^^728^751^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^732^^^^^728^751^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^732^^^^^728^751^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^735^^^^^728^751^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^735^^^^^728^751^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = -;^736^^^^^728^751^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^739^^^^^728^751^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^739^^^^^728^751^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +lhs;^740^^^^^728^751^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +rhs;^740^^^^^728^751^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != superCompareTo )  {^743^^^^^728^751^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^743^^^^^728^751^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs != lhs.length.length )  {^743^^^^^728^751^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^743^^^^^728^751^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs < rhs.length )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs.length.length )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -0 : +0;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs < lhs.length.length )  ? -1 : +1;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -rhs : +rhs;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? - : +;^744^^^^^728^751^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < superCompareTo && comparison == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( comparisonnt i = 0; i < lhs.length && i == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison.length && lhs == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && comparison == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == lhs.length && comparison == 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison != 0; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < lhs.length && comparison == 1; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^748^^^^^728^751^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && comparison == i; i++ )  {^747^^^^^728^751^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   int[] lhs int[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  int[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs != 0 )  {^769^^^^^768^791^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison > 0 )  {^769^^^^^768^791^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != 1 )  {^769^^^^^768^791^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^772^^^^^768^791^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^772^^^^^768^791^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^775^^^^^768^791^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^775^^^^^768^791^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -0;^776^^^^^768^791^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -lhs;^776^^^^^768^791^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^779^^^^^768^791^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^779^^^^^768^791^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = +lhs;^780^^^^^768^791^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != rhs.length )  {^783^^^^^768^791^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs )  {^783^^^^^768^791^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^783^^^^^768^791^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^783^^^^^768^791^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs.length < rhs.length )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < lhs.length )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs.length.length )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -i : +i;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -superCompareTo : +superCompareTo;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs )  ? -1 : +1;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -2 : +2;^784^^^^^768^791^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( rhsnt i = 0; i < lhs.length && comparison == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < superCompareTo && comparison == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && comparison == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison != 0; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = rhs; i < lhs.length && comparison == rhs; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && comparison == -1; i++ )  {^787^^^^^768^791^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^append ( lhs[i], lhs[i] ) ;^788^^^^^768^791^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^788^^^^^768^791^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^809^^^^^808^831^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^809^^^^^808^831^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != lhs )  {^809^^^^^808^831^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^812^^^^^808^831^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs >= rhs )  {^812^^^^^808^831^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^815^^^^^808^831^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^815^^^^^808^831^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = -;^816^^^^^808^831^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = -comparison;^816^^^^^808^831^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^819^^^^^808^831^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^819^^^^^808^831^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +i;^820^^^^^808^831^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +lhs;^820^^^^^808^831^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != rhs.length )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != rhs )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( lhs != rhs.length )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^823^^^^^808^831^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < lhs.length )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs < rhs.length )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length.length < rhs.length )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -2 : +2;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -rhs : +rhs;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs < rhs.length )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs )  ? -1 : +1;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -lhs : +lhs;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -comparison : +comparison;^824^^^^^808^831^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < superCompareTo && comparison == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( comparisonnt i = 0; i < lhs.length && i == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison >= 0; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = superCompareTo; i < lhs.length && comparison == superCompareTo; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && comparison == i; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^828^^^^^808^831^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && comparison == -1; i++ )  {^827^^^^^808^831^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^append ( rhs[i], rhs[i] ) ;^828^^^^^808^831^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^append ( lhs[i], lhs[i] ) ;^828^^^^^808^831^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   char[] lhs char[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  char[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs != 0 )  {^849^^^^^848^871^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^849^^^^^848^871^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^852^^^^^848^871^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^852^^^^^848^871^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^855^^^^^848^871^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -0;^856^^^^^848^871^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -2;^856^^^^^848^871^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^859^^^^^848^871^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^859^^^^^848^871^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = +comparison;^860^^^^^848^871^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^863^^^^^848^871^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs != rhs.length )  {^863^^^^^848^871^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != superCompareTo )  {^863^^^^^848^871^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^863^^^^^848^871^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length >= rhs.length )  {^863^^^^^848^871^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs < rhs.length )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < lhs )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs < lhs.length.length )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length > rhs.length )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -rhs : +rhs;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -lhs : +lhs;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -superCompareTo : +superCompareTo;^864^^^^^848^871^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < superCompareTo && comparison == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( lhsnt i = 0; i < i.length && comparison == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( comparisonnt i = 0; i < lhs.length && i == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison >= 0; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = superCompareTo; i < lhs.length && comparison == superCompareTo; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^868^^^^^848^871^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = ; i < lhs.length && comparison == ; i++ )  {^867^^^^^848^871^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^889^^^^^888^911^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( comparison == 0 )  {^889^^^^^888^911^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != superCompareTo )  {^889^^^^^888^911^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^892^^^^^888^911^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs < rhs )  {^892^^^^^888^911^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^895^^^^^888^911^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^895^^^^^888^911^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -0;^896^^^^^888^911^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = -i;^896^^^^^888^911^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^899^^^^^888^911^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^899^^^^^888^911^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison = +superCompareTo;^900^^^^^888^911^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != rhs.length )  {^903^^^^^888^911^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != rhs )  {^903^^^^^888^911^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^903^^^^^888^911^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length < rhs.length )  {^903^^^^^888^911^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs.length < rhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs < rhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < lhs )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs < rhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? - : +;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -rhs : +rhs;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length == rhs.length )  ? -1 : +1;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -0 : +0;^904^^^^^888^911^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < superCompareTo && comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < lhs.length.length && comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison >= 0; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && comparison == -1; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < lhs.length && comparison == 1; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^908^^^^^888^911^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && comparison == i; i++ )  {^907^^^^^888^911^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  comparison  i  lhs  rhs  superCompareTo  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^929^^^^^928^951^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( comparison <= 0 )  {^929^^^^^928^951^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != superCompareTo )  {^929^^^^^928^951^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^932^^^^^928^951^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs <= rhs )  {^932^^^^^928^951^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^935^^^^^928^951^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^935^^^^^928^951^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = -comparison;^936^^^^^928^951^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = -0;^936^^^^^928^951^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^939^^^^^928^951^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^939^^^^^928^951^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +;^940^^^^^928^951^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs != rhs.length )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length.length != lhs )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs.length.length )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length < rhs.length )  {^943^^^^^928^951^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs < rhs.length )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < rhs )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length <= rhs.length )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -i : +i;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -lhs : +lhs;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length > rhs.length )  ? -1 : +1;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -rhs : +rhs;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -0 : +0;^944^^^^^928^951^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && comparison == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison.length && lhs == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison >= 0; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && comparison == -1; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^948^^^^^928^951^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = superCompareTo; i < lhs.length && comparison == superCompareTo; i++ )  {^947^^^^^928^951^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   float[] lhs float[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  float[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != 0 )  {^969^^^^^968^991^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( comparison < 0 )  {^969^^^^^968^991^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^if  ( comparison != rhs )  {^969^^^^^968^991^if  ( comparison != 0 )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^972^^^^^968^991^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs > rhs )  {^972^^^^^968^991^if  ( lhs == rhs )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs == null )  {^975^^^^^968^991^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs != null )  {^975^^^^^968^991^if  ( lhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = -lhs;^976^^^^^968^991^comparison = -1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs == null )  {^979^^^^^968^991^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( rhs != null )  {^979^^^^^968^991^if  ( rhs == null )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +0;^980^^^^^968^991^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison = +superCompareTo;^980^^^^^968^991^comparison = +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^983^^^^^968^991^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( superCompareTo != rhs.length )  {^983^^^^^968^991^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs )  {^983^^^^^968^991^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^983^^^^^968^991^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^if  ( rhs != lhs.length.length )  {^983^^^^^968^991^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^if  ( lhs.length > rhs.length )  {^983^^^^^968^991^if  ( lhs.length != rhs.length )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs.length < rhs.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( rhs < rhs.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length.length < rhs.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length < lhs.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( lhs.length < rhs )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^comparison =  ( lhs.length > rhs.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( superCompareTo < rhs.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^comparison =  ( lhs.length < superCompareTo )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs < lhs.length.length )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^comparison =  ( rhs.length.length < lhs )  ? -1 : +1;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^comparison =  ( lhs.length < rhs.length )  ? -lhs : +lhs;^984^^^^^968^991^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( superCompareTont i = 0; i < lhs.length && comparison == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && comparison == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < superCompareTo && comparison == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && superCompareTo == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( lhsnt i = 0; i < i.length && comparison == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < comparison && lhs.length == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || comparison == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && comparison == 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length && comparison != 0; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = rhs; i < lhs.length && comparison == rhs; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^988^^^^^968^991^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < lhs.length && comparison == 1; i++ )  {^987^^^^^968^991^for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^append ( lhs[i], lhs[i] ) ;^988^^^^^968^991^append ( lhs[i], rhs[i] ) ;^[CLASS] CompareToBuilder  [METHOD] append [RETURN_TYPE] CompareToBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean[]  lhs  rhs  boolean  
[BugLab_Variable_Misuse]^return rhs;^1003^^^^^1002^1004^return comparison;^[CLASS] CompareToBuilder  [METHOD] toComparison [RETURN_TYPE] int   [VARIABLES] int  comparison  i  lhs  rhs  superCompareTo  boolean  
