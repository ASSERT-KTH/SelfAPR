[buglab_swap_variables]^} else if  ( INNER_CLASS_SEPARATOR_CHAR[i] == chars )  {^154^^^^^142^159^} else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^} else charsf  ( i[i] == INNER_CLASS_SEPARATOR_CHAR )  {^154^^^^^142^159^} else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^} else INNER_CLASS_SEPARATOR_CHARf  ( chars[i] == i )  {^154^^^^^142^159^} else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^for  ( chars.lengthnt i = 0; i < i; i++ )  {^151^^^^^142^159^for  ( int i = 0; i < chars.length; i++ )  {^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^return new String ( lastDot, chars, chars.length - lastDot ) ;^158^^^^^142^159^return new String ( chars, lastDot, chars.length - lastDot ) ;^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^return new String (  lastDot, chars.length - lastDot ) ;^158^^^^^142^159^return new String ( chars, lastDot, chars.length - lastDot ) ;^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^return new String ( chars, chars.length, lastDot - lastDot ) ;^158^^^^^142^159^return new String ( chars, lastDot, chars.length - lastDot ) ;^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^return new String ( chars,  chars.length - lastDot ) ;^158^^^^^142^159^return new String ( chars, lastDot, chars.length - lastDot ) ;^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^return new String ( chars.length, lastDot, chars - lastDot ) ;^158^^^^^142^159^return new String ( chars, lastDot, chars.length - lastDot ) ;^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^return new String ( chars, lastDot - lastDot ) ;^158^^^^^142^159^return new String ( chars, lastDot, chars.length - lastDot ) ;^[CLASS] ClassUtils  [METHOD] getShortClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  lastDot  char[]  chars  
[buglab_swap_variables]^int i = PACKAGE_SEPARATOR_CHAR.lastIndexOf ( className ) ;^203^^^^^199^208^int i = className.lastIndexOf ( PACKAGE_SEPARATOR_CHAR ) ;^[CLASS] ClassUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^return i.substring ( 0, className ) ;^207^^^^^199^208^return className.substring ( 0, i ) ;^[CLASS] ClassUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^return className.substring ( 0 ) ;^207^^^^^199^208^return className.substring ( 0, i ) ;^[CLASS] ClassUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( i.contains ( listnterfaces[i] )  == false )  {^253^^^^^245^267^if  ( list.contains ( interfaces[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( interfaces.contains ( list[i] )  == false )  {^253^^^^^245^267^if  ( list.contains ( interfaces[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( intface.contains ( list )  == false )  {^259^^^^^245^267^if  ( list.contains ( intface )  == false )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^for  ( interfaces.lengthnt i = 0; i < i; i++ )  {^252^^^^^245^267^for  ( int i = 0; i < interfaces.length; i++ )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( list.contains ( i[i] )  == false )  {^253^^^^^245^267^if  ( list.contains ( interfaces[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( list.contains ( interfacesnterfaces[i] )  == false )  {^253^^^^^245^267^if  ( list.contains ( interfaces[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^List superInterfaces = getAllInterfaces ( i[i] ) ;^256^^^^^245^267^List superInterfaces = getAllInterfaces ( interfaces[i] ) ;^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^List superInterfaces = getAllInterfaces ( interfacesnterfaces[i] ) ;^256^^^^^245^267^List superInterfaces = getAllInterfaces ( interfaces[i] ) ;^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^list.add ( i[i] ) ;^254^^^^^245^267^list.add ( interfaces[i] ) ;^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^list.add ( interfacesnterfaces[i] ) ;^254^^^^^245^267^list.add ( interfaces[i] ) ;^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < interfaces.length.length; i++ )  {^252^^^^^245^267^for  ( int i = 0; i < interfaces.length; i++ )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^for  ( Iterator superInterfaces = it.iterator (  ) ; it.hasNext (  ) ; )  {^257^^^^^245^267^for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ClassUtils  [METHOD] getAllInterfaces [RETURN_TYPE] List   Class cls [VARIABLES] Class[]  interfaces  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  cls  intface  List  list  superInterfaces  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( ArrayUtils.isSameLength ( toClassArray, classArray )  == false )  {^361^^^^^360^376^if  ( ArrayUtils.isSameLength ( classArray, toClassArray )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( ArrayUtils.isSameLength (  toClassArray )  == false )  {^361^^^^^360^376^if  ( ArrayUtils.isSameLength ( classArray, toClassArray )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( ArrayUtils.isSameLength ( classArray )  == false )  {^361^^^^^360^376^if  ( ArrayUtils.isSameLength ( classArray, toClassArray )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( isAssignable ( toClassArray[i], classArray[i] )  == false )  {^371^^^^^360^376^if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( toClassArraysAssignable ( classArray[i], i[i] )  == false )  {^371^^^^^360^376^if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( isAssignable ( classArray[i][i] )  == false )  {^371^^^^^360^376^if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^for  ( classArray.lengthnt i = 0; i < i; i++ )  {^370^^^^^360^376^for  ( int i = 0; i < classArray.length; i++ )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^for  ( classArraynt i = 0; i < i.length; i++ )  {^370^^^^^360^376^for  ( int i = 0; i < classArray.length; i++ )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( classArraysAssignable ( i[i], toClassArray[i] )  == false )  {^371^^^^^360^376^if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class[] classArray Class[] toClassArray [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classArray  toClassArray  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( toClass.equals ( cls )  )  {^412^^^^^397^427^if  ( cls.equals ( toClass )  )  {^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class cls Class toClass [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Class  cls  toClass  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return cls.isAssignableFrom ( toClass ) ;^459^^^^^444^474^return toClass.isAssignableFrom ( cls ) ;^[CLASS] ClassUtils  [METHOD] isAssignable [RETURN_TYPE] boolean   Class cls Class toClass [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Class  cls  toClass  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^convertedClass =  ( Class )  cls.get ( primitiveWrapperMap ) ;^477^^^^^474^480^convertedClass =  ( Class )  primitiveWrapperMap.get ( cls ) ;^[CLASS] ClassUtils  [METHOD] primitiveToWrapper [RETURN_TYPE] Class   Class cls [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Class  cls  convertedClass  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^if  ( classes.length.length == 0 )  {^497^^^^^492^506^if  ( classes.length == 0 )  {^[CLASS] ClassUtils  [METHOD] primitivesToWrappers [RETURN_TYPE] Class[]   Class[] classes [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classes  convertedClasses  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^if  ( classes == 0 )  {^497^^^^^492^506^if  ( classes.length == 0 )  {^[CLASS] ClassUtils  [METHOD] primitivesToWrappers [RETURN_TYPE] Class[]   Class[] classes [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classes  convertedClasses  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^for  ( classes.lengthnt i=0; i < i; i++ )  {^502^^^^^492^506^for  ( int i=0; i < classes.length; i++ )  {^[CLASS] ClassUtils  [METHOD] primitivesToWrappers [RETURN_TYPE] Class[]   Class[] classes [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  Class[]  classes  convertedClasses  boolean  Map  abbreviationMap  primitiveWrapperMap  int  i  
[buglab_swap_variables]^return INNER_CLASS_SEPARATOR_CHAR.getName (  ) .indexOf ( cls )  >= 0;^521^^^^^517^522^return cls.getName (  ) .indexOf ( INNER_CLASS_SEPARATOR_CHAR )  >= 0;^[CLASS] ClassUtils  [METHOD] isInnerClass [RETURN_TYPE] boolean   Class cls [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Class  cls  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( toProperClassName ( initialize ) , className, classLoader ) ;^544^^^^^537^547^clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( toProperClassName ( className ) , classLoader, initialize ) ;^544^^^^^537^547^clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( toProperClassName ( className ) ,  classLoader ) ;^544^^^^^537^547^clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( toProperClassName ( className ) , initialize ) ;^544^^^^^537^547^clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( toProperClassName ( classLoader ) , initialize, className ) ;^544^^^^^537^547^clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( classLoader, initialize, clsName ) .getComponentType (  ) ;^542^^^^^537^547^clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName (  initialize, classLoader ) .getComponentType (  ) ;^542^^^^^537^547^clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( clsName, classLoader, initialize ) .getComponentType (  ) ;^542^^^^^537^547^clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( clsName,  classLoader ) .getComponentType (  ) ;^542^^^^^537^547^clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( clsName, initialize ) .getComponentType (  ) ;^542^^^^^537^547^clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^String clsName = "[" + className.get ( abbreviationMap ) ;^541^^^^^537^547^String clsName = "[" + abbreviationMap.get ( className ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^clazz = Class.forName ( initialize, clsName, classLoader ) .getComponentType (  ) ;^542^^^^^537^547^clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^if  ( className.containsKey ( abbreviationMap )  )  {^540^^^^^537^547^if  ( abbreviationMap.containsKey ( className )  )  {^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  Class  clazz  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( className, classLoader, true ) ;^561^^^^^560^562^return getClass ( classLoader, className, true ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass (  className, true ) ;^561^^^^^560^562^return getClass ( classLoader, className, true ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( classLoader,  true ) ;^561^^^^^560^562^return getClass ( classLoader, className, true ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   ClassLoader classLoader String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  classLoader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( className, loader, initialize  ) ;^592^^^^^589^593^return getClass ( loader, className, initialize  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  contextCL  loader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass (  className, initialize  ) ;^592^^^^^589^593^return getClass ( loader, className, initialize  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  contextCL  loader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( loader,  initialize  ) ;^592^^^^^589^593^return getClass ( loader, className, initialize  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  contextCL  loader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( loader, initialize, className  ) ;^592^^^^^589^593^return getClass ( loader, className, initialize  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  contextCL  loader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( loader, className  ) ;^592^^^^^589^593^return getClass ( loader, className, initialize  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  contextCL  loader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^return getClass ( initialize, className, loader  ) ;^592^^^^^589^593^return getClass ( loader, className, initialize  ) ;^[CLASS] ClassUtils  [METHOD] getClass [RETURN_TYPE] Class   String className boolean initialize [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  ClassLoader  contextCL  loader  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  boolean  initialize  Map  abbreviationMap  primitiveWrapperMap  
[buglab_swap_variables]^Method declaredMethod = parameterTypes.getMethod ( methodName, cls ) ;^621^^^^^619^648^Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^Method declaredMethod = cls.getMethod ( parameterTypes, methodName ) ;^621^^^^^619^648^Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^Method declaredMethod = cls.getMethod (  parameterTypes ) ;^621^^^^^619^648^Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^Method declaredMethod = cls.getMethod ( methodName ) ;^621^^^^^619^648^Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^Method declaredMethod = methodName.getMethod ( cls, parameterTypes ) ;^621^^^^^619^648^Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^for  ( Iterator it = candidateClass.iterator (  ) ; it.hasNext (  ) ;  )  {^630^^^^^619^648^for  ( Iterator it = candidateClasses.iterator (  ) ; it.hasNext (  ) ;  )  {^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^for  ( Iterator candidateClass = ites.iterator (  ) ; it.hasNext (  ) ;  )  {^630^^^^^619^648^for  ( Iterator it = candidateClasses.iterator (  ) ; it.hasNext (  ) ;  )  {^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^candidateMethod = methodName.getMethod ( candidateClass, parameterTypes ) ;^637^^^^^619^648^candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^candidateMethod = candidateClass.getMethod (  parameterTypes ) ;^637^^^^^619^648^candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^candidateMethod = parameterTypes.getMethod ( methodName, candidateClass ) ;^637^^^^^619^648^candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^candidateMethod = candidateClass.getMethod ( methodName ) ;^637^^^^^619^648^candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^candidateMethod = candidateClass.getMethod ( parameterTypes, methodName ) ;^637^^^^^619^648^candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^throw new NoSuchMethodException ( "Can't find a public method for " + parameterTypes + " " + ArrayUtils.toString ( methodName )  ) ;^646^647^^^^619^648^throw new NoSuchMethodException ( "Can't find a public method for " + methodName + " " + ArrayUtils.toString ( parameterTypes )  ) ;^[CLASS] ClassUtils  [METHOD] getPublicMethod [RETURN_TYPE] Method   Class cls String methodName Class[] parameterTypes [VARIABLES] Class[]  parameterTypes  boolean  char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  Iterator  it  Class  candidateClass  cls  List  candidateClasses  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  Method  candidateMethod  declaredMethod  Map  abbreviationMap  primitiveWrapperMap  NoSuchMethodException  ex  
[buglab_swap_variables]^String abbreviation =  ( String )  className.get ( abbreviationMap ) ;^667^^^^^657^676^String abbreviation =  ( String )  abbreviationMap.get ( className ) ;^[CLASS] ClassUtils  [METHOD] toProperClassName [RETURN_TYPE] String   String className [VARIABLES] char  INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  StringBuffer  classNameBuffer  String  INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  boolean  Map  abbreviationMap  primitiveWrapperMap  
