[BugLab_Wrong_Operator]^if  ( views != null )  {^13^^^^^11^23^if  ( views == null )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] construct [RETURN_TYPE] ViewMatcher   Class<?>[] views [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^return new Single ( views[1] ) ;^20^^^^^11^23^return new Single ( views[0] ) ;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] construct [RETURN_TYPE] ViewMatcher   Class<?>[] views [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^39^^^^^38^40^return false;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^return  ( _view == activeView )  || _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( activeView == _view )  && _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( activeView != _view )  || _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^return  ( activeView == 2 )  || _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  Class[]  _views  v  views  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  (  ( view == activeView )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^if  (  ( activeView == view )  && view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^if  (  ( activeView <= view )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Literal]^return false;^71^^^^^66^75^return true;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^for  ( lennt i = 0, len = _views.length; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^for  ( int i = 0, len = len; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( _views.lengthnt i = 0, len = i; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, _views.length = len; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, _views = len.length; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^for  ( int i = 0, len = _views.length; i <= len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^if  (  ( activeView >= view )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^Class<?> view = null[i];^69^^^^^66^75^Class<?> view = _views[i];^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^for  ( int i = 0, len = i; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, len = _views; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, len = _views.length.length; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^if  (  ( activeView == null )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Literal]^return true;^74^^^^^66^75^return false;^[CLASS] ViewMatcher Empty Single Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  _view  activeView  v  view  Class[]  _views  v  views  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Literal]^return true;^39^^^^^38^40^return false;^[CLASS] Empty  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Empty  instance  Class  activeView  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^return  ( _view == activeView )  || _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] Single  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  _view  activeView  v  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( activeView == _view )  && _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] Single  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  _view  activeView  v  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( activeView != _view )  || _view.isAssignableFrom ( activeView ) ;^52^^^^^51^53^return  ( activeView == _view )  || _view.isAssignableFrom ( activeView ) ;^[CLASS] Single  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  _view  activeView  v  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  (  ( activeView == 2 )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^if  (  ( view == activeView )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^if  (  ( activeView == view )  && view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^if  (  ( activeView >= view )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Literal]^return false;^71^^^^^66^75^return true;^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^for  ( lennt i = 0, len = _views.length; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( _views.lengthnt i = 0, len = i; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, _views.length = len; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^for  ( int i = 0, len = _views.length; i <= len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Operator]^if  (  ( activeView != view )  || view.isAssignableFrom ( activeView )  )  {^70^^^^^66^75^if  (  ( activeView == view )  || view.isAssignableFrom ( activeView )  )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Literal]^for  ( int i = len, len = _views.length; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^for  ( int i = 0, len = i; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, len = _views; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Argument_Swapping]^for  ( int i = 0, len = _views.length.length; i < len; ++i )  {^68^^^^^66^75^for  ( int i = 0, len = _views.length; i < len; ++i )  {^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Variable_Misuse]^Class<?> view = 4[i];^69^^^^^66^75^Class<?> view = _views[i];^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
[BugLab_Wrong_Literal]^return true;^74^^^^^66^75^return false;^[CLASS] Multi  [METHOD] isVisibleForView [RETURN_TYPE] boolean   Class<?> activeView [VARIABLES] Class  activeView  view  Class[]  _views  v  boolean  long  serialVersionUID  int  i  len  
