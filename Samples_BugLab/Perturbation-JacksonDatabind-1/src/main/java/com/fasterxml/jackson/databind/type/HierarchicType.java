[BugLab_Variable_Misuse]^this._actualType = _actualType;^30^^^^^28^40^this._actualType = type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Variable_Misuse]^if  ( _actualType instanceof Class<?> )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Wrong_Operator]^if  ( type  !=  Class<?> )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Wrong_Operator]^if  ( type  ||  Class<?> )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Variable_Misuse]^} else if  ( _actualType instanceof ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Wrong_Operator]^} else if  ( type  !=  ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Wrong_Operator]^} else if  ( type  &  ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[BugLab_Variable_Misuse]^_actualType = type;^45^^^^^42^50^_actualType = actualType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[BugLab_Variable_Misuse]^_genericType = _genericType;^47^^^^^42^50^_genericType = genericType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[BugLab_Variable_Misuse]^_superType = subType;^48^^^^^42^50^_superType = superType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[BugLab_Variable_Misuse]^_subType = superType;^49^^^^^42^50^_subType = subType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[BugLab_Variable_Misuse]^HierarchicType sup =  ( superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Wrong_Operator]^HierarchicType sup =  ( _superType != null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^HierarchicType sup =  ( sup == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, subType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^HierarchicType result = new HierarchicType ( type, _rawClass, _genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Argument_Swapping]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, sup, _genericType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Argument_Swapping]^HierarchicType result = new HierarchicType ( _rawClass, _actualType, _genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Argument_Swapping]^HierarchicType result = new HierarchicType ( _actualType, sup, _genericType, _rawClass, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, superType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Argument_Swapping]^HierarchicType result = new HierarchicType ( _actualType, _genericType, _rawClass, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^if  ( superType != null )  {^60^^^^^56^64^if  ( sup != null )  {^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Wrong_Operator]^if  ( sup == null )  {^60^^^^^56^64^if  ( sup != null )  {^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^sup.setSubType ( superType ) ;^61^^^^^56^64^sup.setSubType ( result ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^return superType;^63^^^^^56^64^return result;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^public void setSuperType ( HierarchicType subType )  { _superType = sup; }^66^^^^^61^71^public void setSuperType ( HierarchicType sup )  { _superType = sup; }^[CLASS] HierarchicType  [METHOD] setSuperType [RETURN_TYPE] void   HierarchicType sup [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[BugLab_Variable_Misuse]^public void setSubType ( HierarchicType superType )  { _subType = sub; }^68^^^^^63^73^public void setSubType ( HierarchicType sub )  { _subType = sub; }^[CLASS] HierarchicType  [METHOD] setSubType [RETURN_TYPE] void   HierarchicType sub [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Variable_Misuse]^public final HierarchicType getSubType (  )  { return subType; }^69^^^^^64^74^public final HierarchicType getSubType (  )  { return _subType; }^[CLASS] HierarchicType  [METHOD] getSubType [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Variable_Misuse]^public final boolean isGeneric (  )  { return genericType != null; }^71^^^^^66^76^public final boolean isGeneric (  )  { return _genericType != null; }^[CLASS] HierarchicType  [METHOD] isGeneric [RETURN_TYPE] boolean   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Wrong_Operator]^public final boolean isGeneric (  )  { return _genericType == null; }^71^^^^^66^76^public final boolean isGeneric (  )  { return _genericType != null; }^[CLASS] HierarchicType  [METHOD] isGeneric [RETURN_TYPE] boolean   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Variable_Misuse]^public final ParameterizedType asGeneric (  )  { return genericType; }^72^^^^^67^77^public final ParameterizedType asGeneric (  )  { return _genericType; }^[CLASS] HierarchicType  [METHOD] asGeneric [RETURN_TYPE] ParameterizedType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Variable_Misuse]^public final Class<?> getRawClass (  )  { return 3; }^74^^^^^69^79^public final Class<?> getRawClass (  )  { return _rawClass; }^[CLASS] HierarchicType  [METHOD] getRawClass [RETURN_TYPE] Class   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Variable_Misuse]^if  ( genericType != null )  {^78^^^^^77^82^if  ( _genericType != null )  {^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Wrong_Operator]^if  ( _genericType == null )  {^78^^^^^77^82^if  ( _genericType != null )  {^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[BugLab_Variable_Misuse]^return genericType.toString (  ) ;^79^^^^^77^82^return _genericType.toString (  ) ;^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
