[BugLab_Wrong_Literal]^private int _nextBucketIndex = null;^39^^^^^34^44^private int _nextBucketIndex = 0;^[CLASS] BeanPropertyMap Bucket IteratorImpl   [VARIABLES] 
[BugLab_Variable_Misuse]^int bucketCount = findSize ( index ) ;^44^^^^^41^53^int bucketCount = findSize ( _size ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^_hashMask = _size-1;^45^^^^^41^53^_hashMask = bucketCount-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Wrong_Literal]^_hashMask = bucketCount-0;^45^^^^^41^53^_hashMask = bucketCount-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^buckets[index] = new Bucket ( _buckets[index], key, property, _nextBucketIndex++ ) ;^50^^^^^41^53^buckets[index] = new Bucket ( buckets[index], key, property, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^buckets[index] = new Bucket ( buckets[index], key, value, _nextBucketIndex++ ) ;^50^^^^^41^53^buckets[index] = new Bucket ( buckets[index], key, property, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Argument_Swapping]^buckets[index] = new Bucket ( key[index], buckets, property, _nextBucketIndex++ ) ;^50^^^^^41^53^buckets[index] = new Bucket ( buckets[index], key, property, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Argument_Swapping]^buckets[index] = new Bucket ( buckets[index], property, key, _nextBucketIndex++ ) ;^50^^^^^41^53^buckets[index] = new Bucket ( buckets[index], key, property, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^String key = value.getName (  ) ;^48^^^^^41^53^String key = property.getName (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^int index = key.hashCode (  )  & bucketCount;^49^^^^^41^53^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Argument_Swapping]^int index = _hashMask.hashCode (  )  & key;^49^^^^^41^53^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Wrong_Operator]^int index = key.hashCode (  )   |  _hashMask;^49^^^^^41^53^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^_buckets = _buckets;^52^^^^^41^53^_buckets = buckets;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] Collection)   SettableBeanProperty> properties [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  Collection  properties  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  
[BugLab_Variable_Misuse]^_buckets = _buckets;^57^^^^^55^61^_buckets = buckets;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Variable_Misuse]^_hashMask = _buckets.length-1;^59^^^^^55^61^_hashMask = buckets.length-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Variable_Misuse]^_hashMask = size-1;^59^^^^^55^61^_hashMask = buckets.length-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Argument_Swapping]^_hashMask = buckets.length.length-1;^59^^^^^55^61^_hashMask = buckets.length-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Argument_Swapping]^_hashMask = buckets-1;^59^^^^^55^61^_hashMask = buckets.length-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Wrong_Literal]^_hashMask = buckets.length-_hashMask;^59^^^^^55^61^_hashMask = buckets.length-1;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Variable_Misuse]^_nextBucketIndex = size;^60^^^^^55^61^_nextBucketIndex = index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[],int,int)   Bucket[] buckets int size int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Variable_Misuse]^this.value = property;^337^^^^^333^339^this.value = value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] SettableBeanProperty,int)   Bucket next String key SettableBeanProperty value int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Variable_Misuse]^this.index = size;^338^^^^^333^339^this.index = index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] SettableBeanProperty,int)   Bucket next String key SettableBeanProperty value int index [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  index  size  
[BugLab_Variable_Misuse]^_buckets = _buckets;^361^^^^^360^372^_buckets = buckets;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Wrong_Literal]^int i = len;^363^^^^^360^372^int i = 0;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( b == null )  {^366^^^^^360^372^if  ( b != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^for  ( indexnt len = _buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^for  ( int index = _buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^for  ( int len = i; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^for  ( int len = buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^for  ( lennt i = _buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^for  ( int _buckets.length = len; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^for  ( int len = _buckets.length; i <= len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^if  ( next != null )  {^366^^^^^360^372^if  ( b != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^_currentBucket = next;^367^^^^^360^372^_currentBucket = b;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^Bucket b = buckets[i++];^365^^^^^360^372^Bucket b = _buckets[i++];^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^for  ( int len = size; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^for  ( int len = _buckets; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^for  ( int len = _buckets.length.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  SettableBeanProperty  property  value  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  next  String  key  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^final int bcount = size;^75^^^^^72^94^final int bcount = _buckets.length;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^final int bcount = newBuckets.length;^75^^^^^72^94^final int bcount = _buckets.length;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^final int bcount = _buckets;^75^^^^^72^94^final int bcount = _buckets.length;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^final int bcount = _buckets.length.length;^75^^^^^72^94^final int bcount = _buckets.length;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^System.arraycopy ( _buckets, 0, buckets, 0, bcount ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^System.arraycopy ( _buckets, 0, newBuckets, 0, i ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^System.arraycopy ( buckets, 0, newBuckets, 0, bcount ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^System.arraycopy ( newBuckets, 0, _buckets, 0, bcount ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^System.arraycopy ( bcount, 0, newBuckets, 0, _buckets ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Literal]^System.arraycopy ( _buckets, bcount, newBuckets, bcount, bcount ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Literal]^System.arraycopy ( _buckets, _nextBucketIndex, newBuckets, _nextBucketIndex, bcount ) ;^77^^^^^72^94^System.arraycopy ( _buckets, 0, newBuckets, 0, bcount ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^final String propName = value.getName (  ) ;^78^^^^^72^94^final String propName = newProperty.getName (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^SettableBeanProperty oldProp = find ( value.getName (  )  ) ;^80^^^^^72^94^SettableBeanProperty oldProp = find ( newProperty.getName (  )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^if  ( value == null )  {^81^^^^^72^94^if  ( oldProp == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( oldProp != null )  {^81^^^^^72^94^if  ( oldProp == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^newBuckets[index] = new Bucket ( buckets[index], propName, newProperty, _nextBucketIndex++ ) ;^86^87^^^^72^94^newBuckets[index] = new Bucket ( newBuckets[index], propName, newProperty, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^newBuckets[index] = new Bucket ( newBuckets[index], key, newProperty, _nextBucketIndex++ ) ;^86^87^^^^72^94^newBuckets[index] = new Bucket ( newBuckets[index], propName, newProperty, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^newBuckets[index] = new Bucket ( newBuckets[index], propName, value, _nextBucketIndex++ ) ;^86^87^^^^72^94^newBuckets[index] = new Bucket ( newBuckets[index], propName, newProperty, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^newBuckets[index] = new Bucket ( newProperty[index], propName, newBuckets, _nextBucketIndex++ ) ;^86^87^^^^72^94^newBuckets[index] = new Bucket ( newBuckets[index], propName, newProperty, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^newBuckets[index] = new Bucket ( newBuckets[index], newProperty, propName, _nextBucketIndex++ ) ;^86^87^^^^72^94^newBuckets[index] = new Bucket ( newBuckets[index], propName, newProperty, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^return new BeanPropertyMap ( buckets, _size+1, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^return new BeanPropertyMap ( newBuckets, index+1, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^return new BeanPropertyMap ( newBuckets, _size+1, index ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^return new BeanPropertyMap ( _size, newBuckets+1, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^return new BeanPropertyMap ( newBuckets, _nextBucketIndex+1, _size ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Literal]^return new BeanPropertyMap ( newBuckets, _size+2, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^return new BeanPropertyMap ( newBuckets, _size+1, size ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^int index = propName.hashCode (  )  & len;^85^^^^^72^94^int index = propName.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^int index = _hashMask.hashCode (  )  & propName;^85^^^^^72^94^int index = propName.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^int index = propName.hashCode (  )   >>  _hashMask;^85^^^^^72^94^int index = propName.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^int index = key.hashCode (  )  & _hashMask;^85^^^^^72^94^int index = propName.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^return new BeanPropertyMap ( newBuckets, size+1, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^return new BeanPropertyMap ( _nextBucketIndex, _size+1, newBuckets ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^newBuckets[index] = new Bucket ( propName[index], newBuckets, newProperty, _nextBucketIndex++ ) ;^86^87^^^^72^94^newBuckets[index] = new Bucket ( newBuckets[index], propName, newProperty, _nextBucketIndex++ ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^return new BeanPropertyMap ( newBuckets, len+1, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Literal]^return new BeanPropertyMap ( newBuckets, _size+size, _nextBucketIndex ) ;^88^^^^^72^94^return new BeanPropertyMap ( newBuckets, _size+1, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^int index = propName.hashCode (  )   <  _hashMask;^85^^^^^72^94^int index = propName.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^BeanPropertyMap newMap = new BeanPropertyMap ( buckets, bcount, _nextBucketIndex ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, index, _nextBucketIndex ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, size ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^BeanPropertyMap newMap = new BeanPropertyMap ( bcount, newBuckets, _nextBucketIndex ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, _nextBucketIndex, bcount ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, i, _nextBucketIndex ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, i ) ;^91^^^^^72^94^BeanPropertyMap newMap = new BeanPropertyMap ( newBuckets, bcount, _nextBucketIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^newMap.replace ( value ) ;^92^^^^^72^94^newMap.replace ( newProperty ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] withProperty [RETURN_TYPE] BeanPropertyMap   SettableBeanProperty newProperty [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  BeanPropertyMap  newMap  String  key  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( transformer == null &&  ( transformer == NameTransformer.NOP )  )  {^102^^^^^100^124^if  ( transformer == null ||  ( transformer == NameTransformer.NOP )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( transformer != null ||  ( transformer == NameTransformer.NOP )  )  {^102^^^^^100^124^if  ( transformer == null ||  ( transformer == NameTransformer.NOP )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( deser == null )  {^112^^^^^100^124^if  ( deser != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^if  ( this != deser )  {^116^^^^^100^124^if  ( newDeser != deser )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( newDeser == deser )  {^116^^^^^100^124^if  ( newDeser != deser )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^prop = newDeser.withValueDeserializer ( prop ) ;^117^^^^^100^124^prop = prop.withValueDeserializer ( newDeser ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^prop = value.withValueDeserializer ( newDeser ) ;^117^^^^^100^124^prop = prop.withValueDeserializer ( newDeser ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^JsonDeserializer<Object> newDeser =  ( JsonDeserializer<Object> ) transformer.unwrappingDeserializer ( deser ) ;^114^115^^^^100^124^JsonDeserializer<Object> newDeser =  ( JsonDeserializer<Object> ) deser.unwrappingDeserializer ( transformer ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^prop = property.withValueDeserializer ( newDeser ) ;^117^^^^^100^124^prop = prop.withValueDeserializer ( newDeser ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^if  ( deser != newDeser )  {^116^^^^^100^124^if  ( newDeser != deser )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^prop = value.withName ( newName ) ;^110^^^^^100^124^prop = prop.withName ( newName ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^prop = prop.withName ( propName ) ;^110^^^^^100^124^prop = prop.withName ( newName ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^prop = newName.withName ( prop ) ;^110^^^^^100^124^prop = prop.withName ( newName ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^String newName = transformer.transform ( value.getName (  )  ) ;^109^^^^^100^124^String newName = transformer.transform ( prop.getName (  )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^String newName = prop.transform ( transformer.getName (  )  ) ;^109^^^^^100^124^String newName = transformer.transform ( prop.getName (  )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^SettableBeanProperty prop = this.next (  ) ;^108^^^^^100^124^SettableBeanProperty prop = it.next (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^JsonDeserializer<?> deser = value.getValueDeserializer (  ) ;^111^^^^^100^124^JsonDeserializer<?> deser = prop.getValueDeserializer (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^prop = prop.withValueDeserializer ( 1 ) ;^117^^^^^100^124^prop = prop.withValueDeserializer ( newDeser ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^newProps.add ( value ) ;^120^^^^^100^124^newProps.add ( prop ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^if  ( this != null )  {^112^^^^^100^124^if  ( deser != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^if  ( newDeser != this )  {^116^^^^^100^124^if  ( newDeser != deser )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^if  ( newDeser <= deser )  {^116^^^^^100^124^if  ( newDeser != deser )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^prop = prop.withValueDeserializer ( null ) ;^117^^^^^100^124^prop = prop.withValueDeserializer ( newDeser ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^String newName = transformer.transform ( property.getName (  )  ) ;^109^^^^^100^124^String newName = transformer.transform ( prop.getName (  )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^newProps.add ( property ) ;^120^^^^^100^124^newProps.add ( prop ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] renameAll [RETURN_TYPE] BeanPropertyMap   NameTransformer transformer [VARIABLES] NameTransformer  transformer  boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  next  Iterator  it  ArrayList  newProps  String  key  newName  propName  JsonDeserializer  deser  newDeser  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^while  ( next != null )  {^131^^^^^126^137^while  ( bucket != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] assignIndexes [RETURN_TYPE] BeanPropertyMap   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Wrong_Operator]^while  ( bucket == null )  {^131^^^^^126^137^while  ( bucket != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] assignIndexes [RETURN_TYPE] BeanPropertyMap   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^bucket = next.next;^133^^^^^126^137^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] assignIndexes [RETURN_TYPE] BeanPropertyMap   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^bucket = bucket.next.next;^133^^^^^126^137^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] assignIndexes [RETURN_TYPE] BeanPropertyMap   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Argument_Swapping]^bucket = bucket;^133^^^^^126^137^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] assignIndexes [RETURN_TYPE] BeanPropertyMap   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^bucket = next;^133^^^^^126^137^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] assignIndexes [RETURN_TYPE] BeanPropertyMap   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  size  
[BugLab_Variable_Misuse]^int needed =  ( len <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int needed =  ( size < 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int needed =  ( size <= 32 )  ?  ( size   instanceof   size )  :  ( size +  ( size >> 2 )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int needed =  ||  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size  ^  2 )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^int needed =  ( size <= _nextBucketIndex )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^int needed =  ( size <= 3_size )  ?  ( size + size )  :  ( size +  ( size >> _size )  ) ;^142^^^^^139^148^int needed =  ( size <= 32 )  ?  ( size + size )  :  ( size +  ( size >> 2 )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^int result = 3;^143^^^^^139^148^int result = 2;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( size < needed )  {^144^^^^^139^148^while  ( result < needed )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( result < index )  {^144^^^^^139^148^while  ( result < needed )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^while  ( needed < result )  {^144^^^^^139^148^while  ( result < needed )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^while  ( result <= needed )  {^144^^^^^139^148^while  ( result < needed )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^result += needed;^145^^^^^139^148^result += result;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return needed;^147^^^^^139^148^return result;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] findSize [RETURN_TYPE] int   int size [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^int count = index;^161^^^^^157^176^int count = 0;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  StringBuilder  sb  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( prop != null )  {^163^^^^^157^176^if  ( prop == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  StringBuilder  sb  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( count++ < 0 )  {^166^^^^^157^176^if  ( count++ > 0 )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  StringBuilder  sb  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^if  ( count++ > len )  {^166^^^^^157^176^if  ( count++ > 0 )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  StringBuilder  sb  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^sb.append ( value.getName (  )  ) ;^169^^^^^157^176^sb.append ( prop.getName (  )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  StringBuilder  sb  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^sb.append ( property.getType (  )  ) ;^171^^^^^157^176^sb.append ( prop.getType (  )  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  StringBuilder  sb  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return new IteratorImpl ( newBuckets ) ;^183^^^^^182^184^return new IteratorImpl ( _buckets ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int len = result;^196^^^^^194^204^int len = _nextBucketIndex;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket bucket = next; bucket != null; bucket = bucket.next )  {^199^^^^^194^204^for  ( Bucket bucket = root; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket root = root; bucket != null; bucket = bucket.next )  {^199^^^^^194^204^for  ( Bucket bucket = root; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^for  ( Bucket bucket = bucket.next; bucket != null; bucket = root )  {^199^^^^^194^204^for  ( Bucket bucket = root; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^for  ( Bucket bucket = root; bucket == null; bucket = bucket.next )  {^199^^^^^194^204^for  ( Bucket bucket = root; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^result[bucket.index] = root.value;^200^^^^^194^204^result[bucket.index] = bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^result[bucket.index] = value;^200^^^^^194^204^result[bucket.index] = bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^result[bucket.index] = bucket.value.value;^200^^^^^194^204^result[bucket.index] = bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^result[bucket.index] = bucket;^200^^^^^194^204^result[bucket.index] = bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket bucket = root; bucket != null; bucket = root )  {^199^^^^^194^204^for  ( Bucket bucket = root; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^for  ( Bucket bucket.next = root; bucket != null; bucket = bucket )  {^199^^^^^194^204^for  ( Bucket bucket = root; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^result[bucket.index] = next.value;^200^^^^^194^204^result[bucket.index] = bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] getPropertiesInInsertionOrder [RETURN_TYPE] SettableBeanProperty[]   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  SettableBeanProperty[]  result  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^public int size (  )  { return index; }^212^^^^^207^217^public int size (  )  { return _size; }^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = propName.hashCode (  )  & _hashMask;^216^^^^^214^233^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = key.hashCode (  )  & size;^216^^^^^214^233^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^int index = _hashMask.hashCode (  )  & key;^216^^^^^214^233^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int index = key.hashCode (  )   |  _hashMask;^216^^^^^214^233^int index = key.hashCode (  )  & _hashMask;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^Bucket bucket = newBuckets[index];^217^^^^^214^233^Bucket bucket = _buckets[index];^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( root == null )  {^219^^^^^214^233^if  ( bucket == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( bucket != null )  {^219^^^^^214^233^if  ( bucket == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( next.key == key )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( bucket.key == propName )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( propName == key )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( bucket.key.key == key )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( key.key == bucket )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( key == bucket.key )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( bucket.key != key )  {^223^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return root.value;^224^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return bucket.value.value;^224^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return bucket;^224^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return value;^224^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  (  ( root = bucket.next )  != null )  {^226^^^^^214^233^while  (  ( bucket = bucket.next )  != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  (  ( bucket = root )  != null )  {^226^^^^^214^233^while  (  ( bucket = bucket.next )  != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^while  (  ( bucket.next = bucket )  != null )  {^226^^^^^214^233^while  (  ( bucket = bucket.next )  != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^while  (  ( bucket = bucket.next )  == null )  {^226^^^^^214^233^while  (  ( bucket = bucket.next )  != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( root.key == key )  {^227^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( bucket.key == propName )  {^227^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( propName == key )  {^227^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( key == bucket.key )  {^227^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( bucket.key != key )  {^227^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return root.value;^228^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return value;^228^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return bucket.value.value;^228^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return bucket;^228^^^^^214^233^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( bucket == key )  {^227^^^^^214^233^if  ( bucket.key == key )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return _findWithEquals ( propName, index ) ;^232^^^^^214^233^return _findWithEquals ( key, index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return _findWithEquals ( index, key ) ;^232^^^^^214^233^return _findWithEquals ( key, index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return _findWithEquals ( key, needed ) ;^232^^^^^214^233^return _findWithEquals ( key, index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] find [RETURN_TYPE] SettableBeanProperty   String key [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  String  key  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^String name = value.getName (  ) ;^242^^^^^241^267^String name = property.getName (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^String name = prop.getName (  ) ;^242^^^^^241^267^String name = property.getName (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = name.hashCode (  )  &  ( i-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = name.hashCode (  )  &  ( newBuckets.length-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^int index = _buckets.length.hashCode (  )  &  ( name-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^int index = name.hashCode (  )  &  ( _buckets-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^int index = _buckets.hashCode (  )  &  ( name.length-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int index = name.hashCode (  )   <<   ( _buckets.length-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^int index = name.hashCode (  )  &  ( _buckets.length-0 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = propName.hashCode (  )  &  ( _buckets.length-1 ) ;^243^^^^^241^267^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( i < 0 && bucket.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( foundIndex < 0 && root.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( foundIndex < 0 && bucket.key.equals ( propName )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( foundIndex < 0 && propName.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( bucket < 0 && foundIndex.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( foundIndex < 0 && name.equals ( bucket.key )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( bucket.key < 0 && foundIndex.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( foundIndex < 0 || bucket.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( foundIndex <= 0 && bucket.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^if  ( foundIndex < needed && bucket.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( root, bucket.key, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, propName, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, foundIndex ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket, tail.key, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.index.key, bucket.value, bucket ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.index, bucket.value, bucket.key ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.key, bucket.index, bucket.value ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, root.key, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, newName, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, size ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.value, bucket.key, tail, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.key, tail, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^foundIndex = tail.index;^254^^^^^241^267^foundIndex = bucket.index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^foundIndex = bucket.index.index;^254^^^^^241^267^foundIndex = bucket.index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^foundIndex = bucket;^254^^^^^241^267^foundIndex = bucket.index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket tail = _buckets[index]; bucket != null; bucket = bucket.next )  {^251^^^^^241^267^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket bucket = newBuckets[index]; bucket != null; bucket = bucket.next )  {^251^^^^^241^267^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = tail )  {^251^^^^^241^267^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^for  ( Bucket bucket.next = _buckets[index]; bucket != null; bucket = bucket )  {^251^^^^^241^267^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^for  ( Bucket bucket = _buckets[index]; bucket == null; bucket = bucket.next )  {^251^^^^^241^267^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( index < 0 && bucket.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^if  ( foundIndex < -1 && bucket.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.index, bucket.key, bucket.value, tail ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( next, bucket.key, bucket.value, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.value, bucket.key, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.value.key, bucket, bucket.index ) ;^256^^^^^253^257^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^foundIndex = foundIndex;^254^^^^^241^267^foundIndex = bucket.index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^foundIndex = size;^254^^^^^241^267^foundIndex = bucket.index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( root, bucket.key, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, tail.key, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, newName, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, foundIndex ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket, tail.key, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.index.key, bucket.value, bucket ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.value, bucket.key, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.key, bucket.index, bucket.value ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, root.key, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, propName, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, prop, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.key.key, bucket.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket, bucket.key.value, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.value.key, bucket, bucket.index ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.index, bucket.key, bucket.value, tail ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( foundIndex < 0 && tail.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( foundIndex < 0 && name.key.equals ( bucket )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( foundIndex < 0 && bucket.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^foundIndex = root.index;^254^^^^^241^267^foundIndex = bucket.index;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.index, bucket.value, bucket.key ) ;^256^^^^^241^267^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( foundIndex < 0 && newName.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( foundIndex < 0 && bucket.key.key.equals ( name )  )  {^253^^^^^241^267^if  ( foundIndex < 0 && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( size < 0 )  {^260^^^^^241^267^if  ( foundIndex < 0 )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( foundIndex <= 0 )  {^260^^^^^241^267^if  ( foundIndex < 0 )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^if  ( foundIndex < -1 )  {^260^^^^^241^267^if  ( foundIndex < 0 )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets[index] = new Bucket ( root, name, property, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets[index] = new Bucket ( tail, propName, property, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets[index] = new Bucket ( tail, name, value, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets[index] = new Bucket ( tail, name, property, size ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^_buckets[index] = new Bucket ( tail, property, name, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets[index] = new Bucket ( next, name, property, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^_buckets[index] = new Bucket ( name, tail, property, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^_buckets[index] = new Bucket ( property, name, tail, foundIndex ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^_buckets[index] = new Bucket ( tail, foundIndex, property, name ) ;^266^^^^^241^267^_buckets[index] = new Bucket ( tail, name, property, foundIndex ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] replace [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^String name = prop.getName (  ) ;^276^^^^^273^293^String name = property.getName (  ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = propName.hashCode (  )  &  ( _buckets.length-1 ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = name.hashCode (  )  &  ( foundIndex-1 ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^int index = name.hashCode (  )  &  ( newBuckets.length-1 ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^int index = _buckets.hashCode (  )  &  ( name.length-1 ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^int index = name.hashCode (  )  &  ( _buckets-1 ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^int index = name.hashCode (  )   !=   ( _buckets.length-1 ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^int index = name.hashCode (  )  &  ( _buckets.length-result ) ;^277^^^^^273^293^int index = name.hashCode (  )  &  ( _buckets.length-1 ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^boolean found = true;^279^^^^^273^293^boolean found = false;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( !found && root.key.equals ( name )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( !found && bucket.key.equals ( propName )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( !found && newName.equals ( name )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( !found || bucket.key.equals ( name )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, propName, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, i ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket, tail.key, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.key.key, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket, bucket.key.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.key, bucket.index, bucket.value ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.index, bucket.key, bucket.value, tail ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( root, bucket.key, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, size ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.value, bucket.key, tail, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.index, bucket.value, bucket.key ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Literal]^found = false;^284^^^^^273^293^found = true;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket root = _buckets[index]; bucket != null; bucket = bucket.next )  {^281^^^^^273^293^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket bucket = newBuckets[index]; bucket != null; bucket = bucket.next )  {^281^^^^^273^293^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^for  ( Bucket bucket = bucket.next[index]; bucket != null; bucket = _buckets )  {^281^^^^^273^293^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^for  ( Bucket bucket = _buckets[index]; bucket == null; bucket = bucket.next )  {^281^^^^^273^293^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( !found && propName.equals ( name )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( !found && name.equals ( bucket.key )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, root.key, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, prop, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.value.key, bucket, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.index.key, bucket.value, bucket ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, tail.key, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, newName, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, result ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( bucket.key, tail, bucket.value, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^tail = new Bucket ( tail, bucket.value, bucket.key, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, foundIndex ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( !found && tail.key.equals ( name )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( !found && bucket.key.key.equals ( name )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^for  ( Bucket tail = _buckets[index]; bucket != null; bucket = bucket.next )  {^281^^^^^273^293^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^for  ( Bucket bucket.next = _buckets[index]; bucket != null; bucket = bucket )  {^281^^^^^273^293^for  ( Bucket bucket = _buckets[index]; bucket != null; bucket = bucket.next )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, property, bucket.index ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^tail = new Bucket ( tail, bucket.key, bucket.value, needed ) ;^286^^^^^273^293^tail = new Bucket ( tail, bucket.key, bucket.value, bucket.index ) ;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( !found && name.key.equals ( bucket )  )  {^283^^^^^273^293^if  ( !found && bucket.key.equals ( name )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets[index] = root;^292^^^^^273^293^_buckets[index] = tail;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] remove [RETURN_TYPE] void   SettableBeanProperty property [VARIABLES] boolean  found  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^Bucket bucket = newBuckets[index];^303^^^^^301^311^Bucket bucket = _buckets[index];^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( root != null )  {^304^^^^^301^311^while  ( bucket != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^while  ( bucket == null )  {^304^^^^^301^311^while  ( bucket != null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( propName.equals ( bucket.key )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( key.equals ( tail.key )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( key.equals ( propName )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( bucket.key.equals ( key )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( key.equals ( bucket.key.key )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return tail.value;^306^^^^^301^311^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return prop;^306^^^^^301^311^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return bucket.value.value;^306^^^^^301^311^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return bucket;^306^^^^^301^311^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^bucket = root.next;^308^^^^^301^311^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^bucket = tail;^308^^^^^301^311^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^bucket = bucket.next.next;^308^^^^^301^311^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^bucket = bucket;^308^^^^^301^311^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return value;^306^^^^^301^311^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( key.equals ( root.key )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^if  ( bucket.equals ( key.key )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( key.equals ( newName )  )  {^305^^^^^301^311^if  ( key.equals ( bucket.key )  )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return property;^306^^^^^301^311^return bucket.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^bucket = tail.next;^308^^^^^301^311^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^bucket = root;^308^^^^^301^311^bucket = bucket.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] _findWithEquals [RETURN_TYPE] SettableBeanProperty   String key int index [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return tail != null;^376^^^^^375^377^return _currentBucket != null;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^return _currentBucket == null;^376^^^^^375^377^return _currentBucket != null;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^Bucket curr = tail;^382^^^^^380^393^Bucket curr = _currentBucket;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^if  ( tail == null )  {^383^^^^^380^393^if  ( curr == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^if  ( curr != null )  {^383^^^^^380^393^if  ( curr == null )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^Bucket b = tail.next;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^Bucket b = next;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^Bucket b = curr.next.next;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^Bucket b = curr;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( root == null && _nextBucketIndex < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( b == null && size < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( b == null && _nextBucketIndex < i )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^while  ( b == null && _nextBucketIndex < newBuckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^while  ( _buckets.length == null && _nextBucketIndex < b )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^while  ( _nextBucketIndex == null && b < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^while  ( b == null && _buckets.length < _nextBucketIndex )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^while  ( _buckets == null && _nextBucketIndex < b.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^while  ( b == null || _nextBucketIndex < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^while  ( b != null && _nextBucketIndex < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Wrong_Operator]^while  ( b == null && _nextBucketIndex == _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^b = newBuckets[_nextBucketIndex++];^389^^^^^380^393^b = _buckets[_nextBucketIndex++];^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_currentBucket = tail;^391^^^^^380^393^_currentBucket = b;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return tail.value;^392^^^^^380^393^return curr.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^return value;^392^^^^^380^393^return curr.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return curr.value.value;^392^^^^^380^393^return curr.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Argument_Swapping]^return curr;^392^^^^^380^393^return curr.value;^[CLASS] BeanPropertyMap Bucket IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  SettableBeanProperty  newProperty  oldProp  prop  property  value  Bucket[]  _buckets  buckets  newBuckets  Bucket  _currentBucket  b  bucket  curr  next  root  tail  String  key  name  newName  propName  long  serialVersionUID  int  _hashMask  _nextBucketIndex  _size  bcount  bucketCount  count  foundIndex  i  index  len  needed  result  size  
[BugLab_Variable_Misuse]^_buckets = _buckets;^361^^^^^360^372^_buckets = buckets;^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Literal]^int i = -1;^363^^^^^360^372^int i = 0;^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^if  ( _currentBucket != null )  {^366^^^^^360^372^if  ( b != null )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^if  ( b == null )  {^366^^^^^360^372^if  ( b != null )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^_currentBucket = _currentBucket;^367^^^^^360^372^_currentBucket = b;^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^for  ( _nextBucketIndexnt len = _buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^for  ( int len = i; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^for  ( int len = buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^for  ( lennt i = _buckets.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^for  ( int _buckets.length = len; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^for  ( int _buckets = len.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^for  ( int len = _buckets.length; i <= len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^Bucket b = buckets[i++];^365^^^^^360^372^Bucket b = _buckets[i++];^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^for  ( int len = _buckets; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^for  ( int len = _buckets.length.length; i < len;  )  {^364^^^^^360^372^for  ( int len = _buckets.length; i < len;  )  {^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^_nextBucketIndex = len;^371^^^^^360^372^_nextBucketIndex = i;^[CLASS] IteratorImpl  [METHOD] <init> [RETURN_TYPE] BeanPropertyMap$Bucket[])   Bucket[] buckets [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^return b != null;^376^^^^^375^377^return _currentBucket != null;^[CLASS] IteratorImpl  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^return _currentBucket == null;^376^^^^^375^377^return _currentBucket != null;^[CLASS] IteratorImpl  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^Bucket curr = b;^382^^^^^380^393^Bucket curr = _currentBucket;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^if  ( b == null )  {^383^^^^^380^393^if  ( curr == null )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^if  ( curr != null )  {^383^^^^^380^393^if  ( curr == null )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^Bucket b = _currentBucket.next;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^Bucket b = curr;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^Bucket b = curr.next.next;^387^^^^^380^393^Bucket b = curr.next;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^while  ( curr == null && _nextBucketIndex < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^while  ( b == null && len < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^while  ( b == null && _nextBucketIndex < len )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^while  ( b == null && _nextBucketIndex < buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^while  ( _buckets.length == null && _nextBucketIndex < b )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^while  ( _nextBucketIndex == null && b < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^while  ( b == null && _nextBucketIndex < _buckets.length.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^while  ( b == null || _nextBucketIndex < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^while  ( b != null && _nextBucketIndex < _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Wrong_Operator]^while  ( b == null && _nextBucketIndex <= _buckets.length )  {^388^^^^^380^393^while  ( b == null && _nextBucketIndex < _buckets.length )  {^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^b = buckets[_nextBucketIndex++];^389^^^^^380^393^b = _buckets[_nextBucketIndex++];^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^_currentBucket = curr;^391^^^^^380^393^_currentBucket = b;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Variable_Misuse]^return b.value;^392^^^^^380^393^return curr.value;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^return curr.value.value;^392^^^^^380^393^return curr.value;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
[BugLab_Argument_Swapping]^return curr;^392^^^^^380^393^return curr.value;^[CLASS] IteratorImpl  [METHOD] next [RETURN_TYPE] SettableBeanProperty   [VARIABLES] boolean  Bucket[]  _buckets  buckets  Bucket  _currentBucket  b  curr  int  _nextBucketIndex  i  len  
