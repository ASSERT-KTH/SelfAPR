[buglab_swap_variables]^map.put ( e.findEnumValue ( ai ) , e ) ;^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^map.put ( ai.findEnumValue ( e )  ) ;^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumValues, enumCls, map ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> (  enumValues, map ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls,  map ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls, map, enumValues ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls, enumValues ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[buglab_swap_variables]^for  ( enumValuesnt i = i.length; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^for  ( enumValues.lengthnt i = i; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^map.put ( e.toString (  )  ) ;^58^^^^^51^61^map.put ( e.toString (  ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^for  ( int i = enumValues.length.length; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^for  ( int i = enumValues; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( map, enumValues, enumCls ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> (  enumValues, map ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls, map, enumValues ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls,  map ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls, enumValues ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumValues, enumCls, map ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[buglab_swap_variables]^map.put ( o.toString (  )  ) ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^for  ( enumValuesnt i = i.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^for  ( int i = eumValues.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^for  ( int i = enumValues.lengthnumValues.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^for  ( enumValues.lengthnt i = i; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^map.put ( en.toString (  ) , o ) ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^Object o = en.invoke ( accessor ) ;^72^^^^^63^81^Object o = accessor.invoke ( en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^for  ( int i = enumValues.length.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^for  ( int i = enumValues; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumValues, enumCls, map ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return new EnumResolver<ET> (  enumValues, map ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls,  map ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls, map, enumValues ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return new EnumResolver<ET> ( enumCls, enumValues ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return new EnumResolver<ET> ( map, enumValues, enumCls ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[buglab_swap_variables]^return constructFor ( ai, enumCls ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^return constructFor (  ai ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^return constructFor ( enumCls ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^return constructUsingMethod ( accessor, enumCls ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^return constructUsingMethod (  accessor ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^return constructUsingMethod ( enumCls ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^return key.get ( _enumsById ) ;^123^^^^^121^124^return _enumsById.get ( key ) ;^[CLASS] EnumResolver  [METHOD] findEnum [RETURN_TYPE] T   String key [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  String  key  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^if  ( _enums.length < 0 || index >= index )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[buglab_swap_variables]^if  ( index < 0 || index >= _enums.length.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[buglab_swap_variables]^public int lastValidIndex (  )  { return _enums-1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[buglab_swap_variables]^public int lastValidIndex (  )  { return _enums.length.length-1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
