[BugLab_Argument_Swapping]^super ( typeIdVisible, idRes, typePropertyName, bt, defaultImpl ) ;^31^^^^^28^32^super ( bt, idRes, typePropertyName, typeIdVisible, defaultImpl ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] <init> [RETURN_TYPE] Class)   JavaType bt TypeIdResolver idRes String typePropertyName boolean typeIdVisible Class<?> defaultImpl [VARIABLES] JavaType  bt  Class  defaultImpl  String  typePropertyName  boolean  typeIdVisible  long  serialVersionUID  TypeIdResolver  idRes  
[BugLab_Argument_Swapping]^super ( idRes, bt, typePropertyName, typeIdVisible, defaultImpl ) ;^31^^^^^28^32^super ( bt, idRes, typePropertyName, typeIdVisible, defaultImpl ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] <init> [RETURN_TYPE] Class)   JavaType bt TypeIdResolver idRes String typePropertyName boolean typeIdVisible Class<?> defaultImpl [VARIABLES] JavaType  bt  Class  defaultImpl  String  typePropertyName  boolean  typeIdVisible  long  serialVersionUID  TypeIdResolver  idRes  
[BugLab_Argument_Swapping]^super ( bt, idRes, defaultImpl, typeIdVisible, typePropertyName ) ;^31^^^^^28^32^super ( bt, idRes, typePropertyName, typeIdVisible, defaultImpl ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] <init> [RETURN_TYPE] Class)   JavaType bt TypeIdResolver idRes String typePropertyName boolean typeIdVisible Class<?> defaultImpl [VARIABLES] JavaType  bt  Class  defaultImpl  String  typePropertyName  boolean  typeIdVisible  long  serialVersionUID  TypeIdResolver  idRes  
[BugLab_Argument_Swapping]^super ( bt, typeIdVisible, typePropertyName, idRes, defaultImpl ) ;^31^^^^^28^32^super ( bt, idRes, typePropertyName, typeIdVisible, defaultImpl ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] <init> [RETURN_TYPE] Class)   JavaType bt TypeIdResolver idRes String typePropertyName boolean typeIdVisible Class<?> defaultImpl [VARIABLES] JavaType  bt  Class  defaultImpl  String  typePropertyName  boolean  typeIdVisible  long  serialVersionUID  TypeIdResolver  idRes  
[BugLab_Argument_Swapping]^super ( property, src ) ;^35^^^^^34^36^super ( src, property ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] <init> [RETURN_TYPE] BeanProperty)   AsPropertyTypeDeserializer src BeanProperty property [VARIABLES] boolean  long  serialVersionUID  AsPropertyTypeDeserializer  src  BeanProperty  property  
[BugLab_Argument_Swapping]^if  ( _property == prop )  {^40^^^^^39^44^if  ( prop == _property )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] forProperty [RETURN_TYPE] TypeDeserializer   BeanProperty prop [VARIABLES] long  serialVersionUID  BeanProperty  prop  boolean  
[BugLab_Wrong_Operator]^if  ( prop <= _property )  {^40^^^^^39^44^if  ( prop == _property )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] forProperty [RETURN_TYPE] TypeDeserializer   BeanProperty prop [VARIABLES] long  serialVersionUID  BeanProperty  prop  boolean  
[BugLab_Wrong_Operator]^if  ( t < JsonToken.START_OBJECT )  {^61^^^^^46^76^if  ( t == JsonToken.START_OBJECT )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t <= JsonToken.START_OBJECT )  {^61^^^^^46^76^if  ( t == JsonToken.START_OBJECT )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^} else if  ( t >= JsonToken.START_ARRAY )  {^63^^^^^48^78^} else if  ( t == JsonToken.START_ARRAY )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^} else if  ( t >= JsonToken.FIELD_NAME )  {^72^^^^^57^87^} else if  ( t != JsonToken.FIELD_NAME )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedUsingDefaultImpl ( ctxt, jp, null ) ;^73^^^^^58^88^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedUsingDefaultImpl ( ctxt, jp, null ) ;^71^^^^^56^86^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^} else if  ( t == JsonToken.FIELD_NAME )  {^72^^^^^57^87^} else if  ( t != JsonToken.FIELD_NAME )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^} else if  ( t != JsonToken.START_ARRAY )  {^63^^^^^48^78^} else if  ( t == JsonToken.START_ARRAY )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( name.equals ( _typePropertyName )  )  {^81^^^^^66^96^if  ( _typePropertyName.equals ( name )  )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedForId ( tb, ctxt, jp ) ;^82^^^^^67^97^return _deserializeTypedForId ( jp, ctxt, tb ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedForId ( jp, tb, ctxt ) ;^82^^^^^67^97^return _deserializeTypedForId ( jp, ctxt, tb ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedForId ( ctxt, jp, tb ) ;^82^^^^^67^97^return _deserializeTypedForId ( jp, ctxt, tb ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( tb != null )  {^84^^^^^69^99^if  ( tb == null )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^for  ( ; t >= JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^78^^^^^63^93^for  ( ; t == JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^for  ( ; t <= JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^78^^^^^63^93^for  ( ; t == JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedUsingDefaultImpl ( tb, ctxt, jp ) ;^90^^^^^75^105^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedUsingDefaultImpl ( jp, tb, ctxt ) ;^90^^^^^75^105^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return _deserializeTypedUsingDefaultImpl ( ctxt, jp, tb ) ;^90^^^^^75^105^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromObject [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  JsonToken  t  String  name  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^JsonDeserializer<Object> deser = _findDeserializer ( typeId, ctxt ) ;^99^^^^^94^114^JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( tb != null )  {^101^^^^^94^114^if  ( tb == null )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( tb == null )  {^107^^^^^94^114^if  ( tb != null )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^jp = JsonParserSequence.createFlattened ( jp.asParser ( tb ) , jp ) ;^108^^^^^94^114^jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return ctxt.deserialize ( jp, deser ) ;^113^^^^^94^114^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return jp.deserialize ( deser, ctxt ) ;^113^^^^^94^114^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Variable_Misuse]^return 1.deserialize ( jp, ctxt ) ;^113^^^^^94^114^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return deser.deserialize ( ctxt, jp ) ;^113^^^^^94^114^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedForId [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  String  typeId  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( deser == null )  {^123^^^^^120^143^if  ( deser != null )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( tb == null )  {^124^^^^^120^143^if  ( tb != null )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^jp = jp.asParser ( tb ) ;^126^^^^^120^143^jp = tb.asParser ( jp ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return jp.deserialize ( deser, ctxt ) ;^130^^^^^120^143^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return deser.deserialize ( ctxt, jp ) ;^130^^^^^120^143^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return ctxt.deserialize ( jp, deser ) ;^130^^^^^120^143^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Variable_Misuse]^return null.deserialize ( jp, ctxt ) ;^130^^^^^120^143^return deser.deserialize ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^Object result = TypeDeserializer.deserializeIfNatural ( _baseType, ctxt, jp ) ;^133^^^^^120^143^Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^Object result = TypeDeserializer.deserializeIfNatural ( ctxt, jp, _baseType ) ;^133^^^^^120^143^Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^Object result = TypeDeserializer.deserializeIfNatural ( jp, _baseType, ctxt ) ;^133^^^^^120^143^Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( result == null )  {^134^^^^^120^143^if  ( result != null )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getCurrentToken (  )  != JsonToken.START_ARRAY )  {^138^^^^^120^143^if  ( jp.getCurrentToken (  )  == JsonToken.START_ARRAY )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^throw jp.wrongTokenException ( ctxt, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  >>  ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  ^  ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  <  ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  >=  ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   instanceof   ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  >  ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id  <=  ( for class "+baseTypeName (  ) +" ) " ) ;^141^142^^^^120^143^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] _deserializeTypedUsingDefaultImpl [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TokenBuffer tb [VARIABLES] boolean  TokenBuffer  tb  DeserializationContext  ctxt  Object  result  JsonDeserializer  deser  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getCurrentToken (  )  <= JsonToken.START_ARRAY )  {^156^^^^^150^160^if  ( jp.getCurrentToken (  )  == JsonToken.START_ARRAY )  {^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromAny [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return deserializeTypedFromObject ( ctxt, jp ) ;^159^^^^^150^160^return deserializeTypedFromObject ( jp, ctxt ) ;^[CLASS] AsPropertyTypeDeserializer  [METHOD] deserializeTypedFromAny [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
