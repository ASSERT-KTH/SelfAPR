[BugLab_Variable_Misuse]^this ( _propertyName, scope, gen, false ) ;^19^^^^^18^20^this ( prop, scope, gen, false ) ;^[CLASS] ObjectIdInfo  [METHOD] <init> [RETURN_TYPE] Class)   String prop Class<?> scope ObjectIdGenerator<?>> gen [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  String  _propertyName  prop  
[BugLab_Argument_Swapping]^this ( scope, prop, gen, false ) ;^19^^^^^18^20^this ( prop, scope, gen, false ) ;^[CLASS] ObjectIdInfo  [METHOD] <init> [RETURN_TYPE] Class)   String prop Class<?> scope ObjectIdGenerator<?>> gen [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  String  _propertyName  prop  
[BugLab_Argument_Swapping]^this ( prop, gen, scope, false ) ;^19^^^^^18^20^this ( prop, scope, gen, false ) ;^[CLASS] ObjectIdInfo  [METHOD] <init> [RETURN_TYPE] Class)   String prop Class<?> scope ObjectIdGenerator<?>> gen [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  String  _propertyName  prop  
[BugLab_Wrong_Literal]^this ( prop, scope, gen, true ) ;^19^^^^^18^20^this ( prop, scope, gen, false ) ;^[CLASS] ObjectIdInfo  [METHOD] <init> [RETURN_TYPE] Class)   String prop Class<?> scope ObjectIdGenerator<?>> gen [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  String  _propertyName  prop  
[BugLab_Variable_Misuse]^_propertyName = _propertyName;^25^^^^^22^29^_propertyName = prop;^[CLASS] ObjectIdInfo  [METHOD] <init> [RETURN_TYPE] Class,boolean)   String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  String  _propertyName  prop  
[BugLab_Variable_Misuse]^_alwaysAsId = _alwaysAsId;^28^^^^^22^29^_alwaysAsId = alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] <init> [RETURN_TYPE] Class,boolean)   String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  String  _propertyName  prop  
[BugLab_Variable_Misuse]^if  ( _alwaysAsId == alwaysAsId )  {^32^^^^^31^36^if  ( _alwaysAsId == state )  {^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^if  ( alwaysAsId == state )  {^32^^^^^31^36^if  ( _alwaysAsId == state )  {^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^if  ( state == _alwaysAsId )  {^32^^^^^31^36^if  ( _alwaysAsId == state )  {^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^if  ( _alwaysAsId <= state )  {^32^^^^^31^36^if  ( _alwaysAsId == state )  {^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^return new ObjectIdInfo ( prop, _scope, _generator, state ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^return new ObjectIdInfo ( _propertyName, _scope, state, _generator ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^return new ObjectIdInfo ( _generator, _scope, _propertyName, state ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^return new ObjectIdInfo ( _scope, _propertyName, _generator, state ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^return new ObjectIdInfo ( _propertyName, _generator, _scope, state ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^return new ObjectIdInfo ( _propertyName, _scope, _generator, alwaysAsId ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^return new ObjectIdInfo ( state, _scope, _generator, _propertyName ) ;^35^^^^^31^36^return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[CLASS] ObjectIdInfo  [METHOD] withAlwaysAsId [RETURN_TYPE] ObjectIdInfo   boolean state [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^public String getPropertyName (  )  { return prop; }^38^^^^^33^43^public String getPropertyName (  )  { return _propertyName; }^[CLASS] ObjectIdInfo  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^public boolean getAlwaysAsId (  )  { return state; }^41^^^^^36^46^public boolean getAlwaysAsId (  )  { return _alwaysAsId; }^[CLASS] ObjectIdInfo  [METHOD] getAlwaysAsId [RETURN_TYPE] boolean   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^return "ObjectIdInfo: propName="+prop +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( this == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Variable_Misuse]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( null == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Argument_Swapping]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _generator == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _scope == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  >  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  ^  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  &&  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  <=  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  <  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  |  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope != null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
[BugLab_Wrong_Operator]^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator != null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^45^46^47^48^^44^49^return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[CLASS] ObjectIdInfo  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  _generator  _scope  gen  scope  boolean  _alwaysAsId  alwaysAsId  state  String  _propertyName  prop  
