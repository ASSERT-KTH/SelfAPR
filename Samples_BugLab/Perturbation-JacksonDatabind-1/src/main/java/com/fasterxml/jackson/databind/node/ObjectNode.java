[BugLab_Variable_Misuse]^ObjectNode ret = new ObjectNode ( ret ) ;^40^^^^^38^46^ObjectNode ret = new ObjectNode ( _nodeFactory ) ;^[CLASS] ObjectNode  [METHOD] deepCopy [RETURN_TYPE] ObjectNode   [VARIABLES] Entry  entry  boolean  ObjectNode  ret  Map  _children  
[BugLab_Variable_Misuse]^ret._children.put ( null.getKey (  ) , entry.getValue (  ) .deepCopy (  )  ) ;^43^^^^^38^46^ret._children.put ( entry.getKey (  ) , entry.getValue (  ) .deepCopy (  )  ) ;^[CLASS] ObjectNode  [METHOD] deepCopy [RETURN_TYPE] ObjectNode   [VARIABLES] Entry  entry  boolean  ObjectNode  ret  Map  _children  
[BugLab_Variable_Misuse]^return null.size (  ) ;^64^^^^^63^65^return _children.size (  ) ;^[CLASS] ObjectNode  [METHOD] size [RETURN_TYPE] int   [VARIABLES] Map  _children  boolean  
[BugLab_Variable_Misuse]^return this.get ( fieldName ) ;^79^^^^^77^80^return _children.get ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] get [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Map  _children  String  fieldName  boolean  
[BugLab_Argument_Swapping]^return fieldName.get ( _children ) ;^79^^^^^77^80^return _children.get ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] get [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Map  _children  String  fieldName  boolean  
[BugLab_Argument_Swapping]^JsonNode n = fieldName.get ( _children ) ;^97^^^^^95^102^JsonNode n = _children.get ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] path [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] JsonNode  n  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( n == null )  {^98^^^^^95^102^if  ( n != null )  {^[CLASS] ObjectNode  [METHOD] path [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] JsonNode  n  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^JsonNode n = 2.get ( propertyName ) ;^117^^^^^115^129^JsonNode n = _children.get ( propertyName ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Argument_Swapping]^JsonNode n = propertyName.get ( _children ) ;^117^^^^^115^129^JsonNode n = _children.get ( propertyName ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^if  ( n == null )  {^118^^^^^115^129^if  ( n != null )  {^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^if  ( n  <=  ObjectNode )  {^119^^^^^115^129^if  ( n instanceof ObjectNode )  {^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Argument_Swapping]^throw propertyNameew UnsupportedOperationException ( "Property '" + n + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ==  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ^  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  ||  propertyName  ||  "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  >=  propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  <=  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  >>  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  <<  propertyName  <<  "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  ^  propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^if  ( n  ==  ObjectNode )  {^119^^^^^115^129^if  ( n instanceof ObjectNode )  {^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  !=  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  !=  propertyName  !=  "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ||  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  ==  propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^122^123^124^^^115^129^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ObjectNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Argument_Swapping]^_children.put ( result, propertyName ) ;^127^^^^^115^129^_children.put ( propertyName, result ) ;^[CLASS] ObjectNode  [METHOD] with [RETURN_TYPE] ObjectNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  boolean  ObjectNode  result  Map  _children  
[BugLab_Argument_Swapping]^JsonNode n = propertyName.get ( _children ) ;^134^^^^^132^146^JsonNode n = _children.get ( propertyName ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( n == null )  {^135^^^^^132^146^if  ( n != null )  {^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( n  >  ArrayNode )  {^136^^^^^132^146^if  ( n instanceof ArrayNode )  {^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Argument_Swapping]^throw propertyNameew UnsupportedOperationException ( "Property '" + n + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  <  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  >  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"   instanceof   propertyName   instanceof   "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  ^  propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  !=  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  >=  propertyName  >=  "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  ||  propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( n  >=  ArrayNode )  {^136^^^^^132^146^if  ( n instanceof ArrayNode )  {^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  &  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode   instanceof   ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  &&  propertyName  &&  "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  &&  propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  |  propertyName  |  "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "Property '"  ==  propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^139^140^141^^^132^146^throw new UnsupportedOperationException ( "Property '" + propertyName + "' has value that is not of type ArrayNode  ( but " + n .getClass (  ) .getName (  )  + " ) " ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Argument_Swapping]^_children.put ( result, propertyName ) ;^144^^^^^132^146^_children.put ( propertyName, result ) ;^[CLASS] ObjectNode  [METHOD] withArray [RETURN_TYPE] ArrayNode   String propertyName [VARIABLES] JsonNode  n  String  propertyName  ArrayNode  result  boolean  Map  _children  
[BugLab_Variable_Misuse]^if  ( fieldName.equals ( null.getKey (  )  )  )  {^158^^^^^155^167^if  ( fieldName.equals ( entry.getKey (  )  )  )  {^[CLASS] ObjectNode  [METHOD] findValue [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^if  ( entry.equals ( fieldName.getKey (  )  )  )  {^158^^^^^155^167^if  ( fieldName.equals ( entry.getKey (  )  )  )  {^[CLASS] ObjectNode  [METHOD] findValue [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( value == null )  {^162^^^^^155^167^if  ( value != null )  {^[CLASS] ObjectNode  [METHOD] findValue [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^JsonNode value = fieldName.getValue (  ) .findValue ( entry ) ;^161^^^^^155^167^JsonNode value = entry.getValue (  ) .findValue ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] findValue [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^if  ( entry.equals ( fieldName.getKey (  )  )  )  {^173^^^^^170^183^if  ( fieldName.equals ( entry.getKey (  )  )  )  {^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = foundSoFar.getValue (  ) .findValues ( fieldName, entry ) ;^179^^^^^170^183^foundSoFar = entry.getValue (  ) .findValues ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = fieldName.getValue (  ) .findValues ( entry, foundSoFar ) ;^179^^^^^170^183^foundSoFar = entry.getValue (  ) .findValues ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = entry.getValue (  ) .findValues ( foundSoFar, fieldName ) ;^179^^^^^170^183^foundSoFar = entry.getValue (  ) .findValues ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^foundSoFar = 3.getValue (  ) .findValues ( fieldName, foundSoFar ) ;^179^^^^^170^183^foundSoFar = entry.getValue (  ) .findValues ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( foundSoFar != null )  {^174^^^^^170^183^if  ( foundSoFar == null )  {^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^if  ( null == null )  {^174^^^^^170^183^if  ( foundSoFar == null )  {^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^foundSoFar.add ( 1.getValue (  )  ) ;^177^^^^^170^183^foundSoFar.add ( entry.getValue (  )  ) ;^[CLASS] ObjectNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = foundSoFar.getValue (  ) .findValuesAsText ( fieldName, entry ) ;^195^196^^^^186^200^foundSoFar = entry.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = entry.getValue (  ) .findValuesAsText ( foundSoFar, fieldName ) ;^195^196^^^^186^200^foundSoFar = entry.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = fieldName.getValue (  ) .findValuesAsText ( entry, foundSoFar ) ;^195^196^^^^186^200^foundSoFar = entry.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^foundSoFar = 1.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^195^196^^^^186^200^foundSoFar = entry.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( foundSoFar != null )  {^190^^^^^186^200^if  ( foundSoFar == null )  {^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^if  ( entry.equals ( fieldName.getKey (  )  )  )  {^189^^^^^186^200^if  ( fieldName.equals ( entry.getKey (  )  )  )  {^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^foundSoFar = 4.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^195^196^^^^186^200^foundSoFar = entry.getValue (  ) .findValuesAsText ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^if  ( entry.equals ( fieldName.getKey (  )  )  )  {^206^^^^^203^215^if  ( fieldName.equals ( entry.getKey (  )  )  )  {^[CLASS] ObjectNode  [METHOD] findParent [RETURN_TYPE] ObjectNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( value == null )  {^210^^^^^203^215^if  ( value != null )  {^[CLASS] ObjectNode  [METHOD] findParent [RETURN_TYPE] ObjectNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^JsonNode value = fieldName.getValue (  ) .findParent ( entry ) ;^209^^^^^203^215^JsonNode value = entry.getValue (  ) .findParent ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] findParent [RETURN_TYPE] ObjectNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^for  ( Map.Entry<String, JsonNode> entry : 2.entrySet (  )  )  {^205^^^^^203^215^for  ( Map.Entry<String, JsonNode> entry : _children.entrySet (  )  )  {^[CLASS] ObjectNode  [METHOD] findParent [RETURN_TYPE] ObjectNode   String fieldName [VARIABLES] Entry  entry  JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^if  ( entry.equals ( fieldName.getKey (  )  )  )  {^221^^^^^218^232^if  ( fieldName.equals ( entry.getKey (  )  )  )  {^[CLASS] ObjectNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = foundSoFar.getValue (  ) .findParents ( fieldName, entry ) ;^227^228^^^^218^232^foundSoFar = entry.getValue (  ) .findParents ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = entry.getValue (  ) .findParents ( foundSoFar, fieldName ) ;^227^228^^^^218^232^foundSoFar = entry.getValue (  ) .findParents ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( foundSoFar != null )  {^222^^^^^218^232^if  ( foundSoFar == null )  {^[CLASS] ObjectNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^foundSoFar = fieldName.getValue (  ) .findParents ( entry, foundSoFar ) ;^227^228^^^^218^232^foundSoFar = entry.getValue (  ) .findParents ( fieldName, foundSoFar ) ;^[CLASS] ObjectNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Variable_Misuse]^return this;^231^^^^^218^232^return foundSoFar;^[CLASS] ObjectNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName JsonNode> foundSoFar [VARIABLES] List  foundSoFar  Entry  entry  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^(  ( BaseJsonNode )  provider.getValue (  )  ) .serialize ( jg, en ) ;^256^^^^^245^259^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( jg, provider ) ;^[CLASS] ObjectNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  Entry  en  boolean  SerializerProvider  provider  Map  _children  
[BugLab_Argument_Swapping]^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( provider, jg ) ;^256^^^^^245^259^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( jg, provider ) ;^[CLASS] ObjectNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  Entry  en  boolean  SerializerProvider  provider  Map  _children  
[BugLab_Variable_Misuse]^(  ( BaseJsonNode )  null.getValue (  )  ) .serialize ( jg, provider ) ;^256^^^^^245^259^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( jg, provider ) ;^[CLASS] ObjectNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  Entry  en  boolean  SerializerProvider  provider  Map  _children  
[BugLab_Argument_Swapping]^(  ( BaseJsonNode )  provider.getValue (  )  ) .serialize ( jg, en ) ;^269^^^^^262^272^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( jg, provider ) ;^[CLASS] ObjectNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] TypeSerializer  typeSer  JsonGenerator  jg  Entry  en  boolean  SerializerProvider  provider  Map  _children  
[BugLab_Argument_Swapping]^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( provider, jg ) ;^269^^^^^262^272^(  ( BaseJsonNode )  en.getValue (  )  ) .serialize ( jg, provider ) ;^[CLASS] ObjectNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] TypeSerializer  typeSer  JsonGenerator  jg  Entry  en  boolean  SerializerProvider  provider  Map  _children  
[BugLab_Wrong_Operator]^if  ( value != null )  {^298^^^^^296^303^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] set [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Argument_Swapping]^_children.put ( value, fieldName ) ;^301^^^^^296^303^_children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] set [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  
[BugLab_Wrong_Operator]^if  ( n != null )  {^319^^^^^315^325^if  ( n == null )  {^[CLASS] ObjectNode  [METHOD] setAll [RETURN_TYPE] JsonNode   JsonNode> properties [VARIABLES] Entry  en  JsonNode  n  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( n.getKey (  ) , en ) ;^322^^^^^315^325^_children.put ( en.getKey (  ) , n ) ;^[CLASS] ObjectNode  [METHOD] setAll [RETURN_TYPE] JsonNode   JsonNode> properties [VARIABLES] Entry  en  JsonNode  n  boolean  Map  _children  properties  
[BugLab_Variable_Misuse]^_children.put ( 3.getKey (  ) , n ) ;^322^^^^^315^325^_children.put ( en.getKey (  ) , n ) ;^[CLASS] ObjectNode  [METHOD] setAll [RETURN_TYPE] JsonNode   JsonNode> properties [VARIABLES] Entry  en  JsonNode  n  boolean  Map  _children  properties  
[BugLab_Variable_Misuse]^_children.putAll ( other.4 ) ;^339^^^^^337^341^_children.putAll ( other._children ) ;^[CLASS] ObjectNode  [METHOD] setAll [RETURN_TYPE] JsonNode   ObjectNode other [VARIABLES] ObjectNode  other  Map  _children  properties  boolean  
[BugLab_Argument_Swapping]^_children.putAll ( other._children._children ) ;^339^^^^^337^341^_children.putAll ( other._children ) ;^[CLASS] ObjectNode  [METHOD] setAll [RETURN_TYPE] JsonNode   ObjectNode other [VARIABLES] ObjectNode  other  Map  _children  properties  boolean  
[BugLab_Wrong_Operator]^if  ( value != null )  {^357^^^^^355^361^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] replace [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return _children.put ( value, fieldName ) ;^360^^^^^355^361^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] replace [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return value.put ( fieldName, _children ) ;^360^^^^^355^361^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] replace [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Variable_Misuse]^return null.put ( fieldName, value ) ;^360^^^^^355^361^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] replace [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return fieldName.put ( _children, value ) ;^360^^^^^355^361^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] replace [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Wrong_Operator]^if  ( value != null )  {^416^^^^^414^420^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return fieldName.put ( _children, value ) ;^419^^^^^414^420^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return value.put ( fieldName, _children ) ;^419^^^^^414^420^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return _children.put ( value, fieldName ) ;^419^^^^^414^420^return _children.put ( fieldName, value ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] JsonNode   String fieldName JsonNode value [VARIABLES] JsonNode  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^return fieldName.remove ( _children ) ;^431^^^^^429^432^return _children.remove ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] remove [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] Map  _children  properties  String  fieldName  boolean  
[BugLab_Variable_Misuse]^_children.keySet (  ) .removeAll ( 2 ) ;^444^^^^^442^446^_children.keySet (  ) .removeAll ( fieldNames ) ;^[CLASS] ObjectNode  [METHOD] remove [RETURN_TYPE] ObjectNode   String> fieldNames [VARIABLES] Map  _children  properties  Collection  fieldNames  boolean  
[BugLab_Argument_Swapping]^_children.put ( n, fieldName ) ;^537^^^^^534^539^_children.put ( fieldName, n ) ;^[CLASS] ObjectNode  [METHOD] putArray [RETURN_TYPE] ArrayNode   String fieldName [VARIABLES] String  fieldName  ArrayNode  n  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( n, fieldName ) ;^555^^^^^552^557^_children.put ( fieldName, n ) ;^[CLASS] ObjectNode  [METHOD] putObject [RETURN_TYPE] ObjectNode   String fieldName [VARIABLES] String  fieldName  boolean  ObjectNode  n  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( pojo, POJONode ( fieldName )  ) ;^563^^^^^562^565^_children.put ( fieldName, POJONode ( pojo )  ) ;^[CLASS] ObjectNode  [METHOD] putPOJO [RETURN_TYPE] ObjectNode   String fieldName Object pojo [VARIABLES] Object  pojo  String  fieldName  boolean  Map  _children  properties  
[BugLab_Wrong_Operator]^if  ( value != null )  {^593^^^^^592^599^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Short value [VARIABLES] String  fieldName  boolean  Map  _children  properties  Short  value  
[BugLab_Argument_Swapping]^_children.put ( value, numberNode ( fieldName.shortValue (  )  )  ) ;^596^^^^^592^599^_children.put ( fieldName, numberNode ( value.shortValue (  )  )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Short value [VARIABLES] String  fieldName  boolean  Map  _children  properties  Short  value  
[BugLab_Argument_Swapping]^_children.put ( v, numberNode ( fieldName )  ) ;^607^^^^^606^609^_children.put ( fieldName, numberNode ( v )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName int v [VARIABLES] String  fieldName  boolean  Map  _children  properties  int  v  
[BugLab_Wrong_Operator]^if  ( value != null )  {^618^^^^^617^624^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Integer value [VARIABLES] Integer  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( value, numberNode ( fieldName.intValue (  )  )  ) ;^621^^^^^617^624^_children.put ( fieldName, numberNode ( value.intValue (  )  )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Integer value [VARIABLES] Integer  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Wrong_Operator]^if  ( value != null )  {^643^^^^^642^649^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Long value [VARIABLES] Long  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( value, numberNode ( fieldName.longValue (  )  )  ) ;^646^^^^^642^649^_children.put ( fieldName, numberNode ( value.longValue (  )  )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Long value [VARIABLES] Long  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( v, numberNode ( fieldName )  ) ;^657^^^^^656^659^_children.put ( fieldName, numberNode ( v )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName float v [VARIABLES] String  fieldName  boolean  float  v  Map  _children  properties  
[BugLab_Wrong_Operator]^if  ( value != null )  {^668^^^^^667^674^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Float value [VARIABLES] Float  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( value, numberNode ( fieldName.floatValue (  )  )  ) ;^671^^^^^667^674^_children.put ( fieldName, numberNode ( value.floatValue (  )  )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Float value [VARIABLES] Float  value  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( v, numberNode ( fieldName )  ) ;^682^^^^^681^684^_children.put ( fieldName, numberNode ( v )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName double v [VARIABLES] String  fieldName  boolean  Map  _children  properties  double  v  
[BugLab_Wrong_Operator]^if  ( value != null )  {^693^^^^^692^699^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Double value [VARIABLES] String  fieldName  boolean  Map  _children  properties  Double  value  
[BugLab_Argument_Swapping]^_children.put ( value, numberNode ( fieldName.doubleValue (  )  )  ) ;^696^^^^^692^699^_children.put ( fieldName, numberNode ( value.doubleValue (  )  )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Double value [VARIABLES] String  fieldName  boolean  Map  _children  properties  Double  value  
[BugLab_Wrong_Operator]^if  ( v != null )  {^707^^^^^706^713^if  ( v == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName BigDecimal v [VARIABLES] String  fieldName  boolean  Map  _children  properties  BigDecimal  v  
[BugLab_Wrong_Operator]^if  ( v != null )  {^721^^^^^720^727^if  ( v == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName String v [VARIABLES] Map  _children  properties  String  fieldName  v  boolean  
[BugLab_Argument_Swapping]^_children.put ( v, textNode ( fieldName )  ) ;^724^^^^^720^727^_children.put ( fieldName, textNode ( v )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName String v [VARIABLES] Map  _children  properties  String  fieldName  v  boolean  
[BugLab_Variable_Misuse]^_children.put ( fieldName, textNode ( fieldName )  ) ;^724^^^^^720^727^_children.put ( fieldName, textNode ( v )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName String v [VARIABLES] Map  _children  properties  String  fieldName  v  boolean  
[BugLab_Variable_Misuse]^putNull ( v ) ;^722^^^^^720^727^putNull ( fieldName ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName String v [VARIABLES] Map  _children  properties  String  fieldName  v  boolean  
[BugLab_Wrong_Operator]^if  ( value != null )  {^746^^^^^745^752^if  ( value == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Boolean value [VARIABLES] String  fieldName  boolean  Boolean  value  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( value, booleanNode ( fieldName.booleanValue (  )  )  ) ;^749^^^^^745^752^_children.put ( fieldName, booleanNode ( value.booleanValue (  )  )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName Boolean value [VARIABLES] String  fieldName  boolean  Boolean  value  Map  _children  properties  
[BugLab_Wrong_Operator]^if  ( v != null )  {^760^^^^^759^766^if  ( v == null )  {^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName byte[] v [VARIABLES] byte[]  v  String  fieldName  boolean  Map  _children  properties  
[BugLab_Argument_Swapping]^_children.put ( v, binaryNode ( fieldName )  ) ;^763^^^^^759^766^_children.put ( fieldName, binaryNode ( v )  ) ;^[CLASS] ObjectNode  [METHOD] put [RETURN_TYPE] ObjectNode   String fieldName byte[] v [VARIABLES] byte[]  v  String  fieldName  boolean  Map  _children  properties  
[BugLab_Wrong_Operator]^if  ( o < this )  return true;^777^^^^^775^785^if  ( o == this )  return true;^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Wrong_Literal]^if  ( o == this )  return false;^777^^^^^775^785^if  ( o == this )  return true;^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Wrong_Operator]^if  ( o != null )  return false;^778^^^^^775^785^if  ( o == null )  return false;^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Wrong_Literal]^if  ( o == null )  return true;^778^^^^^775^785^if  ( o == null )  return false;^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Wrong_Operator]^if  ( getClass (  )  == o.getClass (  )  )  {^781^^^^^775^785^if  ( getClass (  )  != o.getClass (  )  )  {^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Wrong_Literal]^return true;^782^^^^^775^785^return false;^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Variable_Misuse]^return null.equals (  (  ( ObjectNode )  o ) ._children ) ;^784^^^^^775^785^return _children.equals (  (  ( ObjectNode )  o ) ._children ) ;^[CLASS] ObjectNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Map  _children  properties  Object  o  boolean  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( 32 +  >  ( size (  )  << 4 )  ) ;^796^^^^^794^810^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )    instanceof   4 )  ) ;^796^^^^^794^810^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Literal]^StringBuilder sb = new StringBuilder ( count +  ( size (  )  << 4 )  ) ;^796^^^^^794^810^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Literal]^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << count )  ) ;^796^^^^^794^810^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( 32 +  <=  ( size (  )  << 4 )  ) ;^796^^^^^794^810^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )   &&  4 )  ) ;^796^^^^^794^810^StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Literal]^int count = count;^798^^^^^794^810^int count = 0;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Operator]^if  ( count >= 0 )  {^800^^^^^794^810^if  ( count > 0 )  {^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Wrong_Literal]^if  ( count > count )  {^800^^^^^794^810^if  ( count > 0 )  {^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Variable_Misuse]^for  ( Map.Entry<String, JsonNode> en : null.entrySet (  )  )  {^799^^^^^794^810^for  ( Map.Entry<String, JsonNode> en : _children.entrySet (  )  )  {^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
[BugLab_Argument_Swapping]^TextNode.appendQuoted ( en, sb.getKey (  )  ) ;^804^^^^^794^810^TextNode.appendQuoted ( sb, en.getKey (  )  ) ;^[CLASS] ObjectNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Entry  en  boolean  StringBuilder  sb  Map  _children  properties  int  count  
