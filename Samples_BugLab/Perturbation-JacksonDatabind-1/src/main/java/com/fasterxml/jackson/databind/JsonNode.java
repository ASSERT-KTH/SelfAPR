[BugLab_Wrong_Literal]^public int size (  )  { return 1; }^74^^^^^69^79^public int size (  )  { return 0; }^[CLASS] JsonNode  [METHOD] size [RETURN_TYPE] int   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return true;^81^^^^^77^85^return false;^[CLASS] JsonNode  [METHOD] isValueNode [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return false;^83^^^^^77^85^return true;^[CLASS] JsonNode  [METHOD] isValueNode [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return type == JsonNodeType.OBJECT && type == JsonNodeType.ARRAY;^90^^^^^88^91^return type == JsonNodeType.OBJECT || type == JsonNodeType.ARRAY;^[CLASS] JsonNode  [METHOD] isContainerNode [RETURN_TYPE] boolean   [VARIABLES] boolean  JsonNodeType  type  
[BugLab_Wrong_Operator]^return type != JsonNodeType.OBJECT || type == JsonNodeType.ARRAY;^90^^^^^88^91^return type == JsonNodeType.OBJECT || type == JsonNodeType.ARRAY;^[CLASS] JsonNode  [METHOD] isContainerNode [RETURN_TYPE] boolean   [VARIABLES] boolean  JsonNodeType  type  
[BugLab_Wrong_Operator]^return getNodeType (  )  != JsonNodeType.MISSING;^95^^^^^94^96^return getNodeType (  )  == JsonNodeType.MISSING;^[CLASS] JsonNode  [METHOD] isMissingNode [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  != JsonNodeType.ARRAY;^100^^^^^99^101^return getNodeType (  )  == JsonNodeType.ARRAY;^[CLASS] JsonNode  [METHOD] isArray [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  <= JsonNodeType.OBJECT;^105^^^^^104^106^return getNodeType (  )  == JsonNodeType.OBJECT;^[CLASS] JsonNode  [METHOD] isObject [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  >= JsonNodeType.POJO;^204^^^^^203^205^return getNodeType (  )  == JsonNodeType.POJO;^[CLASS] JsonNode  [METHOD] isPojo [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  != JsonNodeType.NUMBER;^211^^^^^210^212^return getNodeType (  )  == JsonNodeType.NUMBER;^[CLASS] JsonNode  [METHOD] isNumber [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isIntegralNumber (  )  { return true; }^219^^^^^214^224^public boolean isIntegralNumber (  )  { return false; }^[CLASS] JsonNode  [METHOD] isIntegralNumber [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isFloatingPointNumber (  )  { return true; }^225^^^^^220^230^public boolean isFloatingPointNumber (  )  { return false; }^[CLASS] JsonNode  [METHOD] isFloatingPointNumber [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isShort (  )  { return true; }^237^^^^^232^242^public boolean isShort (  )  { return false; }^[CLASS] JsonNode  [METHOD] isShort [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isInt (  )  { return true; }^249^^^^^244^254^public boolean isInt (  )  { return false; }^[CLASS] JsonNode  [METHOD] isInt [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isLong (  )  { return true; }^261^^^^^256^266^public boolean isLong (  )  { return false; }^[CLASS] JsonNode  [METHOD] isLong [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isFloat (  )  { return true; }^266^^^^^261^271^public boolean isFloat (  )  { return false; }^[CLASS] JsonNode  [METHOD] isFloat [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isDouble (  )  { return true; }^268^^^^^263^273^public boolean isDouble (  )  { return false; }^[CLASS] JsonNode  [METHOD] isDouble [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isBigDecimal (  )  { return true; }^269^^^^^264^274^public boolean isBigDecimal (  )  { return false; }^[CLASS] JsonNode  [METHOD] isBigDecimal [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean isBigInteger (  )  { return true; }^270^^^^^265^275^public boolean isBigInteger (  )  { return false; }^[CLASS] JsonNode  [METHOD] isBigInteger [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  >= JsonNodeType.STRING;^277^^^^^276^278^return getNodeType (  )  == JsonNodeType.STRING;^[CLASS] JsonNode  [METHOD] isTextual [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  >= JsonNodeType.BOOLEAN;^285^^^^^284^286^return getNodeType (  )  == JsonNodeType.BOOLEAN;^[CLASS] JsonNode  [METHOD] isBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  <= JsonNodeType.NULL;^293^^^^^292^294^return getNodeType (  )  == JsonNodeType.NULL;^[CLASS] JsonNode  [METHOD] isNull [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return getNodeType (  )  >= JsonNodeType.BINARY;^305^^^^^304^306^return getNodeType (  )  == JsonNodeType.BINARY;^[CLASS] JsonNode  [METHOD] isBinary [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean canConvertToInt (  )  { return true; }^317^^^^^312^322^public boolean canConvertToInt (  )  { return false; }^[CLASS] JsonNode  [METHOD] canConvertToInt [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean canConvertToLong (  )  { return true; }^328^^^^^323^333^public boolean canConvertToLong (  )  { return false; }^[CLASS] JsonNode  [METHOD] canConvertToLong [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public boolean booleanValue (  )  { return true; }^370^^^^^365^375^public boolean booleanValue (  )  { return false; }^[CLASS] JsonNode  [METHOD] booleanValue [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public short shortValue (  )  { return null; }^392^^^^^387^397^public short shortValue (  )  { return 0; }^[CLASS] JsonNode  [METHOD] shortValue [RETURN_TYPE] short   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return asInt ( -1 ) ;^472^^^^^471^473^return asInt ( 0 ) ;^[CLASS] JsonNode  [METHOD] asInt [RETURN_TYPE] int   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return asInt ( 1 ) ;^472^^^^^471^473^return asInt ( 0 ) ;^[CLASS] JsonNode  [METHOD] asInt [RETURN_TYPE] int   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return asBoolean ( true ) ;^556^^^^^555^557^return asBoolean ( false ) ;^[CLASS] JsonNode  [METHOD] asBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^return get ( fieldName )  == null;^600^^^^^599^601^return get ( fieldName )  != null;^[CLASS] JsonNode  [METHOD] has [RETURN_TYPE] boolean   String fieldName [VARIABLES] boolean  String  fieldName  
[BugLab_Wrong_Operator]^return get ( index )  == null;^626^^^^^625^627^return get ( index )  != null;^[CLASS] JsonNode  [METHOD] has [RETURN_TYPE] boolean   int index [VARIABLES] boolean  int  index  
[BugLab_Wrong_Operator]^return  ( n != null )  || !n.isNull (  ) ;^642^^^^^640^643^return  ( n != null )  && !n.isNull (  ) ;^[CLASS] JsonNode  [METHOD] hasNonNull [RETURN_TYPE] boolean   String fieldName [VARIABLES] boolean  JsonNode  n  String  fieldName  
[BugLab_Wrong_Operator]^return  ( n == null )  && !n.isNull (  ) ;^642^^^^^640^643^return  ( n != null )  && !n.isNull (  ) ;^[CLASS] JsonNode  [METHOD] hasNonNull [RETURN_TYPE] boolean   String fieldName [VARIABLES] boolean  JsonNode  n  String  fieldName  
[BugLab_Wrong_Operator]^return  ( n != null )  || !n.isNull (  ) ;^658^^^^^656^659^return  ( n != null )  && !n.isNull (  ) ;^[CLASS] JsonNode  [METHOD] hasNonNull [RETURN_TYPE] boolean   int index [VARIABLES] boolean  JsonNode  n  int  index  
[BugLab_Wrong_Operator]^return  ( n == null )  && !n.isNull (  ) ;^658^^^^^656^659^return  ( n != null )  && !n.isNull (  ) ;^[CLASS] JsonNode  [METHOD] hasNonNull [RETURN_TYPE] boolean   int index [VARIABLES] boolean  JsonNode  n  int  index  
[BugLab_Wrong_Operator]^if  ( result != null )  {^722^^^^^719^726^if  ( result == null )  {^[CLASS] JsonNode  [METHOD] findValues [RETURN_TYPE] List   String fieldName [VARIABLES] boolean  List  result  String  fieldName  
[BugLab_Variable_Misuse]^if  ( this == null )  {^735^^^^^732^739^if  ( result == null )  {^[CLASS] JsonNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName [VARIABLES] boolean  List  result  String  fieldName  
[BugLab_Wrong_Operator]^if  ( result != null )  {^735^^^^^732^739^if  ( result == null )  {^[CLASS] JsonNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName [VARIABLES] boolean  List  result  String  fieldName  
[BugLab_Wrong_Operator]^if  ( result != null )  {^778^^^^^775^782^if  ( result == null )  {^[CLASS] JsonNode  [METHOD] findParents [RETURN_TYPE] List   String fieldName [VARIABLES] boolean  List  result  String  fieldName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  <=  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^803^804^^^^802^805^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] with [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  |  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^803^804^^^^802^805^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] with [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ^  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^803^804^^^^802^805^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] with [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  <  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^803^804^^^^802^805^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] with [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  |  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^816^817^^^^815^818^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] withArray [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  &  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^816^817^^^^815^818^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] withArray [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode   instanceof   ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^816^817^^^^815^818^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] withArray [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
[BugLab_Wrong_Operator]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  >  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^816^817^^^^815^818^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[CLASS] JsonNode  [METHOD] withArray [RETURN_TYPE] JsonNode   String propertyName [VARIABLES] boolean  String  propertyName  
