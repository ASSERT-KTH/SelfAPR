[buglab_swap_variables]^_currToken =  ( JsonToken.START_OBJECT == _currToken )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^_currToken =  ( _currToken == JsonToken.END_OBJECT )  ? JsonToken.START_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^_currToken =  ( JsonToken.END_OBJECT == JsonToken.START_OBJECT )  ? _currToken : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( JsonToken.START_OBJECT == _currToken || _currToken == JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( _currToken == JsonToken.START_ARRAY || _currToken == JsonToken.START_OBJECT )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^_currToken =  ( JsonToken.END_ARRAY == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : _currToken;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( JsonToken.START_ARRAY == JsonToken.START_OBJECT || _currToken == _currToken )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( JsonToken.START_OBJECT == _currToken || _currToken == JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( _currToken == JsonToken.START_ARRAY || _currToken == JsonToken.START_OBJECT )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( JsonToken.START_ARRAY == JsonToken.START_OBJECT || _currToken == _currToken )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( JsonToken.START_OBJECT == _currToken )  {^170^^^^^168^178^if  ( _currToken == JsonToken.START_OBJECT )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^} else if  ( JsonToken.START_ARRAY == _currToken )  {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^return data.length.length;^377^^^^^371^380^return data.length;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^return data;^377^^^^^371^380^return data.length;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^out.write (  0, data.length ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^out.write ( data, 0 ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[buglab_swap_variables]^if  ( _nodeCursor || _closed == null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
