[BugLab_Wrong_Literal]^final static BinaryNode EMPTY_BINARY_NODE = new BinaryNode ( new byte[1] ) ;^17^^^^^12^22^final static BinaryNode EMPTY_BINARY_NODE = new BinaryNode ( new byte[0] ) ;^[CLASS] BinaryNode   [VARIABLES] 
[BugLab_Variable_Misuse]^_data = _data;^23^^^^^21^24^_data = data;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[])   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^if  ( offset == 0 && offset == data.length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^if  ( offset == 0 && length == length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^if  ( data.length == 0 && length == offset )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^if  ( offset == 0 && data.length == length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Operator]^if  ( offset == 0 || length == data.length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Operator]^if  ( offset != 0 && length == data.length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Operator]^if  ( offset == 0 && length != data.length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Literal]^if  ( offset == offset && length == data.length )  {^28^^^^^26^34^if  ( offset == 0 && length == data.length )  {^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^System.arraycopy ( _data, offset, data, 0, length ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^System.arraycopy ( data, length, _data, 0, offset ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^System.arraycopy ( data, offset, length, 0, _data ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^System.arraycopy ( data, _data, offset, 0, length ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Literal]^System.arraycopy ( data, offset, _data, -1, length ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^_data = _data;^29^^^^^26^34^_data = data;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^System.arraycopy ( _data, offset, _data, 0, length ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^System.arraycopy ( offset, data, _data, 0, length ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Literal]^System.arraycopy ( data, offset, _data, 1, length ) ;^32^^^^^26^34^System.arraycopy ( data, offset, _data, 0, length ) ;^[CLASS] BinaryNode  [METHOD] <init> [RETURN_TYPE] BinaryNode(byte[],int,int)   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^if  ( _data == null )  {^38^^^^^36^45^if  ( data == null )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Operator]^if  ( data != null )  {^38^^^^^36^45^if  ( data == null )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^if  ( _data.length == 0 )  {^41^^^^^36^45^if  ( data.length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Argument_Swapping]^if  ( data.length.length == 0 )  {^41^^^^^36^45^if  ( data.length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Operator]^if  ( data.length != 0 )  {^41^^^^^36^45^if  ( data.length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Literal]^if  ( data.length == -1 )  {^41^^^^^36^45^if  ( data.length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^return new BinaryNode ( _data ) ;^44^^^^^36^45^return new BinaryNode ( data ) ;^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^if  ( _data == null )  {^49^^^^^47^56^if  ( data == null )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Operator]^if  ( data != null )  {^49^^^^^47^56^if  ( data == null )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^if  ( offset == 0 )  {^52^^^^^47^56^if  ( length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Operator]^if  ( length != 0 )  {^52^^^^^47^56^if  ( length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Wrong_Literal]^if  ( length == 1 )  {^52^^^^^47^56^if  ( length == 0 )  {^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^return new BinaryNode ( _data, offset, length ) ;^55^^^^^47^56^return new BinaryNode ( data, offset, length ) ;^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^return new BinaryNode ( offset, data, length ) ;^55^^^^^47^56^return new BinaryNode ( data, offset, length ) ;^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Argument_Swapping]^return new BinaryNode ( data, length, offset ) ;^55^^^^^47^56^return new BinaryNode ( data, offset, length ) ;^[CLASS] BinaryNode  [METHOD] valueOf [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  _data  data  boolean  BinaryNode  EMPTY_BINARY_NODE  int  length  offset  
[BugLab_Variable_Misuse]^return EMPTY_BINARY_NODE;^70^^^^^65^71^return JsonToken.VALUE_EMBEDDED_OBJECT;^[CLASS] BinaryNode  [METHOD] asToken [RETURN_TYPE] JsonToken   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^public byte[] binaryValue (  )  { return data; }^79^^^^^74^84^public byte[] binaryValue (  )  { return _data; }^[CLASS] BinaryNode  [METHOD] binaryValue [RETURN_TYPE] byte[]   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^return Base64Variants.getDefaultVariant (  ) .encode ( data, false ) ;^87^^^^^86^88^return Base64Variants.getDefaultVariant (  ) .encode ( _data, false ) ;^[CLASS] BinaryNode  [METHOD] asText [RETURN_TYPE] String   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Literal]^return Base64Variants.getDefaultVariant (  ) .encode ( _data, true ) ;^87^^^^^86^88^return Base64Variants.getDefaultVariant (  ) .encode ( _data, false ) ;^[CLASS] BinaryNode  [METHOD] asText [RETURN_TYPE] String   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , data, 0, _data.length ) ;^94^95^^^^91^96^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0, _data.length ) ;^[CLASS] BinaryNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] byte[]  _data  data  JsonGenerator  jg  boolean  SerializerProvider  provider  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Argument_Swapping]^jg.writeBinary ( _data.length.getConfig (  ) .getBase64Variant (  ) , _data, 0, provider ) ;^94^95^^^^91^96^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0, _data.length ) ;^[CLASS] BinaryNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] byte[]  _data  data  JsonGenerator  jg  boolean  SerializerProvider  provider  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Argument_Swapping]^jg.writeBinary ( _data.getConfig (  ) .getBase64Variant (  ) , provider, 0, _data.length ) ;^94^95^^^^91^96^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0, _data.length ) ;^[CLASS] BinaryNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] byte[]  _data  data  JsonGenerator  jg  boolean  SerializerProvider  provider  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Argument_Swapping]^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data.length, 0, _data ) ;^94^95^^^^91^96^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0, _data.length ) ;^[CLASS] BinaryNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] byte[]  _data  data  JsonGenerator  jg  boolean  SerializerProvider  provider  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Wrong_Operator]^if  ( o != this )  return true;^101^^^^^99^107^if  ( o == this )  return true;^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Wrong_Literal]^if  ( o == this )  return false;^101^^^^^99^107^if  ( o == this )  return true;^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Wrong_Operator]^if  ( o != null )  return false;^102^^^^^99^107^if  ( o == null )  return false;^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Wrong_Literal]^if  ( o == null )  return true;^102^^^^^99^107^if  ( o == null )  return false;^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Wrong_Operator]^if  ( o.getClass (  )  == getClass (  )  )  {^103^^^^^99^107^if  ( o.getClass (  )  != getClass (  )  )  {^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Wrong_Literal]^return true;^104^^^^^99^107^return false;^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Variable_Misuse]^return Arrays.equals (  (  ( BinaryNode )  o ) ._data, data ) ;^106^^^^^99^107^return Arrays.equals (  (  ( BinaryNode )  o ) ._data, _data ) ;^[CLASS] BinaryNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _data  data  Object  o  boolean  BinaryNode  EMPTY_BINARY_NODE  
[BugLab_Variable_Misuse]^return  ( data == null )  ? -1 : _data.length;^111^^^^^110^112^return  ( _data == null )  ? -1 : _data.length;^[CLASS] BinaryNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Argument_Swapping]^return  ( _data.length == null )  ? -1 : _data;^111^^^^^110^112^return  ( _data == null )  ? -1 : _data.length;^[CLASS] BinaryNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Operator]^return  ( _data != null )  ? -1 : _data.length;^111^^^^^110^112^return  ( _data == null )  ? -1 : _data.length;^[CLASS] BinaryNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Literal]^return  ( _data == null )  ? -0 : _data.length;^111^^^^^110^112^return  ( _data == null )  ? -1 : _data.length;^[CLASS] BinaryNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Variable_Misuse]^return Base64Variants.getDefaultVariant (  ) .encode ( data, true ) ;^121^^^^^119^122^return Base64Variants.getDefaultVariant (  ) .encode ( _data, true ) ;^[CLASS] BinaryNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
[BugLab_Wrong_Literal]^return Base64Variants.getDefaultVariant (  ) .encode ( _data, false ) ;^121^^^^^119^122^return Base64Variants.getDefaultVariant (  ) .encode ( _data, true ) ;^[CLASS] BinaryNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] byte[]  _data  data  BinaryNode  EMPTY_BINARY_NODE  boolean  
