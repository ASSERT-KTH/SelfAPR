[BugLab_Wrong_Operator]^if  ( _annotations != null )  {^28^^^^^26^32^if  ( _annotations == null )  {^[CLASS] AnnotationMap  [METHOD] get [RETURN_TYPE] <A   Class<A> cls [VARIABLES] HashMap  _annotations  a  Class  cls  boolean  
[BugLab_Argument_Swapping]^return  ( A )  cls.get ( _annotations ) ;^31^^^^^26^32^return  ( A )  _annotations.get ( cls ) ;^[CLASS] AnnotationMap  [METHOD] get [RETURN_TYPE] <A   Class<A> cls [VARIABLES] HashMap  _annotations  a  Class  cls  boolean  
[BugLab_Variable_Misuse]^if  ( secondary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^36^^^^^34^53^if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Argument_Swapping]^if  ( primary._annotations == null || primary == null || primary._annotations.isEmpty (  )  )  {^36^^^^^34^53^if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^if  ( primary == null && primary._annotations == null || primary._annotations.isEmpty (  )  )  {^36^^^^^34^53^if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^if  ( primary != null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^36^^^^^34^53^if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^if  ( primary == null || primary._annotations != null || primary._annotations.isEmpty (  )  )  {^36^^^^^34^53^if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Variable_Misuse]^return primary;^37^^^^^34^53^return secondary;^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Argument_Swapping]^if  ( secondary._annotations == null || secondary == null || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^if  ( secondary == null && secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^if  ( secondary != null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^if  ( secondary == null || secondary._annotations != null || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Variable_Misuse]^return secondary;^40^^^^^34^53^return primary;^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Variable_Misuse]^if  ( primary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Variable_Misuse]^for  ( Annotation ann : primary._annotations.values (  )  )  {^45^^^^^34^53^for  ( Annotation ann : secondary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Variable_Misuse]^for  ( Annotation ann : 1.values (  )  )  {^45^^^^^34^53^for  ( Annotation ann : secondary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Argument_Swapping]^for  ( Annotation ann : secondary._annotations._annotations.values (  )  )  {^45^^^^^34^53^for  ( Annotation ann : secondary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Argument_Swapping]^for  ( Annotation ann : secondary.values (  )  )  {^45^^^^^34^53^for  ( Annotation ann : secondary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Variable_Misuse]^for  ( Annotation ann : secondary._annotations.values (  )  )  {^49^^^^^34^53^for  ( Annotation ann : primary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Argument_Swapping]^for  ( Annotation ann : primary._annotations._annotations.values (  )  )  {^49^^^^^34^53^for  ( Annotation ann : primary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Argument_Swapping]^for  ( Annotation ann : primary.values (  )  )  {^49^^^^^34^53^for  ( Annotation ann : primary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[BugLab_Wrong_Operator]^return  ( _annotations != null )  ? 0 : _annotations.size (  ) ;^57^^^^^56^58^return  ( _annotations == null )  ? 0 : _annotations.size (  ) ;^[CLASS] AnnotationMap  [METHOD] size [RETURN_TYPE] int   [VARIABLES] HashMap  _annotations  a  annotations  boolean  
[BugLab_Argument_Swapping]^if  ( ann == null || !_annotations.containsKey ( _annotations.annotationType (  )  )  )  {^66^^^^^64^69^if  ( _annotations == null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^[CLASS] AnnotationMap  [METHOD] addIfNotPresent [RETURN_TYPE] void   Annotation ann [VARIABLES] HashMap  _annotations  a  annotations  Annotation  ann  boolean  
[BugLab_Wrong_Operator]^if  ( _annotations == null && !_annotations.containsKey ( ann.annotationType (  )  )  )  {^66^^^^^64^69^if  ( _annotations == null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^[CLASS] AnnotationMap  [METHOD] addIfNotPresent [RETURN_TYPE] void   Annotation ann [VARIABLES] HashMap  _annotations  a  annotations  Annotation  ann  boolean  
[BugLab_Wrong_Operator]^if  ( _annotations != null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^66^^^^^64^69^if  ( _annotations == null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^[CLASS] AnnotationMap  [METHOD] addIfNotPresent [RETURN_TYPE] void   Annotation ann [VARIABLES] HashMap  _annotations  a  annotations  Annotation  ann  boolean  
[BugLab_Wrong_Operator]^if  ( _annotations != null )  {^81^^^^^79^85^if  ( _annotations == null )  {^[CLASS] AnnotationMap  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] HashMap  _annotations  a  annotations  boolean  
[BugLab_Wrong_Operator]^if  ( _annotations != null )  {^95^^^^^93^99^if  ( _annotations == null )  {^[CLASS] AnnotationMap  [METHOD] _add [RETURN_TYPE] void   Annotation ann [VARIABLES] HashMap  _annotations  a  annotations  Annotation  ann  boolean  
