[buglab_swap_variables]^return  ( A )  cls.get ( _annotations ) ;^31^^^^^26^32^return  ( A )  _annotations.get ( cls ) ;^[CLASS] AnnotationMap  [METHOD] get [RETURN_TYPE] <A   Class<A> cls [VARIABLES] HashMap  _annotations  a  Class  cls  boolean  
[buglab_swap_variables]^if  ( primary._annotations == null || primary == null || primary._annotations.isEmpty (  )  )  {^36^^^^^34^53^if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^if  ( secondary._annotations == null || secondary == null || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^for  ( Annotation ann : secondary._annotations._annotations.values (  )  )  {^45^^^^^34^53^for  ( Annotation ann : secondary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^for  ( Annotation ann : secondary.values (  )  )  {^45^^^^^34^53^for  ( Annotation ann : secondary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^annotations.put ( ann.annotationType (  )  ) ;^46^^^^^34^53^annotations.put ( ann.annotationType (  ) , ann ) ;^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^for  ( Annotation ann : primary._annotations._annotations.values (  )  )  {^49^^^^^34^53^for  ( Annotation ann : primary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^for  ( Annotation ann : primary.values (  )  )  {^49^^^^^34^53^for  ( Annotation ann : primary._annotations.values (  )  )  {^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^annotations.put ( ann.annotationType (  )  ) ;^50^^^^^34^53^annotations.put ( ann.annotationType (  ) , ann ) ;^[CLASS] AnnotationMap  [METHOD] merge [RETURN_TYPE] AnnotationMap   AnnotationMap primary AnnotationMap secondary [VARIABLES] boolean  AnnotationMap  primary  secondary  HashMap  _annotations  a  annotations  Annotation  ann  
[buglab_swap_variables]^if  ( ann == null || !_annotations.containsKey ( _annotations.annotationType (  )  )  )  {^66^^^^^64^69^if  ( _annotations == null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^[CLASS] AnnotationMap  [METHOD] addIfNotPresent [RETURN_TYPE] void   Annotation ann [VARIABLES] HashMap  _annotations  a  annotations  Annotation  ann  boolean  
[buglab_swap_variables]^_annotations.put ( ann.annotationType (  )  ) ;^98^^^^^93^99^_annotations.put ( ann.annotationType (  ) , ann ) ;^[CLASS] AnnotationMap  [METHOD] _add [RETURN_TYPE] void   Annotation ann [VARIABLES] HashMap  _annotations  a  annotations  Annotation  ann  boolean  
