[buglab_swap_variables]^public final BooleanNode booleanNode ( boolean _nodeFactory )  { return v.booleanNode ( v ) ; }^73^^^^^68^78^public final BooleanNode booleanNode ( boolean v )  { return _nodeFactory.booleanNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] booleanNode [RETURN_TYPE] BooleanNode   boolean v [VARIABLES] JsonNodeFactory  _nodeFactory  nc  boolean  v  
[buglab_swap_variables]^public final NumericNode numberNode ( byte _nodeFactory )  { return v.numberNode ( v ) ; }^75^^^^^70^80^public final NumericNode numberNode ( byte v )  { return _nodeFactory.numberNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   byte v [VARIABLES] byte  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final NumericNode numberNode ( short _nodeFactory )  { return v.numberNode ( v ) ; }^76^^^^^71^81^public final NumericNode numberNode ( short v )  { return _nodeFactory.numberNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   short v [VARIABLES] short  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final NumericNode numberNode ( int _nodeFactory )  { return v.numberNode ( v ) ; }^77^^^^^72^82^public final NumericNode numberNode ( int v )  { return _nodeFactory.numberNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   int v [VARIABLES] int  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final NumericNode numberNode ( long _nodeFactory )  { return v.numberNode ( v ) ; }^78^^^^^73^83^public final NumericNode numberNode ( long v )  { return _nodeFactory.numberNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   long v [VARIABLES] long  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final NumericNode numberNode ( float _nodeFactory )  { return v.numberNode ( v ) ; }^79^^^^^74^84^public final NumericNode numberNode ( float v )  { return _nodeFactory.numberNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   float v [VARIABLES] float  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final NumericNode numberNode ( double _nodeFactory )  { return v.numberNode ( v ) ; }^80^^^^^75^85^public final NumericNode numberNode ( double v )  { return _nodeFactory.numberNode ( v ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   double v [VARIABLES] double  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final NumericNode numberNode ( BigDecimal _nodeFactory )  { return  ( v.numberNode ( v )  ) ; }^81^^^^^76^86^public final NumericNode numberNode ( BigDecimal v )  { return  ( _nodeFactory.numberNode ( v )  ) ; }^[CLASS] ContainerNode  [METHOD] numberNode [RETURN_TYPE] NumericNode   BigDecimal v [VARIABLES] BigDecimal  v  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final TextNode _nodeFactoryNode ( String text )  { return text.textNode ( text ) ; }^83^^^^^78^88^public final TextNode textNode ( String text )  { return _nodeFactory.textNode ( text ) ; }^[CLASS] ContainerNode  [METHOD] textNode [RETURN_TYPE] TextNode   String text [VARIABLES] JsonNodeFactory  _nodeFactory  nc  String  text  boolean  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] _nodeFactory )  { return data.binaryNode ( data ) ; }^85^^^^^80^90^public final BinaryNode binaryNode ( byte[] data )  { return _nodeFactory.binaryNode ( data ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data [VARIABLES] byte[]  data  JsonNodeFactory  _nodeFactory  nc  boolean  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] _nodeFactory, int offset, int length )  { return data.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[]  int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] data, int length, int offset )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] data, int  int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] data, int _nodeFactory, int length )  { return offset.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] offset, int data, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final BinaryNode binaryNode ( byte[] data, int offset, int _nodeFactory )  { return length.binaryNode ( data, offset, length ) ; }^86^^^^^81^91^public final BinaryNode binaryNode ( byte[] data, int offset, int length )  { return _nodeFactory.binaryNode ( data, offset, length ) ; }^[CLASS] ContainerNode  [METHOD] binaryNode [RETURN_TYPE] BinaryNode   byte[] data int offset int length [VARIABLES] byte[]  data  boolean  int  length  offset  JsonNodeFactory  _nodeFactory  nc  
[buglab_swap_variables]^public final POJONode POJONode ( Object _nodeFactory )  { return pojo.POJONode ( pojo ) ; }^88^^^^^83^93^public final POJONode POJONode ( Object pojo )  { return _nodeFactory.POJONode ( pojo ) ; }^[CLASS] ContainerNode  [METHOD] POJONode [RETURN_TYPE] POJONode   Object pojo [VARIABLES] Object  pojo  JsonNodeFactory  _nodeFactory  nc  boolean  
