[BugLab_Variable_Misuse]^_name = _name;^77^^^^^75^78^_name = n;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] <init> [RETURN_TYPE] String)   Type t String n [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^super ( s, p ) ;^1132^^^^^1131^1133^super ( p, s ) ;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] <init> [RETURN_TYPE] AnnotationIntrospector)   AnnotationIntrospector p AnnotationIntrospector s [VARIABLES] AnnotationIntrospector  p  s  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^public static ReferenceProperty managed ( String n )  { return new ReferenceProperty ( Type.MANAGED_REFERENCE, name ) ; }^80^^^^^75^85^public static ReferenceProperty managed ( String name )  { return new ReferenceProperty ( Type.MANAGED_REFERENCE, name ) ; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] managed [RETURN_TYPE] AnnotationIntrospector$ReferenceProperty   String name [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^public static ReferenceProperty back ( String n )  { return new ReferenceProperty ( Type.BACK_REFERENCE, name ) ; }^81^^^^^76^86^public static ReferenceProperty back ( String name )  { return new ReferenceProperty ( Type.BACK_REFERENCE, name ) ; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] back [RETURN_TYPE] AnnotationIntrospector$ReferenceProperty   String name [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^public Type getType (  )  { return t; }^83^^^^^78^88^public Type getType (  )  { return _type; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] getType [RETURN_TYPE] AnnotationIntrospector$ReferenceProperty$Type   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^public String getName (  )  { return name; }^84^^^^^79^89^public String getName (  )  { return _name; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] getName [RETURN_TYPE] String   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^public boolean isManagedReference (  )  { return t == Type.MANAGED_REFERENCE; }^86^^^^^81^91^public boolean isManagedReference (  )  { return _type == Type.MANAGED_REFERENCE; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] isManagedReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^public boolean isManagedReference (  )  { return _type <= Type.MANAGED_REFERENCE; }^86^^^^^81^91^public boolean isManagedReference (  )  { return _type == Type.MANAGED_REFERENCE; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] isManagedReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^public boolean isBackReference (  )  { return t == Type.BACK_REFERENCE; }^87^^^^^82^92^public boolean isBackReference (  )  { return _type == Type.BACK_REFERENCE; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] isBackReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^public boolean isBackReference (  )  { return _type != Type.BACK_REFERENCE; }^87^^^^^82^92^public boolean isBackReference (  )  { return _type == Type.BACK_REFERENCE; }^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] isBackReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new AnnotationIntrospectorPair ( a2, a1 ) ;^106^^^^^105^107^return new AnnotationIntrospectorPair ( a1, a2 ) ;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] pair [RETURN_TYPE] AnnotationIntrospector   AnnotationIntrospector a1 AnnotationIntrospector a2 [VARIABLES] AnnotationIntrospector  a1  a2  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^168^^^^^167^169^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] isHandled [RETURN_TYPE] boolean   Annotation ann [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  Annotation  ann  
[BugLab_Wrong_Literal]^return true;^179^^^^^178^180^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] isAnnotationBundle [RETURN_TYPE] boolean   Annotation ann [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  Annotation  ann  
[BugLab_Wrong_Literal]^return true;^431^^^^^430^432^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] hasIgnoreMarker [RETURN_TYPE] boolean   AnnotatedMember m [VARIABLES] AnnotatedMember  m  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( memberOrClass  <  AnnotatedMember )  {^503^^^^^502^507^if  ( memberOrClass instanceof AnnotatedMember )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findFormat [RETURN_TYPE] Value   Annotated memberOrClass [VARIABLES] Annotated  memberOrClass  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a  >>  AnnotatedField )  {^734^^^^^729^748^if  ( a instanceof AnnotatedField )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a  &&  AnnotatedField )  {^734^^^^^729^748^if  ( a instanceof AnnotatedField )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  >>  AnnotatedMethod )  {^736^^^^^729^748^} else if  ( a instanceof AnnotatedMethod )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  <<  AnnotatedMethod )  {^736^^^^^729^748^} else if  ( a instanceof AnnotatedMethod )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( n != null )  {^741^^^^^729^748^if  ( name != null )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name == null )  {^741^^^^^729^748^if  ( name != null )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( n.length (  )  == 0 )  {^742^^^^^729^748^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name.length (  )  != 0 )  {^742^^^^^729^748^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new PropertyName ( n ) ;^745^^^^^729^748^return new PropertyName ( name ) ;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name.length (  )  <= 0 )  {^742^^^^^729^748^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( name.length (  )  == 1 )  {^742^^^^^729^748^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForSerialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^794^^^^^793^795^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] hasAsValueAnnotation [RETURN_TYPE] boolean   AnnotatedMethod am [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  AnnotatedMethod  am  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a  <  AnnotatedField )  {^1008^^^^^1003^1024^if  ( a instanceof AnnotatedField )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a  !=  AnnotatedField )  {^1008^^^^^1003^1024^if  ( a instanceof AnnotatedField )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a  <=  AnnotatedField )  {^1008^^^^^1003^1024^if  ( a instanceof AnnotatedField )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  <<  AnnotatedMethod )  {^1010^^^^^1003^1024^} else if  ( a instanceof AnnotatedMethod )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  |  AnnotatedMethod )  {^1010^^^^^1003^1024^} else if  ( a instanceof AnnotatedMethod )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  |  AnnotatedParameter )  {^1012^^^^^1003^1024^} else if  ( a instanceof AnnotatedParameter )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  >=  AnnotatedParameter )  {^1012^^^^^1003^1024^} else if  ( a instanceof AnnotatedParameter )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  ^  AnnotatedMethod )  {^1010^^^^^1003^1024^} else if  ( a instanceof AnnotatedMethod )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  ||  AnnotatedParameter )  {^1012^^^^^1003^1024^} else if  ( a instanceof AnnotatedParameter )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^} else if  ( a  ==  AnnotatedParameter )  {^1012^^^^^1003^1024^} else if  ( a instanceof AnnotatedParameter )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( n != null )  {^1017^^^^^1003^1024^if  ( name != null )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name == null )  {^1017^^^^^1003^1024^if  ( name != null )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( n.length (  )  == 0 )  {^1018^^^^^1003^1024^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name.length (  )  != 0 )  {^1018^^^^^1003^1024^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( name.length (  )  == 1 )  {^1018^^^^^1003^1024^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new PropertyName ( n ) ;^1021^^^^^1003^1024^return new PropertyName ( name ) ;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( name.length (  )  >= 0 )  {^1018^^^^^1003^1024^if  ( name.length (  )  == 0 )  {^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] findNameForDeserialization [RETURN_TYPE] PropertyName   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^1083^^^^^1082^1084^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] hasAnySetterAnnotation [RETURN_TYPE] boolean   AnnotatedMethod am [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  AnnotatedMethod  am  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^1096^^^^^1095^1097^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] hasAnyGetterAnnotation [RETURN_TYPE] boolean   AnnotatedMethod am [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  AnnotatedMethod  am  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^1110^^^^^1109^1111^return false;^[CLASS] AnnotationIntrospector ReferenceProperty Type Pair  [METHOD] hasCreatorAnnotation [RETURN_TYPE] boolean   Annotated a [VARIABLES] Annotated  a  Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^_type = _type;^76^^^^^75^78^_type = t;^[CLASS] ReferenceProperty Type  [METHOD] <init> [RETURN_TYPE] String)   Type t String n [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  boolean  
[BugLab_Variable_Misuse]^_name = _name;^77^^^^^75^78^_name = n;^[CLASS] ReferenceProperty Type  [METHOD] <init> [RETURN_TYPE] String)   Type t String n [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  boolean  
[BugLab_Variable_Misuse]^public static ReferenceProperty managed ( String n )  { return new ReferenceProperty ( Type.MANAGED_REFERENCE, name ) ; }^80^^^^^75^85^public static ReferenceProperty managed ( String name )  { return new ReferenceProperty ( Type.MANAGED_REFERENCE, name ) ; }^[CLASS] ReferenceProperty Type  [METHOD] managed [RETURN_TYPE] AnnotationIntrospector$ReferenceProperty   String name [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Variable_Misuse]^public static ReferenceProperty back ( String n )  { return new ReferenceProperty ( Type.BACK_REFERENCE, name ) ; }^81^^^^^76^86^public static ReferenceProperty back ( String name )  { return new ReferenceProperty ( Type.BACK_REFERENCE, name ) ; }^[CLASS] ReferenceProperty Type  [METHOD] back [RETURN_TYPE] AnnotationIntrospector$ReferenceProperty   String name [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Variable_Misuse]^public Type getType (  )  { return t; }^83^^^^^78^88^public Type getType (  )  { return _type; }^[CLASS] ReferenceProperty Type  [METHOD] getType [RETURN_TYPE] AnnotationIntrospector$ReferenceProperty$Type   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Variable_Misuse]^public String getName (  )  { return name; }^84^^^^^79^89^public String getName (  )  { return _name; }^[CLASS] ReferenceProperty Type  [METHOD] getName [RETURN_TYPE] String   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Variable_Misuse]^public boolean isManagedReference (  )  { return t == Type.MANAGED_REFERENCE; }^86^^^^^81^91^public boolean isManagedReference (  )  { return _type == Type.MANAGED_REFERENCE; }^[CLASS] ReferenceProperty Type  [METHOD] isManagedReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Wrong_Operator]^public boolean isManagedReference (  )  { return _type != Type.MANAGED_REFERENCE; }^86^^^^^81^91^public boolean isManagedReference (  )  { return _type == Type.MANAGED_REFERENCE; }^[CLASS] ReferenceProperty Type  [METHOD] isManagedReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Variable_Misuse]^public boolean isBackReference (  )  { return t == Type.BACK_REFERENCE; }^87^^^^^82^92^public boolean isBackReference (  )  { return _type == Type.BACK_REFERENCE; }^[CLASS] ReferenceProperty Type  [METHOD] isBackReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Wrong_Operator]^public boolean isBackReference (  )  { return _type >= Type.BACK_REFERENCE; }^87^^^^^82^92^public boolean isBackReference (  )  { return _type == Type.BACK_REFERENCE; }^[CLASS] ReferenceProperty Type  [METHOD] isBackReference [RETURN_TYPE] boolean   [VARIABLES] Type  BACK_REFERENCE  MANAGED_REFERENCE  _type  t  String  _name  n  name  boolean  
[BugLab_Argument_Swapping]^super ( s, p ) ;^1132^^^^^1131^1133^super ( p, s ) ;^[CLASS] Pair  [METHOD] <init> [RETURN_TYPE] AnnotationIntrospector)   AnnotationIntrospector p AnnotationIntrospector s [VARIABLES] AnnotationIntrospector  p  s  long  serialVersionUID  boolean  
