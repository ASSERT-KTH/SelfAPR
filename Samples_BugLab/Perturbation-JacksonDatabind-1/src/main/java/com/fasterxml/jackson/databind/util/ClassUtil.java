[buglab_swap_variables]^enumSetTypeField = locateField ( EnumSet. "elementType", Class.class ) ;^628^^^^^624^630^enumSetTypeField = locateField ( EnumSet.class, "elementType", Class.class ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] <init> [RETURN_TYPE] ClassUtil$EnumTypeLocator()   [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  
[buglab_swap_variables]^enumMapTypeField = locateField ( EnumMap. "elementType", Class.class ) ;^629^^^^^624^630^enumMapTypeField = locateField ( EnumMap.class, "elementType", Class.class ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] <init> [RETURN_TYPE] ClassUtil$EnumTypeLocator()   [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  
[buglab_swap_variables]^return findSuperTypes ( endBefore, cls, new ArrayList<Class<?>> ( 8 )  ) ;^30^^^^^28^31^return findSuperTypes ( cls, endBefore, new ArrayList<Class<?>> ( 8 )  ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  boolean  
[buglab_swap_variables]^return findSuperTypes (  endBefore, new ArrayList<Class<?>> ( 8 )  ) ;^30^^^^^28^31^return findSuperTypes ( cls, endBefore, new ArrayList<Class<?>> ( 8 )  ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  boolean  
[buglab_swap_variables]^return findSuperTypes ( cls,  new ArrayList<Class<?>> ( 8 )  ) ;^30^^^^^28^31^return findSuperTypes ( cls, endBefore, new ArrayList<Class<?>> ( 8 )  ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  boolean  
[buglab_swap_variables]^_addSuperTypes ( endBefore, cls, result, false ) ;^35^^^^^33^37^_addSuperTypes ( cls, endBefore, result, false ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore Class<?>> result [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  List  result  boolean  
[buglab_swap_variables]^_addSuperTypes (  endBefore, result, false ) ;^35^^^^^33^37^_addSuperTypes ( cls, endBefore, result, false ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore Class<?>> result [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  List  result  boolean  
[buglab_swap_variables]^_addSuperTypes ( cls,  result, false ) ;^35^^^^^33^37^_addSuperTypes ( cls, endBefore, result, false ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore Class<?>> result [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  List  result  boolean  
[buglab_swap_variables]^_addSuperTypes ( result, endBefore, cls, false ) ;^35^^^^^33^37^_addSuperTypes ( cls, endBefore, result, false ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore Class<?>> result [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  List  result  boolean  
[buglab_swap_variables]^_addSuperTypes ( cls, endBefore,  false ) ;^35^^^^^33^37^_addSuperTypes ( cls, endBefore, result, false ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findSuperTypes [RETURN_TYPE] List   Class<?> cls Class<?> endBefore Class<?>> result [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  endBefore  List  result  boolean  
[buglab_swap_variables]^if  ( endBefore == cls || cls == null || cls == Object.class )  {^41^^^^^39^54^if  ( cls == endBefore || cls == null || cls == Object.class )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^if  ( cls.contains ( result )  )  {^45^^^^^39^54^if  ( result.contains ( cls )  )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( endBefore, intCls, result, true ) ;^51^^^^^39^54^_addSuperTypes ( intCls, endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes (  endBefore, result, true ) ;^51^^^^^39^54^_addSuperTypes ( intCls, endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( intCls,  result, true ) ;^51^^^^^39^54^_addSuperTypes ( intCls, endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( result, endBefore, intCls, true ) ;^51^^^^^39^54^_addSuperTypes ( intCls, endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( intCls, endBefore,  true ) ;^51^^^^^39^54^_addSuperTypes ( intCls, endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( endBefore.getSuperclass (  ) , cls, result, true ) ;^53^^^^^39^54^_addSuperTypes ( cls.getSuperclass (  ) , endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( cls.getSuperclass (  ) ,  result, true ) ;^53^^^^^39^54^_addSuperTypes ( cls.getSuperclass (  ) , endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( result.getSuperclass (  ) , endBefore, cls, true ) ;^53^^^^^39^54^_addSuperTypes ( cls.getSuperclass (  ) , endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^_addSuperTypes ( cls.getSuperclass (  ) , endBefore,  true ) ;^53^^^^^39^54^_addSuperTypes ( cls.getSuperclass (  ) , endBefore, result, true ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] _addSuperTypes [RETURN_TYPE] void   Class<?> cls Class<?> endBefore Class<?>> result boolean addClassItself [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Collection  result  Class  cls  endBefore  intCls  boolean  addClassItself  
[buglab_swap_variables]^return Class.forName ( loader, true, className ) ;^230^^^^^215^245^return Class.forName ( className, true, loader ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findClass [RETURN_TYPE] Class   String className [VARIABLES] Field  enumMapTypeField  enumSetTypeField  boolean  EnumTypeLocator  instance  Throwable  prob  ClassLoader  loader  String  className  Exception  e  
[buglab_swap_variables]^return Class.forName (  true, loader ) ;^230^^^^^215^245^return Class.forName ( className, true, loader ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findClass [RETURN_TYPE] Class   String className [VARIABLES] Field  enumMapTypeField  enumSetTypeField  boolean  EnumTypeLocator  instance  Throwable  prob  ClassLoader  loader  String  className  Exception  e  
[buglab_swap_variables]^return Class.forName ( className, true ) ;^230^^^^^215^245^return Class.forName ( className, true, loader ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findClass [RETURN_TYPE] Class   String className [VARIABLES] Field  enumMapTypeField  enumSetTypeField  boolean  EnumTypeLocator  instance  Throwable  prob  ClassLoader  loader  String  className  Exception  e  
[buglab_swap_variables]^if  ( pts.length != null && pts != 0 )  {^262^^^^^254^271^if  ( pts != null && pts.length != 0 )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] hasGetterSignature [RETURN_TYPE] boolean   Method m [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Method  m  Class[]  pts  boolean  
[buglab_swap_variables]^throwAsIAE ( getRootCause ( msg ) , t ) ;^348^^^^^346^349^throwAsIAE ( getRootCause ( t ) , msg ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] unwrapAndThrowAsIAE [RETURN_TYPE] void   Throwable t String msg [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Throwable  t  String  msg  boolean  
[buglab_swap_variables]^throwAsIAE ( getRootCause ( t )  ) ;^348^^^^^346^349^throwAsIAE ( getRootCause ( t ) , msg ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] unwrapAndThrowAsIAE [RETURN_TYPE] void   Throwable t String msg [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Throwable  t  String  msg  boolean  
[buglab_swap_variables]^Constructor<T> ctor = findConstructor ( canFixAccess, cls ) ;^373^^^^^370^383^Constructor<T> ctor = findConstructor ( cls, canFixAccess ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] createInstance [RETURN_TYPE] <T>   Class<T> cls boolean canFixAccess [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  boolean  canFixAccess  Constructor  ctor  Exception  e  
[buglab_swap_variables]^Constructor<T> ctor = findConstructor (  canFixAccess ) ;^373^^^^^370^383^Constructor<T> ctor = findConstructor ( cls, canFixAccess ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] createInstance [RETURN_TYPE] <T>   Class<T> cls boolean canFixAccess [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  boolean  canFixAccess  Constructor  ctor  Exception  e  
[buglab_swap_variables]^Constructor<T> ctor = findConstructor ( cls ) ;^373^^^^^370^383^Constructor<T> ctor = findConstructor ( cls, canFixAccess ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] createInstance [RETURN_TYPE] <T>   Class<T> cls boolean canFixAccess [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  boolean  canFixAccess  Constructor  ctor  Exception  e  
[buglab_swap_variables]^ClassUtil.unwrapAndThrowAsIAE (  "Failed to instantiate class "+cls.getName (  ) +", problem: "+e.getMessage (  )  ) ;^380^^^^^370^383^ClassUtil.unwrapAndThrowAsIAE ( e, "Failed to instantiate class "+cls.getName (  ) +", problem: "+e.getMessage (  )  ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] createInstance [RETURN_TYPE] <T>   Class<T> cls boolean canFixAccess [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  Class  cls  boolean  canFixAccess  Constructor  ctor  Exception  e  
[buglab_swap_variables]^ClassUtil.unwrapAndThrowAsIAE (  "Failed to find default constructor of class "+cls.getName (  ) +", problem: "+e.getMessage (  )  ) ;^402^^^^^385^405^ClassUtil.unwrapAndThrowAsIAE ( e, "Failed to find default constructor of class "+cls.getName (  ) +", problem: "+e.getMessage (  )  ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] findConstructor [RETURN_TYPE] <T>   Class<T> cls boolean canFixAccess [VARIABLES] Field  enumMapTypeField  enumSetTypeField  boolean  canFixAccess  Constructor  ctor  EnumTypeLocator  instance  Class  cls  Exception  e  NoSuchMethodException  e  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( enumSetTypeField, set ) ;^636^^^^^633^639^return  ( Class<? extends Enum<?>> )  get ( set, enumSetTypeField ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumSet<?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumSet  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get (  enumSetTypeField ) ;^636^^^^^633^639^return  ( Class<? extends Enum<?>> )  get ( set, enumSetTypeField ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumSet<?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumSet  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( set ) ;^636^^^^^633^639^return  ( Class<? extends Enum<?>> )  get ( set, enumSetTypeField ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumSet<?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumSet  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( enumMapTypeField, set ) ;^645^^^^^642^648^return  ( Class<? extends Enum<?>> )  get ( set, enumMapTypeField ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumMap<?, ?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumMap  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get (  enumMapTypeField ) ;^645^^^^^642^648^return  ( Class<? extends Enum<?>> )  get ( set, enumMapTypeField ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumMap<?, ?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumMap  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( set ) ;^645^^^^^642^648^return  ( Class<? extends Enum<?>> )  get ( set, enumMapTypeField ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumMap<?, ?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumMap  set  
[buglab_swap_variables]^return bean.get ( field ) ;^653^^^^^650^657^return field.get ( bean ) ;^[CLASS] ClassUtil EnumTypeLocator  [METHOD] get [RETURN_TYPE] Object   Object bean Field field [VARIABLES] Field  enumMapTypeField  enumSetTypeField  field  EnumTypeLocator  instance  Object  bean  boolean  Exception  e  
[buglab_swap_variables]^if  ( f.equals ( expectedName.getName (  )  )  && f.getType (  )  == type )  {^665^^^^^660^686^if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( expectedName.equals ( type.getName (  )  )  && f.getType (  )  == f )  {^665^^^^^660^686^if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( f == null )  {^671^^^^^660^686^if  ( found == null )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( type.getType (  )  == f )  {^673^^^^^660^686^if  ( f.getType (  )  == type )  {^[CLASS] ClassUtil EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^enumSetTypeField = locateField ( EnumSet. "elementType", Class.class ) ;^628^^^^^624^630^enumSetTypeField = locateField ( EnumSet.class, "elementType", Class.class ) ;^[CLASS] EnumTypeLocator  [METHOD] <init> [RETURN_TYPE] ClassUtil$EnumTypeLocator()   [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  
[buglab_swap_variables]^enumMapTypeField = locateField ( EnumMap. "elementType", Class.class ) ;^629^^^^^624^630^enumMapTypeField = locateField ( EnumMap.class, "elementType", Class.class ) ;^[CLASS] EnumTypeLocator  [METHOD] <init> [RETURN_TYPE] ClassUtil$EnumTypeLocator()   [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( enumSetTypeField, set ) ;^636^^^^^633^639^return  ( Class<? extends Enum<?>> )  get ( set, enumSetTypeField ) ;^[CLASS] EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumSet<?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumSet  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get (  enumSetTypeField ) ;^636^^^^^633^639^return  ( Class<? extends Enum<?>> )  get ( set, enumSetTypeField ) ;^[CLASS] EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumSet<?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumSet  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( set ) ;^636^^^^^633^639^return  ( Class<? extends Enum<?>> )  get ( set, enumSetTypeField ) ;^[CLASS] EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumSet<?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumSet  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( enumMapTypeField, set ) ;^645^^^^^642^648^return  ( Class<? extends Enum<?>> )  get ( set, enumMapTypeField ) ;^[CLASS] EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumMap<?, ?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumMap  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get (  enumMapTypeField ) ;^645^^^^^642^648^return  ( Class<? extends Enum<?>> )  get ( set, enumMapTypeField ) ;^[CLASS] EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumMap<?, ?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumMap  set  
[buglab_swap_variables]^return  ( Class<? extends Enum<?>> )  get ( set ) ;^645^^^^^642^648^return  ( Class<? extends Enum<?>> )  get ( set, enumMapTypeField ) ;^[CLASS] EnumTypeLocator  [METHOD] enumTypeFor [RETURN_TYPE] Class   EnumMap<?, ?> set [VARIABLES] Field  enumMapTypeField  enumSetTypeField  EnumTypeLocator  instance  boolean  EnumMap  set  
[buglab_swap_variables]^return bean.get ( field ) ;^653^^^^^650^657^return field.get ( bean ) ;^[CLASS] EnumTypeLocator  [METHOD] get [RETURN_TYPE] Object   Object bean Field field [VARIABLES] Field  enumMapTypeField  enumSetTypeField  field  EnumTypeLocator  instance  Object  bean  boolean  Exception  e  
[buglab_swap_variables]^if  ( type.equals ( f.getName (  )  )  && f.getType (  )  == expectedName )  {^665^^^^^660^686^if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[CLASS] EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( expectedName.equals ( type.getName (  )  )  && f.getType (  )  == f )  {^665^^^^^660^686^if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[CLASS] EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( f.equals ( expectedName.getName (  )  )  && f.getType (  )  == type )  {^665^^^^^660^686^if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[CLASS] EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( f == null )  {^671^^^^^660^686^if  ( found == null )  {^[CLASS] EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( foundound == null )  {^671^^^^^660^686^if  ( found == null )  {^[CLASS] EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
[buglab_swap_variables]^if  ( type.getType (  )  == f )  {^673^^^^^660^686^if  ( f.getType (  )  == type )  {^[CLASS] EnumTypeLocator  [METHOD] locateField [RETURN_TYPE] Field   Class<?> fromClass String expectedName Class<?> type [VARIABLES] Field  enumMapTypeField  enumSetTypeField  f  field  found  boolean  EnumTypeLocator  instance  Throwable  t  Class  fromClass  type  String  expectedName  Field[]  fields  
