[BugLab_Variable_Misuse]^_t1 = _t2;^114^^^^^113^116^_t1 = t1;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^_t2 = _t2;^115^^^^^113^116^_t2 = t2;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^boolean hasPrefix =  ( transformed != null )  &&  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^boolean hasPrefix =  ( prefix != null )  ||  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^boolean hasPrefix =  ( prefix == null )  &&  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  < 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 1 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^boolean hasSuffix =  ( transformed != null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^boolean hasSuffix =  ( suffix != null )  ||  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^boolean hasSuffix =  ( suffix == null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  >= 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^boolean hasSuffix =  ( str != null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( hasSuffix )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( suffix.startsWith ( prefix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( transformed )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^if  ( prefix.startsWith ( transformed )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( str.endsWith ( transformed )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^if  ( suffix.endsWith ( str )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return str.substring ( 0, str.length (  )  - transformed.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^return suffix.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   |  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^return str.substring ( 1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   <<  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^return str.substring ( -1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   >  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^String str = suffix.substring ( prefix.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^String str = transformed.substring ( transformed.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^String str = prefix.substring ( transformed.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^String str = transformed.substring ( suffix.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   &  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   >>  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   <  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return str.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String name )  { return transformed + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String transformed )  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^public String transform ( String name )  { return suffix + name + prefix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^public String transform ( String suffix )  { return prefix + name + name; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  <  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  { return prefix  !=  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  &&  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  ==  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  >=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  ||  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( suffix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )    instanceof   suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^return str.substring ( 4, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   &&  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   ||  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( suffix.startsWith ( prefix )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^if  ( prefix.startsWith ( transformed )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return suffix.substring ( prefix.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return transformed.substring ( suffix.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^return prefix.substring ( transformed.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String name )  { return prefix + name + transformed; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  >  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  { return prefix  &&  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  >>  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  <=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  >  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String name )  { return transformed + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String transformed )  { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^public String transform ( String prefix )  { return name + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )   instanceof   { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  &&  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  |  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( suffix )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return transformed.substring ( transformed.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   >=  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return suffix.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  <<  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  { return prefix  &  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^return str.substring ( , str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   ^  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^public String transform ( String prefix )  { return name + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  |  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  { return prefix  <  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^return str.substring ( 2, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  |  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  !=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  ||  { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  ||  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  >  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( hasPrefix )  {^70^^^^^55^85^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( str.endsWith ( suffix )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^if  ( transformed.endsWith ( str )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^if  ( suffix.endsWith ( transformed )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return str.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, transformed.length (  )  - str.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^return suffix.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )    instanceof   suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   &  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return suffix.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String transformed )  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String name )  { return name + transformed; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Argument_Swapping]^public String transform ( String suffix )  { return name + name; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  <<  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  <  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  |  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   ||  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   <<  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   >  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Literal]^return transformed.substring ( , transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String transform ( String name )  &  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^public String toString (  ^  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   <=  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^return t2;^85^^^^^70^100^return NOP;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[BugLab_Variable_Misuse]^public String transform ( String name )  { return name + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^public String transform ( String name )  { return suffix + name + prefix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^public String transform ( String suffix )  { return prefix + name + name; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Wrong_Operator]^public String transform ( String name )  !=  { return prefix + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Wrong_Operator]^public String transform ( String name )  { return prefix  ||  name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Argument_Swapping]^if  ( suffix.endsWith ( str )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^return str.substring ( 0, str.length (  )  - transformed.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Argument_Swapping]^return suffix.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   &&  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Literal]^return str.substring ( -1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   ^  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   |  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Literal]^return str.substring ( 1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^String str = transformed.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Argument_Swapping]^String str = prefix.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^String str = str.substring ( prefix.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^String str = transformed.substring ( str.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^if  ( str.endsWith ( transformed )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   >  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   <  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Literal]^return str.substring ( , str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^if  ( str.startsWith ( prefix )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( str )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Argument_Swapping]^if  ( prefix.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[BugLab_Wrong_Operator]^public String toString (  >  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  <<  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  >>  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  &  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Argument_Swapping]^public String transform ( String prefix )  { return name + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Wrong_Operator]^public String transform ( String name )  <<  { return prefix + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^if  ( prefix.startsWith ( transformed )  )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Argument_Swapping]^return prefix.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Variable_Misuse]^return transformed.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^public String toString (  ==  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (   instanceof   )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Argument_Swapping]^public String transform ( String suffix )  { return name + name; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Wrong_Operator]^public String transform ( String name )  <=  { return name + suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^if  ( suffix.endsWith ( transformed )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Argument_Swapping]^return suffix.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )    instanceof   suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   !=  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   <  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   <<  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^public String toString (  <=  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  <  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^return new Chained ( _t2, t2 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^return new Chained ( t1, _t2 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Argument_Swapping]^return new Chained ( t2, t1 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^return t2.transform ( _t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Variable_Misuse]^return _t1.transform ( t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^return name.transform ( _t2.transform ( _t1 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^return _t2.transform ( _t1.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^return _t1.transform ( name.transform ( _t2 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Variable_Misuse]^transformed = t1.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Argument_Swapping]^transformed = transformed.reverse ( _t1 ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Variable_Misuse]^transformed = t2.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^if  ( transformed == null )  {^126^^^^^124^130^if  ( transformed != null )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Variable_Misuse]^transformed = t1.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Argument_Swapping]^transformed = transformed.reverse ( _t2 ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Variable_Misuse]^transformed = t2.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^public String toString (  <=  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  !=  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  ^  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[BugLab_Argument_Swapping]^public String transform ( String name )  { return suffix + name + prefix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Argument_Swapping]^public String transform ( String prefix )  { return name + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Wrong_Operator]^public String transform ( String name )  !=  { return prefix + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Wrong_Operator]^public String transform ( String name )  { return prefix  >=  name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^if  ( str.endsWith ( transformed )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Argument_Swapping]^if  ( suffix.endsWith ( str )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^return str.substring ( 0, str.length (  )  - transformed.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Argument_Swapping]^return suffix.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   &  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   <<  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Argument_Swapping]^String str = prefix.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^String str = transformed.substring ( str.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^String str = transformed.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   >  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   <  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Operator]^return str.substring ( 0, str.length (  )   >=  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Literal]^return str.substring ( -1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^if  ( str.startsWith ( prefix )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^if  ( transformed.startsWith ( str )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Argument_Swapping]^if  ( prefix.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Variable_Misuse]^String str = str.substring ( prefix.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Literal]^return str.substring ( null, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[BugLab_Wrong_Operator]^public String toString (  <  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^public String toString (   instanceof   )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^public String toString (  &&  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Argument_Swapping]^public String transform ( String prefix )  { return name + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] 3  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Wrong_Operator]^public String transform ( String name )  >  { return prefix + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] 3  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Argument_Swapping]^if  ( prefix.startsWith ( transformed )  )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Argument_Swapping]^return prefix.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Variable_Misuse]^return transformed.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Wrong_Operator]^public String toString (  ||  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] 3  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^public String toString (  >=  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] 3  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Argument_Swapping]^public String transform ( String suffix )  { return name + name; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] 4  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Wrong_Operator]^public String transform ( String name )   instanceof   { return name + suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] 4  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[BugLab_Argument_Swapping]^if  ( suffix.endsWith ( transformed )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Argument_Swapping]^return suffix.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   <<  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Wrong_Literal]^return transformed.substring ( 1, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   ^  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Variable_Misuse]^return transformed.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Wrong_Operator]^return transformed.substring ( 0, transformed.length (  )   ==  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[BugLab_Wrong_Operator]^public String toString (  &  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] 4  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Wrong_Operator]^public String toString (  ^  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] 4  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[BugLab_Variable_Misuse]^_t1 = t2;^114^^^^^113^116^_t1 = t1;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^_t2 = t1;^115^^^^^113^116^_t2 = t2;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[BugLab_Variable_Misuse]^return t2.transform ( _t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Variable_Misuse]^return _t1.transform ( t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^return name.transform ( _t2.transform ( _t1 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^return _t2.transform ( _t1.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Argument_Swapping]^return _t1.transform ( name.transform ( _t2 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[BugLab_Variable_Misuse]^transformed = t2.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Argument_Swapping]^transformed = transformed.reverse ( _t1 ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^if  ( transformed == null )  {^126^^^^^124^130^if  ( transformed != null )  {^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Variable_Misuse]^transformed = t2.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Argument_Swapping]^transformed = transformed.reverse ( _t2 ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[BugLab_Wrong_Operator]^public String toString (  &&  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  <=  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[BugLab_Wrong_Operator]^public String toString (  &  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
