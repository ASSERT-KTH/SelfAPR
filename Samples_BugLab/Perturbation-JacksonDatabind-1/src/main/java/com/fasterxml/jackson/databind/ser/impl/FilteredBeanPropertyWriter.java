[buglab_swap_variables]^if  ( viewsToIncludeIn == 1 )  {^17^^^^^15^21^if  ( viewsToIncludeIn.length == 1 )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView ( viewsToIncludeIn, base[0] ) ;^18^^^^^15^21^return new SingleView ( base, viewsToIncludeIn[0] ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView (  viewsToIncludeIn[0] ) ;^18^^^^^15^21^return new SingleView ( base, viewsToIncludeIn[0] ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView ( base[0] ) ;^18^^^^^15^21^return new SingleView ( base, viewsToIncludeIn[0] ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView ( viewsToIncludeIn, base ) ;^20^^^^^15^21^return new MultiView ( base, viewsToIncludeIn ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView (  viewsToIncludeIn ) ;^20^^^^^15^21^return new MultiView ( base, viewsToIncludeIn ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView ( base ) ;^20^^^^^15^21^return new MultiView ( base, viewsToIncludeIn ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] constructViewBased [RETURN_TYPE] BeanPropertyWriter   BeanPropertyWriter base Class<?>[] viewsToIncludeIn [VARIABLES] Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView ( _delegate.rename ( _view ) , transformer ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView ( _view.rename ( transformer ) , _delegate ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView ( _delegate.rename ( transformer )  ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new SingleView ( transformer.rename ( _delegate ) , _view ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^if  ( _view == null || activeView.isAssignableFrom ( activeView )  )  {^63^^^^^59^66^if  ( activeView == null || _view.isAssignableFrom ( activeView )  )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( prov, jgen, bean ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsField (  jgen, prov ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( jgen, bean, prov ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( bean,  prov ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( bean, jgen ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^if  ( _view == null || activeView.isAssignableFrom ( activeView )  )  {^73^^^^^69^78^if  ( activeView == null || _view.isAssignableFrom ( activeView )  )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder (  jgen, prov ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( jgen, bean, prov ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean,  prov ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( prov, jgen, bean ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, jgen ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( jgen, bean, prov ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn (  jgen, prov ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean, prov, jgen ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean,  prov ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( prov, jgen, bean ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean, jgen ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, prov, jgen ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView ( transformer.rename ( _delegate ) , _views ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  activeView  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView ( _views.rename ( transformer ) , _delegate ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  activeView  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView ( _delegate.rename ( _views ) , transformer ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  activeView  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^return new MultiView ( _delegate.rename ( transformer )  ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  activeView  view  Class[]  _views  views  viewsToIncludeIn  boolean  BeanPropertyWriter  _delegate  base  delegate  
[buglab_swap_variables]^if  ( activeView[i].isAssignableFrom ( _views )  )  break;^117^^^^^110^125^if  ( _views[i].isAssignableFrom ( activeView )  )  break;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^if  ( len == i )  {^120^^^^^110^125^if  ( i == len )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^for  ( ; len < i; ++i )  {^116^^^^^110^125^for  ( ; i < len; ++i )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views;^115^^^^^110^125^int i = 0, len = _views.length;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views.length.length;^115^^^^^110^125^int i = 0, len = _views.length;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( prov, jgen, bean ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField (  jgen, prov ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( bean, prov, jgen ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( bean,  prov ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( bean, jgen ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( jgen, bean, prov ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder (  jgen, prov ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean,  prov ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, jgen ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^for  ( ; len < i; ++i )  {^134^^^^^128^144^for  ( ; i < len; ++i )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^if  ( activeView[i].isAssignableFrom ( _views )  )  break;^135^^^^^128^144^if  ( _views[i].isAssignableFrom ( activeView )  )  break;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views;^133^^^^^128^144^int i = 0, len = _views.length;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views.length.length;^133^^^^^128^144^int i = 0, len = _views.length;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( prov, jgen, bean ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^if  ( len == i )  {^138^^^^^128^144^if  ( i == len )  {^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, prov, jgen ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn ( prov, jgen, bean ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn (  jgen, prov ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean,  prov ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean, jgen ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] FilteredBeanPropertyWriter SingleView MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  viewsToIncludeIn  boolean  JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  SerializerProvider  prov  BeanPropertyWriter  _delegate  base  delegate  int  i  len  
[buglab_swap_variables]^return new SingleView ( _delegate.rename ( _view ) , transformer ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] SingleView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new SingleView ( _view.rename ( transformer ) , _delegate ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] SingleView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new SingleView ( _delegate.rename ( transformer )  ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] SingleView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new SingleView ( transformer.rename ( _delegate ) , _view ) ;^45^^^^^44^46^return new SingleView ( _delegate.rename ( transformer ) , _view ) ;^[CLASS] SingleView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$SingleView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class  _view  view  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^if  ( _view == null || activeView.isAssignableFrom ( activeView )  )  {^63^^^^^59^66^if  ( activeView == null || _view.isAssignableFrom ( activeView )  )  {^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( jgen, bean, prov ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsField (  jgen, prov ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( bean,  prov ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( prov, jgen, bean ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( bean, jgen ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsField ( bean, prov, jgen ) ;^64^^^^^59^66^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder (  jgen, prov ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean,  prov ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, jgen ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( prov, jgen, bean ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn (  jgen, prov ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean,  prov ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean, jgen ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^if  ( _view == null || activeView.isAssignableFrom ( activeView )  )  {^73^^^^^69^78^if  ( activeView == null || _view.isAssignableFrom ( activeView )  )  {^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( jgen, bean, prov ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean, prov, jgen ) ;^74^^^^^69^78^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( jgen, bean, prov ) ;^76^^^^^69^78^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] SingleView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] JsonGenerator  jgen  Class  _view  activeView  view  Object  bean  boolean  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new MultiView ( transformer.rename ( _delegate ) , _views ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class[]  _views  views  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new MultiView ( _views.rename ( transformer ) , _delegate ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class[]  _views  views  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new MultiView ( _delegate.rename ( transformer )  ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class[]  _views  views  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^return new MultiView ( _delegate.rename ( _views ) , transformer ) ;^96^^^^^95^97^return new MultiView ( _delegate.rename ( transformer ) , _views ) ;^[CLASS] MultiView  [METHOD] rename [RETURN_TYPE] FilteredBeanPropertyWriter$MultiView   NameTransformer transformer [VARIABLES] NameTransformer  transformer  Class[]  _views  views  boolean  BeanPropertyWriter  _delegate  delegate  
[buglab_swap_variables]^if  ( activeView[i].isAssignableFrom ( _views )  )  break;^117^^^^^110^125^if  ( _views[i].isAssignableFrom ( activeView )  )  break;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^if  ( len == i )  {^120^^^^^110^125^if  ( i == len )  {^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^for  ( ; len < i; ++i )  {^116^^^^^110^125^for  ( ; i < len; ++i )  {^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views;^115^^^^^110^125^int i = 0, len = _views.length;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views.length.length;^115^^^^^110^125^int i = 0, len = _views.length;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField (  jgen, prov ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( jgen, bean, prov ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( bean,  prov ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( prov, jgen, bean ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsField ( bean, jgen ) ;^124^^^^^110^125^_delegate.serializeAsField ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsField [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^if  ( activeView[i].isAssignableFrom ( _views )  )  break;^135^^^^^128^144^if  ( _views[i].isAssignableFrom ( activeView )  )  break;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^if  ( len == i )  {^138^^^^^128^144^if  ( i == len )  {^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( prov, jgen, bean ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder (  jgen, prov ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, prov, jgen ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean,  prov ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( bean, jgen ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^for  ( ; len < i; ++i )  {^134^^^^^128^144^for  ( ; i < len; ++i )  {^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views;^133^^^^^128^144^int i = 0, len = _views.length;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^int i = 0, len = _views.length.length;^133^^^^^128^144^int i = 0, len = _views.length;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsPlaceholder ( jgen, bean, prov ) ;^139^^^^^128^144^_delegate.serializeAsPlaceholder ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn ( jgen, bean, prov ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn (  jgen, prov ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean,  prov ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
[buglab_swap_variables]^_delegate.serializeAsColumn ( bean, jgen ) ;^143^^^^^128^144^_delegate.serializeAsColumn ( bean, jgen, prov ) ;^[CLASS] MultiView  [METHOD] serializeAsColumn [RETURN_TYPE] void   Object bean JsonGenerator jgen SerializerProvider prov [VARIABLES] Class[]  _views  views  boolean  JsonGenerator  jgen  Object  bean  Class  activeView  SerializerProvider  prov  BeanPropertyWriter  _delegate  delegate  int  i  len  
