[BugLab_Argument_Swapping]^super ( typeFactory, baseType ) ;^25^^^^^23^35^super ( baseType, typeFactory ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Variable_Misuse]^int ix = _basePackagePrefix.lastIndexOf ( '.' ) ;^27^^^^^23^35^int ix = base.lastIndexOf ( '.' ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Operator]^if  ( ix == 0 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^if  ( ix < -1 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^if  ( ix < ix )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^if  ( ix < 1 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Variable_Misuse]^_basePackagePrefix = _basePackagePrefix.substring ( 0, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Argument_Swapping]^_basePackagePrefix = ix.substring ( 0, base+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^_basePackagePrefix = base.substring ( 0, ix+ix ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Variable_Misuse]^_basePackageName = _basePackagePrefix.substring ( 0, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Argument_Swapping]^_basePackageName = ix.substring ( 0, base ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^_basePackageName = base.substring ( -1, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^_basePackagePrefix = base.substring ( ix, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^_basePackagePrefix = base.substring ( 0, ix+ ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^_basePackagePrefix = base.substring ( 0, ix+2 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Wrong_Literal]^_basePackageName = base.substring ( 1, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[BugLab_Variable_Misuse]^if  ( base.startsWith ( _basePackagePrefix )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Variable_Misuse]^if  ( n.startsWith ( base )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Argument_Swapping]^if  ( _basePackagePrefix.startsWith ( n )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Variable_Misuse]^return n.substring ( base.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Argument_Swapping]^return _basePackagePrefix.substring ( n.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Wrong_Literal]^return n.substring ( _basePackagePrefix.length (  ) -0 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Variable_Misuse]^return base.substring ( _basePackagePrefix.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Variable_Misuse]^return n.substring ( n.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Wrong_Literal]^return n.substring ( _basePackagePrefix.length (  ) -2 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Variable_Misuse]^return base;^48^^^^^41^49^return n;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[BugLab_Variable_Misuse]^if  ( n.startsWith ( "." )  )  {^54^^^^^52^66^if  ( id.startsWith ( "." )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^if   ( n.length (  )  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Operator]^if   ( _basePackageName.length (  )  > 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Literal]^if   ( _basePackageName.length (  )  == -1 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^sb.append ( _basePackageName ) .append ( n ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^sb.append ( n ) .append ( id ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Argument_Swapping]^sb.append ( id ) .append ( _basePackageName ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^sb.append ( id ) .append ( id ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^sb.append ( base.substring ( 1 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^sb.append ( n.substring ( 1 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Literal]^sb.append ( id.substring ( 0 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^StringBuilder sb = new StringBuilder ( n.length (  )  + _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^StringBuilder sb = new StringBuilder ( id.length (  )  + n.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Argument_Swapping]^StringBuilder sb = new StringBuilder ( _basePackageName.length (  )  + id.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   >>  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   >=  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^StringBuilder sb = new StringBuilder ( id.length (  )  + id.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^if   ( id.length (  )  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Operator]^if   ( _basePackageName.length (  )  >= 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Literal]^if   ( _basePackageName.length (  )  == 1 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Literal]^sb.append ( id.substring ( 2 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   ^  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Wrong_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   ==  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[BugLab_Variable_Misuse]^if  ( base.startsWith ( "." )  )  {^54^^^^^52^66^if  ( id.startsWith ( "." )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
