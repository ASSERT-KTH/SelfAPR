[BugLab_Wrong_Literal]^public AtomicBooleanSerializer (  )  { super ( AtomicBoolean.class, true ) ; }^69^^^^^64^74^public AtomicBooleanSerializer (  )  { super ( AtomicBoolean.class, false ) ; }^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicBooleanSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public AtomicIntegerSerializer (  )  { super ( AtomicInteger.class, true ) ; }^95^^^^^90^100^public AtomicIntegerSerializer (  )  { super ( AtomicInteger.class, false ) ; }^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicIntegerSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public AtomicLongSerializer (  )  { super ( AtomicLong.class, true ) ; }^124^^^^^119^129^public AtomicLongSerializer (  )  { super ( AtomicLong.class, false ) ; }^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicLongSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public AtomicReferenceSerializer (  )  { super ( AtomicReference.class, true ) ; }^153^^^^^148^158^public AtomicReferenceSerializer (  )  { super ( AtomicReference.class, false ) ; }^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicReferenceSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^public ClassSerializer (  )  { super ( Class.class, true ) ; }^219^^^^^214^224^public ClassSerializer (  )  { super ( Class.class, false ) ; }^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$ClassSerializer()   [VARIABLES] boolean  
[BugLab_Variable_Misuse]^sers.put ( AtomicLong.class, AtomicLongSerializer.0 ) ;^48^^^^^33^63^sers.put ( AtomicLong.class, AtomicLongSerializer.class ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] all [RETURN_TYPE] Collection   [VARIABLES] boolean  HashMap  sers  ToStringSerializer  sls  
[BugLab_Wrong_Literal]^return createSchemaNode ( "boolean", false ) ;^81^^^^^79^82^return createSchemaNode ( "boolean", true ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Wrong_Literal]^return createSchemaNode ( "integer", false ) ;^107^^^^^105^108^return createSchemaNode ( "integer", true ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Argument_Swapping]^JsonIntegerFormatVisitor v2 = typeHint.expectIntegerFormat ( visitor ) ;^114^^^^^111^118^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Operator]^if  ( v2 == null )  {^115^^^^^111^118^if  ( v2 != null )  {^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Literal]^return createSchemaNode ( "integer", false ) ;^136^^^^^134^137^return createSchemaNode ( "integer", true ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Argument_Swapping]^JsonIntegerFormatVisitor v2 = typeHint.expectIntegerFormat ( visitor ) ;^143^^^^^140^147^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Operator]^if  ( v2 == null )  {^144^^^^^140^147^if  ( v2 != null )  {^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Literal]^return createSchemaNode ( "any", false ) ;^165^^^^^163^166^return createSchemaNode ( "any", true ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Wrong_Literal]^return createSchemaNode ( "string", false ) ;^201^^^^^199^202^return createSchemaNode ( "string", true ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Variable_Misuse]^jgen.writeString ( 4.getName (  )  ) ;^225^^^^^222^226^jgen.writeString ( value.getName (  )  ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] serialize [RETURN_TYPE] void   Class<?> value JsonGenerator jgen SerializerProvider provider [VARIABLES] boolean  JsonGenerator  jgen  Class  value  SerializerProvider  provider  
[BugLab_Wrong_Literal]^return createSchemaNode ( "string", false ) ;^231^^^^^229^232^return createSchemaNode ( "string", true ) ;^[CLASS] StdJdkSerializers AtomicBooleanSerializer AtomicIntegerSerializer AtomicLongSerializer AtomicReferenceSerializer FileSerializer ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Wrong_Literal]^public AtomicBooleanSerializer (  )  { super ( AtomicBoolean.class, true ) ; }^69^^^^^64^74^public AtomicBooleanSerializer (  )  { super ( AtomicBoolean.class, false ) ; }^[CLASS] AtomicBooleanSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicBooleanSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return createSchemaNode ( "boolean", false ) ;^81^^^^^79^82^return createSchemaNode ( "boolean", true ) ;^[CLASS] AtomicBooleanSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Wrong_Literal]^public AtomicIntegerSerializer (  )  { super ( AtomicInteger.class, true ) ; }^95^^^^^90^100^public AtomicIntegerSerializer (  )  { super ( AtomicInteger.class, false ) ; }^[CLASS] AtomicIntegerSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicIntegerSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return createSchemaNode ( "integer", false ) ;^107^^^^^105^108^return createSchemaNode ( "integer", true ) ;^[CLASS] AtomicIntegerSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Argument_Swapping]^JsonIntegerFormatVisitor v2 = typeHint.expectIntegerFormat ( visitor ) ;^114^^^^^111^118^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] AtomicIntegerSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Operator]^if  ( v2 == null )  {^115^^^^^111^118^if  ( v2 != null )  {^[CLASS] AtomicIntegerSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Literal]^public AtomicLongSerializer (  )  { super ( AtomicLong.class, true ) ; }^124^^^^^119^129^public AtomicLongSerializer (  )  { super ( AtomicLong.class, false ) ; }^[CLASS] AtomicLongSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicLongSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return createSchemaNode ( "integer", false ) ;^136^^^^^134^137^return createSchemaNode ( "integer", true ) ;^[CLASS] AtomicLongSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Argument_Swapping]^JsonIntegerFormatVisitor v2 = typeHint.expectIntegerFormat ( visitor ) ;^143^^^^^140^147^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] AtomicLongSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Operator]^if  ( v2 == null )  {^144^^^^^140^147^if  ( v2 != null )  {^[CLASS] AtomicLongSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  JsonIntegerFormatVisitor  v2  
[BugLab_Wrong_Literal]^public AtomicReferenceSerializer (  )  { super ( AtomicReference.class, true ) ; }^153^^^^^148^158^public AtomicReferenceSerializer (  )  { super ( AtomicReference.class, false ) ; }^[CLASS] AtomicReferenceSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$AtomicReferenceSerializer()   [VARIABLES] boolean  
[BugLab_Variable_Misuse]^provider.defaultSerializeValue ( 4.get (  ) , jgen ) ;^159^^^^^156^160^provider.defaultSerializeValue ( value.get (  ) , jgen ) ;^[CLASS] AtomicReferenceSerializer  [METHOD] serialize [RETURN_TYPE] void   AtomicReference<?> value JsonGenerator jgen SerializerProvider provider [VARIABLES] boolean  JsonGenerator  jgen  AtomicReference  value  SerializerProvider  provider  
[BugLab_Argument_Swapping]^provider.defaultSerializeValue ( jgen.get (  ) , value ) ;^159^^^^^156^160^provider.defaultSerializeValue ( value.get (  ) , jgen ) ;^[CLASS] AtomicReferenceSerializer  [METHOD] serialize [RETURN_TYPE] void   AtomicReference<?> value JsonGenerator jgen SerializerProvider provider [VARIABLES] boolean  JsonGenerator  jgen  AtomicReference  value  SerializerProvider  provider  
[BugLab_Wrong_Literal]^return createSchemaNode ( "any", false ) ;^165^^^^^163^166^return createSchemaNode ( "any", true ) ;^[CLASS] AtomicReferenceSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Wrong_Literal]^return createSchemaNode ( "string", false ) ;^201^^^^^199^202^return createSchemaNode ( "string", true ) ;^[CLASS] FileSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[BugLab_Wrong_Literal]^public ClassSerializer (  )  { super ( Class.class, true ) ; }^219^^^^^214^224^public ClassSerializer (  )  { super ( Class.class, false ) ; }^[CLASS] ClassSerializer  [METHOD] <init> [RETURN_TYPE] StdJdkSerializers$ClassSerializer()   [VARIABLES] boolean  
[BugLab_Wrong_Literal]^return createSchemaNode ( "string", false ) ;^231^^^^^229^232^return createSchemaNode ( "string", true ) ;^[CLASS] ClassSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
