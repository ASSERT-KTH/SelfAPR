[buglab_swap_variables]^if  ( len >= ptr )  {^79^^^^^64^94^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( ch, b64variant, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 (  ch, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant,  0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^if  ( len >= ptr )  {^89^^^^^74^104^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( ch, b64variant, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 (  ch, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant,  1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^if  ( len >= ptr )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^if  ( Base64Variant.BASE64_VALUE_PADDING != bits )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( ch, b64variant, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 (  ch, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant,  2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^if  ( len >= ptr )  {^118^^^^^103^133^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( ch, b64variant, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 (  ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant,  3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^if  ( len >= ptr )  {^133^^^^^118^148^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^decodedData =  ( bits << 6 )  | decodedData;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^if  ( Base64Variant.BASE64_VALUE_PADDING != bits )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( ch, b64variant, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 (  ch, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant,  3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^bits = ch.decodeBase64Char ( b64variant ) ;^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^decodedData =  ( bits << 6 )  | decodedData;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^bits = ch.decodeBase64Char ( b64variant ) ;^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^decodedData =  ( bits << 6 )  | decodedData;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^bits = ch.decodeBase64Char ( b64variant ) ;^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^decodedData =  ( bits << 6 )  | decodedData;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^int bits = ch.decodeBase64Char ( b64variant ) ;^83^^^^^68^98^int bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[buglab_swap_variables]^return NumberInput.parseAsInt ( defaultValue, _value ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^return NumberInput.parseAsInt ( _value ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^return NumberInput.parseAsInt (  defaultValue ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^return NumberInput.parseAsLong ( defaultValue, _value ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[buglab_swap_variables]^return NumberInput.parseAsLong ( _value ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[buglab_swap_variables]^return NumberInput.parseAsLong (  defaultValue ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[buglab_swap_variables]^return NumberInput.parseAsDouble ( defaultValue, _value ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[buglab_swap_variables]^return NumberInput.parseAsDouble ( _value ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[buglab_swap_variables]^return NumberInput.parseAsDouble (  defaultValue ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[buglab_swap_variables]^appendQuoted ( _value, sb ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^appendQuoted (  _value ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^appendQuoted ( sb ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^CharTypes.appendQuoted ( content, sb ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^CharTypes.appendQuoted (  content ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^CharTypes.appendQuoted ( sb ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( ch, b64variant, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 (  ch, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant,  bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( bindex, ch, b64variant, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^_reportInvalidBase64 ( b64variant, ch,  null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^if  ( INT_SPACE <= ch )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^} else if  ( ch.usesPaddingChar ( b64variant )  )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^base = "Illegal white space bindexaracter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( ch+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[buglab_swap_variables]^base = msg + ": " + base;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
