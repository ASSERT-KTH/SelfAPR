[buglab_swap_variables]^return jp.deserializeTypedFromArray ( typeDeserializer, ctxt ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return typeDeserializer.deserializeTypedFromArray (  ctxt ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return ctxt.deserializeTypedFromArray ( jp, typeDeserializer ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return typeDeserializer.deserializeTypedFromArray ( jp ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return typeDeserializer.deserializeTypedFromArray ( ctxt, jp ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^System.arraycopy ( offset, buffer, result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy (  offset, result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, len, result, 0, offset ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer,  result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( result, offset, buffer, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, offset,  0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, offset, result, 0 ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, offset, len, 0, result ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^throw JsonMappingException.from (  "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^if  ( JsonToken.VALUE_STRING != t )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^boolean value = _parseBooleanPrimitive ( ctxt, jp ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^boolean value = _parseBooleanPrimitive (  ctxt ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^boolean value = _parseBooleanPrimitive ( jp ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new boolean[] { _parseBooleanPrimitive ( ctxt, jp )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new boolean[] { _parseBooleanPrimitive (  ctxt )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new boolean[] { _parseBooleanPrimitive ( jp )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_STRING == t )  {^205^^^^^190^220^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ctxt.getBinaryValue ( jp.getBase64Variant (  )  ) ;^206^^^^^191^221^return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_EMBEDDED_OBJECT == t )  {^209^^^^^194^224^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^while  (  ( t = JsonToken.END_ARRAY.nextToken (  )  )  != jp )  {^223^^^^^208^238^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NULL != t )  {^231^^^^^226^235^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NULL != t )  {^231^^^^^216^246^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NULL != t )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^short value = _parseShortPrimitive ( ctxt, jp ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^short value = _parseShortPrimitive (  ctxt ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^short value = _parseShortPrimitive ( jp ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new short[] { _parseShortPrimitive ( ctxt, jp )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new short[] { _parseShortPrimitive (  ctxt )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new short[] { _parseShortPrimitive ( jp )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^int value = _parseIntPrimitive ( ctxt, jp ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^int value = _parseIntPrimitive (  ctxt ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^int value = _parseIntPrimitive ( jp ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new int[] { _parseIntPrimitive ( ctxt, jp )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new int[] { _parseIntPrimitive (  ctxt )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new int[] { _parseIntPrimitive ( jp )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^long value = _parseLongPrimitive ( ctxt, jp ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^long value = _parseLongPrimitive (  ctxt ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^long value = _parseLongPrimitive ( jp ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new long[] { _parseLongPrimitive ( ctxt, jp )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new long[] { _parseLongPrimitive (  ctxt )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new long[] { _parseLongPrimitive ( jp )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^float value = _parseFloatPrimitive ( ctxt, jp ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^float value = _parseFloatPrimitive (  ctxt ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^float value = _parseFloatPrimitive ( jp ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new float[] { _parseFloatPrimitive ( ctxt, jp )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new float[] { _parseFloatPrimitive (  ctxt )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new float[] { _parseFloatPrimitive ( jp )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^487^^^^^477^496^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^double value = _parseDoublePrimitive ( ctxt, jp ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^double value = _parseDoublePrimitive (  ctxt ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^double value = _parseDoublePrimitive ( jp ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new double[] { _parseDoublePrimitive ( ctxt, jp )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new double[] { _parseDoublePrimitive (  ctxt )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new double[] { _parseDoublePrimitive ( jp )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^System.arraycopy ( len, offset, result, 0, buffer ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy (  offset, result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, len, result, 0, offset ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer,  result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( result, offset, buffer, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, offset,  0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^System.arraycopy ( buffer, offset, result, 0 ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^while  (  ( JsonToken.END_ARRAY = jp.nextToken (  )  )  != t )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^if  ( JsonToken.VALUE_STRING != t )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^throw JsonMappingException.from (  "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^while  (  ( jp = t.nextToken (  )  )  != JsonToken.END_ARRAY )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^if  ( JsonToken.VALUE_EMBEDDED_OBJECT == t )  {^113^^^^^98^128^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^boolean value = _parseBooleanPrimitive ( ctxt, jp ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^boolean value = _parseBooleanPrimitive (  ctxt ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^boolean value = _parseBooleanPrimitive ( jp ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new boolean[] { _parseBooleanPrimitive ( ctxt, jp )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new boolean[] { _parseBooleanPrimitive (  ctxt )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new boolean[] { _parseBooleanPrimitive ( jp )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_STRING == t )  {^205^^^^^190^220^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ctxt.getBinaryValue ( jp.getBase64Variant (  )  ) ;^206^^^^^191^221^return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^while  (  ( JsonToken.END_ARRAY = jp.nextToken (  )  )  != t )  {^223^^^^^208^238^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( t == JsonToken.VALUE_NUMBER_FLOAT || t == JsonToken.VALUE_NUMBER_INT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NULL != t )  {^231^^^^^216^246^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NUMBER_INT == t || t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NULL != t )  {^231^^^^^226^235^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[buglab_swap_variables]^if  ( t == JsonToken.VALUE_NUMBER_FLOAT || t == JsonToken.VALUE_NUMBER_INT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[buglab_swap_variables]^if  ( JsonToken.VALUE_NULL != t )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^short value = _parseShortPrimitive ( ctxt, jp ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^short value = _parseShortPrimitive (  ctxt ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^short value = _parseShortPrimitive ( jp ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new short[] { _parseShortPrimitive ( ctxt, jp )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new short[] { _parseShortPrimitive (  ctxt )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new short[] { _parseShortPrimitive ( jp )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^int value = _parseIntPrimitive ( ctxt, jp ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^int value = _parseIntPrimitive (  ctxt ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^int value = _parseIntPrimitive ( jp ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new int[] { _parseIntPrimitive ( ctxt, jp )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new int[] { _parseIntPrimitive (  ctxt )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new int[] { _parseIntPrimitive ( jp )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^long value = _parseLongPrimitive ( ctxt, jp ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^long value = _parseLongPrimitive (  ctxt ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^long value = _parseLongPrimitive ( jp ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new long[] { _parseLongPrimitive ( ctxt, jp )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new long[] { _parseLongPrimitive (  ctxt )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return new long[] { _parseLongPrimitive ( jp )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^float value = _parseFloatPrimitive ( ctxt, jp ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^float value = _parseFloatPrimitive (  ctxt ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^float value = _parseFloatPrimitive ( jp ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return ix.completeAndClearBuffer ( chunk, builder ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new float[] { _parseFloatPrimitive ( ctxt, jp )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new float[] { _parseFloatPrimitive (  ctxt )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new float[] { _parseFloatPrimitive ( jp )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( ctxt, jp ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray (  ctxt ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return handleNonArray ( jp ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^487^^^^^477^496^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk.length >= ix )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( ix >= chunk.length.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk (  ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^chunk = builder.appendCompletedChunk ( chunk ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^double value = _parseDoublePrimitive ( ctxt, jp ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^double value = _parseDoublePrimitive (  ctxt ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^double value = _parseDoublePrimitive ( jp ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  ( chunk >= ix.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return chunk.completeAndClearBuffer ( builder, ix ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer (  ix ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( ix, chunk ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^return builder.completeAndClearBuffer ( chunk ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[buglab_swap_variables]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new double[] { _parseDoublePrimitive ( ctxt, jp )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new double[] { _parseDoublePrimitive (  ctxt )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[buglab_swap_variables]^return new double[] { _parseDoublePrimitive ( jp )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
