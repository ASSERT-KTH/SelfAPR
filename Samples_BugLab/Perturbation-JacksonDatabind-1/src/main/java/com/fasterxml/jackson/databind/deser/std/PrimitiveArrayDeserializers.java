[BugLab_Wrong_Operator]^if  ( rawType != Integer.TYPE )  {^25^^^^^23^51^if  ( rawType == Integer.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType != Long.TYPE )  {^28^^^^^23^51^if  ( rawType == Long.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( 4 == Byte.TYPE )  {^32^^^^^23^51^if  ( rawType == Byte.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType != Byte.TYPE )  {^32^^^^^23^51^if  ( rawType == Byte.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType > Short.TYPE )  {^35^^^^^23^51^if  ( rawType == Short.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType > Float.TYPE )  {^38^^^^^23^51^if  ( rawType == Float.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType != Double.TYPE )  {^41^^^^^23^51^if  ( rawType == Double.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType != Boolean.TYPE )  {^44^^^^^23^51^if  ( rawType == Boolean.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( rawType <= Character.TYPE )  {^47^^^^^23^51^if  ( rawType == Character.TYPE )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] forType [RETURN_TYPE] JsonDeserializer   Class<?> rawType [VARIABLES] LongDeser  instance  Class  rawType  IntDeser  instance  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^return ctxt.deserializeTypedFromArray ( jp, typeDeserializer ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return jp.deserializeTypedFromArray ( typeDeserializer, ctxt ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return typeDeserializer.deserializeTypedFromArray ( ctxt, jp ) ;^61^^^^^54^62^return typeDeserializer.deserializeTypedFromArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserializeWithType [RETURN_TYPE] Object   JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  TypeDeserializer  typeDeserializer  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t != JsonToken.VALUE_STRING )  {^87^^^^^72^102^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^return buffer;^95^^^^^80^110^return result;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^System.arraycopy ( result, offset, buffer, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^System.arraycopy ( buffer, len, result, 0, offset ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^System.arraycopy ( buffer, offset, result, -1, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, offset, buffer, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^System.arraycopy ( len, offset, result, 0, buffer ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  >= JsonToken.END_ARRAY )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_STRING != t )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_STRING )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( str.length (  )  <= 1 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  |  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ==  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  >=  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ^  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  !=  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  >>  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  <=  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt ( len )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^while  (  ( t = JsonToken.END_ARRAY.nextToken (  )  )  != jp )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  < JsonToken.END_ARRAY )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  > JsonToken.END_ARRAY )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_STRING )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( str.length (  )  < 1 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^if  ( str.length (  )  != 0 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  <  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt ( 1 )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( str.length (  )  >= 1 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  &&  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^StringBuilder sb = new StringBuilder ( 63 ) ;^99^^^^^84^114^StringBuilder sb = new StringBuilder ( 64 ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  <<  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt ( offset )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^if  ( str.length (  )  != len )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^StringBuilder sb = new StringBuilder ( len ) ;^99^^^^^84^114^StringBuilder sb = new StringBuilder ( 64 ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  >  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_EMBEDDED_OBJECT == t )  {^113^^^^^98^128^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_EMBEDDED_OBJECT )  {^113^^^^^98^128^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t < JsonToken.VALUE_EMBEDDED_OBJECT )  {^113^^^^^98^128^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob != null )  return null;^115^^^^^100^130^if  ( ob == null )  return null;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  !=  char[] )  {^116^^^^^101^131^if  ( ob instanceof char[] )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  ^  String )  {^119^^^^^104^134^if  ( ob instanceof String )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  ||  byte[] )  {^123^^^^^108^138^if  ( ob instanceof byte[] )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, true ) .toCharArray (  ) ;^124^^^^^109^139^return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, false ) .toCharArray (  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  ==  char[] )  {^116^^^^^101^131^if  ( ob instanceof char[] )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  >=  String )  {^119^^^^^104^134^if  ( ob instanceof String )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  >>  byte[] )  {^123^^^^^108^138^if  ( ob instanceof byte[] )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = 1;^155^^^^^147^167^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  <= JsonToken.END_ARRAY )  {^157^^^^^147^167^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( ix >= ix )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix < chunk.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^162^^^^^147^167^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^boolean value = _parseBooleanPrimitive ( ctxt, jp ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix == chunk.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^162^^^^^147^167^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  > JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^175^^^^^169^183^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new boolean[] { _parseBooleanPrimitive ( ctxt, jp )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t != JsonToken.VALUE_STRING )  {^205^^^^^190^220^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ctxt.getBinaryValue ( jp.getBase64Variant (  )  ) ;^206^^^^^191^221^return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t != JsonToken.VALUE_EMBEDDED_OBJECT )  {^209^^^^^194^224^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ob != null )  return null;^211^^^^^196^226^if  ( ob == null )  return null;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ob  <=  byte[] )  {^212^^^^^197^227^if  ( ob instanceof byte[] )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = ix;^221^^^^^206^236^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  == JsonToken.END_ARRAY )  {^223^^^^^208^238^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  >= JsonToken.END_ARRAY )  {^223^^^^^208^238^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( t == JsonToken.VALUE_NUMBER_INT || t == 1 )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT || t != JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_NULL != t )  {^231^^^^^226^235^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NULL )  {^231^^^^^226^235^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( t != 1 )  {^231^^^^^216^246^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_NULL )  {^231^^^^^216^246^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^238^^^^^223^253^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^238^^^^^223^253^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t > JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_NULL != t )  {^231^^^^^216^246^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( ix >= ix )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix == chunk.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  <= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^251^^^^^247^271^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == 2 )  {^251^^^^^247^271^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( t == JsonToken.VALUE_NUMBER_FLOAT || t == JsonToken.VALUE_NUMBER_INT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT || t != JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_NULL != t )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t <= JsonToken.VALUE_NULL )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NULL )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = -1;^291^^^^^283^302^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  == JsonToken.END_ARRAY )  {^293^^^^^283^302^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = 3.appendCompletedChunk ( chunk, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ;^297^^^^^283^302^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^short value = _parseShortPrimitive ( ctxt, jp ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = null.appendCompletedChunk ( chunk, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^297^^^^^283^302^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = this.appendCompletedChunk ( chunk, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = -1;^297^^^^^283^302^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^310^^^^^304^318^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  >= 0 )  {^310^^^^^304^318^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new short[] { _parseShortPrimitive ( ctxt, jp )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = 1;^340^^^^^332^352^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^while  ( jp.nextToken (  )  != instance )  {^342^^^^^332^352^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  <= JsonToken.END_ARRAY )  {^342^^^^^332^352^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( value >= chunk.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( ix >= value )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix == chunk.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = builder.appendCompletedChunk ( chunk, value ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = -1;^347^^^^^332^352^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk[ix++] = ix;^349^^^^^332^352^chunk[ix++] = value;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^int value = _parseIntPrimitive ( ctxt, jp ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = value;^347^^^^^332^352^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^return builder.completeAndClearBuffer ( chunk, value ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  LongDeser  instance  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^if  (  ( jp.getCurrentToken (  )  == instance ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^360^^^^^354^368^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == 1 )  {^360^^^^^354^368^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new int[] { _parseIntPrimitive ( ctxt, jp )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = ix;^390^^^^^382^401^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^while  ( jp.nextToken (  )  != instance )  {^392^^^^^382^401^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  == JsonToken.END_ARRAY )  {^392^^^^^382^401^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix < chunk.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^396^^^^^382^401^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = -1;^396^^^^^382^401^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^long value = _parseLongPrimitive ( ctxt, jp ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix == chunk.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = this.appendCompletedChunk ( chunk, ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^396^^^^^382^401^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk[ix++] = serialVersionUID;^398^^^^^382^401^chunk[ix++] = value;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^return null.completeAndClearBuffer ( chunk, ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  (  ( jp.getCurrentToken (  )  == instance ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  <= 0 )  {^409^^^^^403^417^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == -1 )  {^409^^^^^403^417^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^409^^^^^403^417^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return new long[] { _parseLongPrimitive ( ctxt, jp )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Variable_Misuse]^float[] chunk = this.resetAndStart (  ) ;^436^^^^^429^449^float[] chunk = builder.resetAndStart (  ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Literal]^int ix = -1;^437^^^^^429^449^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^439^^^^^429^449^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  < JsonToken.END_ARRAY )  {^439^^^^^429^449^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Variable_Misuse]^if  ( ix >= ix )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Operator]^if  ( ix < chunk.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Variable_Misuse]^chunk = null.appendCompletedChunk ( chunk, ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Literal]^ix = ;^444^^^^^429^449^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^float value = _parseFloatPrimitive ( ctxt, jp ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Variable_Misuse]^chunk = 1.appendCompletedChunk ( chunk, ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Literal]^ix = 1;^444^^^^^429^449^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  value  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  <= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^457^^^^^451^465^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return new float[] { _parseFloatPrimitive ( ctxt, jp )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = ix;^485^^^^^477^496^int ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^while  ( jp.nextToken (  )  != null )  {^487^^^^^477^496^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^487^^^^^477^496^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  == JsonToken.END_ARRAY )  {^487^^^^^477^496^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = null.appendCompletedChunk ( chunk, ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^491^^^^^477^496^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = 0.appendCompletedChunk ( chunk, ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^double value = _parseDoublePrimitive ( ctxt, jp ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^491^^^^^477^496^ix = 0;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  IntDeser  instance  DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^504^^^^^498^512^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == 1 )  {^504^^^^^498^512^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return new double[] { _parseDoublePrimitive ( ctxt, jp )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  IntDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_STRING == t )  {^87^^^^^72^102^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_STRING )  {^87^^^^^72^102^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^return buffer;^95^^^^^80^110^return result;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, len, result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, offset, buffer, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, offset, result, 0, offset ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^System.arraycopy ( result, offset, buffer, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^System.arraycopy ( buffer, len, result, 0, offset ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^System.arraycopy ( buffer, result, offset, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^System.arraycopy ( buffer, offset, result, offset, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Variable_Misuse]^System.arraycopy ( result, offset, result, 0, len ) ;^94^^^^^79^109^System.arraycopy ( buffer, offset, result, 0, len ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^while  (  ( JsonToken.END_ARRAY = jp.nextToken (  )  )  != t )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  >= JsonToken.END_ARRAY )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  == JsonToken.END_ARRAY )  {^100^^^^^85^115^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_STRING != t )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t <= JsonToken.VALUE_STRING )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( str.length (  )  == 1 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^if  ( str.length (  )  != len )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  &  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  &&  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  >=  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ||  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  <  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  <=  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (   instanceof   ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt ( -1 )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_STRING )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^if  ( str.length (  )  != 2 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  <<  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  !=  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t > JsonToken.VALUE_STRING )  {^101^^^^^86^116^if  ( t != JsonToken.VALUE_STRING )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  |  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  >  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^StringBuilder sb = new StringBuilder ( offset ) ;^99^^^^^84^114^StringBuilder sb = new StringBuilder ( 64 ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^StringBuilder sb = new StringBuilder ( 63 ) ;^99^^^^^84^114^StringBuilder sb = new StringBuilder ( 64 ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  >>  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt ( len )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt (  )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( str.length (  )  <= 1 )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^if  ( str.length (  )  != offset )  {^105^^^^^90^120^if  ( str.length (  )  != 1 )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ==  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ^  ) +" into a char element of char array" ) ;^106^^^^^91^121^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^sb.append ( str.charAt ( 1 )  ) ;^108^^^^^93^123^sb.append ( str.charAt ( 0 )  ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( t < JsonToken.VALUE_EMBEDDED_OBJECT )  {^113^^^^^98^128^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob != null )  return null;^115^^^^^100^130^if  ( ob == null )  return null;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  <=  char[] )  {^116^^^^^101^131^if  ( ob instanceof char[] )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  <  String )  {^119^^^^^104^134^if  ( ob instanceof String )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  >>  byte[] )  {^123^^^^^108^138^if  ( ob instanceof byte[] )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Literal]^return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, true ) .toCharArray (  ) ;^124^^^^^109^139^return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, false ) .toCharArray (  ) ;^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  &&  char[] )  {^116^^^^^101^131^if  ( ob instanceof char[] )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  <=  String )  {^119^^^^^104^134^if  ( ob instanceof String )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Wrong_Operator]^if  ( ob  &  byte[] )  {^123^^^^^108^138^if  ( ob instanceof byte[] )  {^[CLASS] CharDeser  [METHOD] deserialize [RETURN_TYPE] char[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  StringBuilder  sb  DeserializationContext  ctxt  JsonToken  t  Object  ob  String  str  long  serialVersionUID  int  len  offset  JsonParser  jp  char[]  buffer  result  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^151^^^^^147^167^return handleNonArray ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = ;^155^^^^^147^167^int ix = 0;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^157^^^^^147^167^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  >= JsonToken.END_ARRAY )  {^157^^^^^147^167^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^161^^^^^147^167^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ;^162^^^^^147^167^ix = 0;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^boolean value = _parseBooleanPrimitive ( ctxt, jp ) ;^159^^^^^147^167^boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk )  {^160^^^^^147^167^if  ( ix >= chunk.length )  {^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^return this.completeAndClearBuffer ( chunk, ix ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^166^^^^^147^167^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] BooleanDeser  [METHOD] deserialize [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  value  BooleanBuilder  builder  DeserializationContext  ctxt  boolean[]  chunk  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  <= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^173^174^^^^169^183^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  >= 0 )  {^175^^^^^169^183^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == 1 )  {^175^^^^^169^183^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new boolean[] { _parseBooleanPrimitive ( ctxt, jp )  };^182^^^^^169^183^return new boolean[] { _parseBooleanPrimitive ( jp, ctxt )  };^[CLASS] BooleanDeser  [METHOD] handleNonArray [RETURN_TYPE] boolean[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t != JsonToken.VALUE_STRING )  {^205^^^^^190^220^if  ( t == JsonToken.VALUE_STRING )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ctxt.getBinaryValue ( jp.getBase64Variant (  )  ) ;^206^^^^^191^221^return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t < JsonToken.VALUE_EMBEDDED_OBJECT )  {^209^^^^^194^224^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t != JsonToken.VALUE_EMBEDDED_OBJECT )  {^209^^^^^194^224^if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ob != null )  return null;^211^^^^^196^226^if  ( ob == null )  return null;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ob  ==  byte[] )  {^212^^^^^197^227^if  ( ob instanceof byte[] )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ob  >=  byte[] )  {^212^^^^^197^227^if  ( ob instanceof byte[] )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^217^^^^^202^232^return handleNonArray ( jp, ctxt ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = ix;^221^^^^^206^236^int ix = 0;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^while  (  ( t = JsonToken.END_ARRAY.nextToken (  )  )  != jp )  {^223^^^^^208^238^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  (  ( t = jp.nextToken (  )  )  == JsonToken.END_ARRAY )  {^223^^^^^208^238^while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( t == JsonToken.VALUE_NUMBER_FLOAT || t == JsonToken.VALUE_NUMBER_INT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t <= JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT || t != JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NULL )  {^231^^^^^226^235^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_NULL )  {^231^^^^^216^246^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^237^^^^^222^252^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ;^238^^^^^223^253^ix = 0;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_NUMBER_FLOAT == JsonToken.VALUE_NUMBER_INT || t == t )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t >= JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT || t >= JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^211^241^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t <= JsonToken.VALUE_NULL )  {^231^^^^^226^235^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix < chunk.length )  {^236^^^^^221^251^if  ( ix >= chunk.length )  {^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^238^^^^^223^253^ix = 0;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^242^^^^^227^257^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ByteDeser  [METHOD] deserialize [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] byte[]  chunk  ByteBuilder  builder  boolean  byte  value  DeserializationContext  ctxt  JsonToken  t  Object  ob  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^251^^^^^247^271^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  ==  )  {^251^^^^^247^271^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == 1 )  {^251^^^^^247^271^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( t == JsonToken.VALUE_NUMBER_FLOAT || t == JsonToken.VALUE_NUMBER_INT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t != JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NUMBER_INT || t != JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( JsonToken.VALUE_NULL != t )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t > JsonToken.VALUE_NULL )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( t == JsonToken.VALUE_NULL )  {^265^^^^^247^271^if  ( t != JsonToken.VALUE_NULL )  {^[CLASS] ByteDeser  [METHOD] handleNonArray [RETURN_TYPE] byte[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  JsonToken  t  boolean  long  serialVersionUID  byte  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^287^^^^^283^302^return handleNonArray ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = -1;^291^^^^^283^302^int ix = 0;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^293^^^^^283^302^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  > JsonToken.END_ARRAY )  {^293^^^^^283^302^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix == chunk.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^297^^^^^283^302^ix = 0;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = 3.appendCompletedChunk ( chunk, ix ) ;^296^^^^^283^302^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^297^^^^^283^302^ix = 0;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^short value = _parseShortPrimitive ( ctxt, jp ) ;^294^^^^^283^302^short value = _parseShortPrimitive ( jp, ctxt ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( ix >= ix )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix < chunk.length )  {^295^^^^^283^302^if  ( ix >= chunk.length )  {^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = -1;^297^^^^^283^302^ix = 0;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^301^^^^^283^302^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] ShortDeser  [METHOD] deserialize [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  ShortBuilder  builder  short[]  chunk  DeserializationContext  ctxt  short  value  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  > JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  <= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^308^309^^^^304^318^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  >= 0 )  {^310^^^^^304^318^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == 1 )  {^310^^^^^304^318^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  <= 0 )  {^310^^^^^304^318^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == -1 )  {^310^^^^^304^318^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new short[] { _parseShortPrimitive ( ctxt, jp )  };^317^^^^^304^318^return new short[] { _parseShortPrimitive ( jp, ctxt )  };^[CLASS] ShortDeser  [METHOD] handleNonArray [RETURN_TYPE] short[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^336^^^^^332^352^return handleNonArray ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = -1;^340^^^^^332^352^int ix = 0;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^while  ( jp.nextToken (  )  != instance )  {^342^^^^^332^352^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^342^^^^^332^352^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  <= JsonToken.END_ARRAY )  {^342^^^^^332^352^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( value >= chunk.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( ix >= value )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = builder.appendCompletedChunk ( chunk, value ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^346^^^^^332^352^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^347^^^^^332^352^ix = 0;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk[ix++] = ix;^349^^^^^332^352^chunk[ix++] = value;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^int value = _parseIntPrimitive ( ctxt, jp ) ;^344^^^^^332^352^int value = _parseIntPrimitive ( jp, ctxt ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix < chunk.length )  {^345^^^^^332^352^if  ( ix >= chunk.length )  {^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^347^^^^^332^352^ix = 0;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = value;^347^^^^^332^352^ix = 0;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^return builder.completeAndClearBuffer ( chunk, value ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^351^^^^^332^352^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] IntDeser  [METHOD] deserialize [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] IntBuilder  builder  IntDeser  instance  boolean  DeserializationContext  ctxt  int[]  chunk  long  serialVersionUID  int  ix  value  JsonParser  jp  
[BugLab_Variable_Misuse]^if  (  ( jp.getCurrentToken (  )  == instance ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  <= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^358^359^^^^354^368^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^360^^^^^354^368^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new int[] { _parseIntPrimitive ( ctxt, jp )  };^367^^^^^354^368^return new int[] { _parseIntPrimitive ( jp, ctxt )  };^[CLASS] IntDeser  [METHOD] handleNonArray [RETURN_TYPE] int[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  IntDeser  instance  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^386^^^^^382^401^return handleNonArray ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^int ix = ix;^390^^^^^382^401^int ix = 0;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^while  ( JsonToken.END_ARRAY.nextToken (  )  != jp )  {^392^^^^^382^401^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  >= JsonToken.END_ARRAY )  {^392^^^^^382^401^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk[ix++] = serialVersionUID;^398^^^^^382^401^chunk[ix++] = value;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^long value = _parseLongPrimitive ( ctxt, jp ) ;^393^^^^^382^401^long value = _parseLongPrimitive ( jp, ctxt ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^394^^^^^382^401^if  ( ix >= chunk.length )  {^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^chunk = 1.appendCompletedChunk ( chunk, ix ) ;^395^^^^^382^401^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^396^^^^^382^401^ix = 0;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = 1;^396^^^^^382^401^ix = 0;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^400^^^^^382^401^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] LongDeser  [METHOD] deserialize [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] LongDeser  instance  boolean  LongBuilder  builder  long[]  chunk  DeserializationContext  ctxt  long  serialVersionUID  value  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  (  ( jp.getCurrentToken (  )  == instance ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  > JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^407^408^^^^403^417^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  <= 0 )  {^409^^^^^403^417^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^409^^^^^403^417^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == -1 )  {^409^^^^^403^417^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return new long[] { _parseLongPrimitive ( ctxt, jp )  };^416^^^^^403^417^return new long[] { _parseLongPrimitive ( jp, ctxt )  };^[CLASS] LongDeser  [METHOD] handleNonArray [RETURN_TYPE] long[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  LongDeser  instance  boolean  long  serialVersionUID  value  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^433^^^^^429^449^return handleNonArray ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Literal]^int ix = 1;^437^^^^^429^449^int ix = 0;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  >= JsonToken.END_ARRAY )  {^439^^^^^429^449^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Variable_Misuse]^if  ( ix >= ix )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  ( ix >= chunk.length.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Literal]^ix = 1;^444^^^^^429^449^ix = 0;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^443^^^^^429^449^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^float value = _parseFloatPrimitive ( ctxt, jp ) ;^441^^^^^429^449^float value = _parseFloatPrimitive ( jp, ctxt ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^442^^^^^429^449^if  ( ix >= chunk.length )  {^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Wrong_Literal]^ix = ix;^444^^^^^429^449^ix = 0;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^448^^^^^429^449^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] FloatDeser  [METHOD] deserialize [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  FloatBuilder  builder  DeserializationContext  ctxt  float  value  long  serialVersionUID  int  ix  JsonParser  jp  float[]  chunk  
[BugLab_Argument_Swapping]^if  (  ( JsonToken.VALUE_STRING.getCurrentToken (  )  == jp ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^455^456^^^^451^465^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  != 0 )  {^457^^^^^451^465^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == -1 )  {^457^^^^^451^465^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  >= 0 )  {^457^^^^^451^465^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new float[] { _parseFloatPrimitive ( ctxt, jp )  };^464^^^^^451^465^return new float[] { _parseFloatPrimitive ( jp, ctxt )  };^[CLASS] FloatDeser  [METHOD] handleNonArray [RETURN_TYPE] float[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return handleNonArray ( ctxt, jp ) ;^481^^^^^477^496^return handleNonArray ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^while  ( jp.nextToken (  )  <= JsonToken.END_ARRAY )  {^487^^^^^477^496^while  ( jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk.length >= ix )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  ( chunk >= ix.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( ix > chunk.length )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = ix.appendCompletedChunk ( chunk, builder ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = chunk.appendCompletedChunk ( builder, ix ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^chunk = builder.appendCompletedChunk ( ix, chunk ) ;^490^^^^^477^496^chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ix;^491^^^^^477^496^ix = 0;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^double value = _parseDoublePrimitive ( ctxt, jp ) ;^488^^^^^477^496^double value = _parseDoublePrimitive ( jp, ctxt ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Variable_Misuse]^if  ( ix >= ix )  {^489^^^^^477^496^if  ( ix >= chunk.length )  {^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Wrong_Literal]^ix = ;^491^^^^^477^496^ix = 0;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return ix.completeAndClearBuffer ( chunk, builder ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return builder.completeAndClearBuffer ( ix, chunk ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^return chunk.completeAndClearBuffer ( builder, ix ) ;^495^^^^^477^496^return builder.completeAndClearBuffer ( chunk, ix ) ;^[CLASS] DoubleDeser  [METHOD] deserialize [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DoubleBuilder  builder  boolean  double[]  chunk  double  value  DeserializationContext  ctxt  long  serialVersionUID  int  ix  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( ctxt.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && jp.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^if  (  ( jp.getCurrentToken (  )  == ctxt ) && JsonToken.VALUE_STRING.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  (  ( jp.getCurrentToken (  )  != JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^502^503^^^^498^512^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  >= 0 )  {^504^^^^^498^512^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Literal]^if  ( jp.getText (  ) .length (  )  == null )  {^504^^^^^498^512^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Wrong_Operator]^if  ( jp.getText (  ) .length (  )  < 0 )  {^504^^^^^498^512^if  ( jp.getText (  ) .length (  )  == 0 )  {^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
[BugLab_Argument_Swapping]^return new double[] { _parseDoublePrimitive ( ctxt, jp )  };^511^^^^^498^512^return new double[] { _parseDoublePrimitive ( jp, ctxt )  };^[CLASS] DoubleDeser  [METHOD] handleNonArray [RETURN_TYPE] double[]   JsonParser jp DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  boolean  long  serialVersionUID  JsonParser  jp  
