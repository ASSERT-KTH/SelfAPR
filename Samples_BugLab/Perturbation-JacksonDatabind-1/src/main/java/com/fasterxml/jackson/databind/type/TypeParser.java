[BugLab_Variable_Misuse]^_factory = _factory;^22^^^^^21^23^_factory = f;^[CLASS] TypeParser MyTokenizer  [METHOD] <init> [RETURN_TYPE] TypeFactory)   TypeFactory f [VARIABLES] String  _input  _pushbackToken  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Literal]^super ( str, "<,>", false ) ;^101^^^^^100^103^super ( str, "<,>", true ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] <init> [RETURN_TYPE] String)   String str [VARIABLES] String  _input  _pushbackToken  str  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^_input = _pushbackToken;^102^^^^^100^103^_input = str;^[CLASS] TypeParser MyTokenizer  [METHOD] <init> [RETURN_TYPE] String)   String str [VARIABLES] String  _input  _pushbackToken  str  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^canonical = str.trim (  ) ;^28^^^^^25^36^canonical = canonical.trim (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parse [RETURN_TYPE] JavaType   String canonical [VARIABLES] MyTokenizer  tokens  JavaType  type  boolean  String  _input  _pushbackToken  canonical  str  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^MyTokenizer tokens = new MyTokenizer ( str ) ;^29^^^^^25^36^MyTokenizer tokens = new MyTokenizer ( canonical ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parse [RETURN_TYPE] JavaType   String canonical [VARIABLES] MyTokenizer  tokens  JavaType  type  boolean  String  _input  _pushbackToken  canonical  str  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^if  ( strs.hasMoreTokens (  )  )  {^46^^^^^38^55^if  ( tokens.hasMoreTokens (  )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^if  ( tokenss.hasMoreTokens (  )  )  {^46^^^^^38^55^if  ( tokens.hasMoreTokens (  )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^if  ( "<".equals ( canonical )  )  {^48^^^^^38^55^if  ( "<".equals ( token )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^return f._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^49^^^^^38^55^return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^return base._fromParameterizedClass ( _factory, parseTypes ( tokens )  ) ;^49^^^^^38^55^return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^return _factory._fromParameterizedClass ( tokens, parseTypes ( base )  ) ;^49^^^^^38^55^return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^return tokens._fromParameterizedClass ( base, parseTypes ( _factory )  ) ;^49^^^^^38^55^return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^if  ( "<".equals ( str )  )  {^48^^^^^38^55^if  ( "<".equals ( token )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^tokens.pushBack ( str ) ;^52^^^^^38^55^tokens.pushBack ( token ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^tokens.pushBack ( canonical ) ;^52^^^^^38^55^tokens.pushBack ( token ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^return f._fromClass ( base, null ) ;^54^^^^^38^55^return _factory._fromClass ( base, null ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^return base._fromClass ( _factory, null ) ;^54^^^^^38^55^return _factory._fromClass ( base, null ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseType [RETURN_TYPE] JavaType   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  Class  base  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^while  ( strs.hasMoreTokens (  )  )  {^61^^^^^57^71^while  ( tokens.hasMoreTokens (  )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^while  ( tokenss.hasMoreTokens (  )  )  {^61^^^^^57^71^while  ( tokens.hasMoreTokens (  )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^if  ( ">".equals ( str )  )  return types;^65^^^^^57^71^if  ( ">".equals ( token )  )  return types;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^if  ( ">".equals ( types )  )  return token;^65^^^^^57^71^if  ( ">".equals ( token )  )  return types;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^if  ( !",".equals ( str )  )  {^66^^^^^57^71^if  ( !",".equals ( token )  )  {^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^throw _problem ( token, "Unexpected tokens '"+token+"', expected ',' or '>' ) " ) ;^67^^^^^57^71^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^throw _problem ( tokenss, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^67^^^^^57^71^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^throw _problem ( strs, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^67^^^^^57^71^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^if  ( ">".equals ( canonical )  )  return types;^65^^^^^57^71^if  ( ">".equals ( token )  )  return types;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^throw _problem ( canonicals, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^67^^^^^57^71^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] parseTypes [RETURN_TYPE] List   MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  ArrayList  types  String  _input  _pushbackToken  canonical  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^if  ( e  |  RuntimeException )  {^78^^^^^73^83^if  ( e instanceof RuntimeException )  {^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Variable_Misuse]^return ClassUtil.findClass ( token ) ;^76^^^^^73^83^return ClassUtil.findClass ( className ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Wrong_Operator]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (   instanceof   )  ) ;^81^^^^^73^83^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Wrong_Operator]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  !=  )  ) ;^81^^^^^73^83^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Wrong_Operator]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  >=  )  ) ;^81^^^^^73^83^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Wrong_Operator]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  ==  )  ) ;^81^^^^^73^83^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Wrong_Operator]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  >  )  ) ;^81^^^^^73^83^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Wrong_Operator]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  &  )  ) ;^81^^^^^73^83^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] findClass [RETURN_TYPE] Class   String className MyTokenizer tokens [VARIABLES] MyTokenizer  tokens  boolean  String  _input  _pushbackToken  canonical  className  str  token  TypeFactory  _factory  f  long  serialVersionUID  int  _index  Exception  e  
[BugLab_Variable_Misuse]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+str ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  <<  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  <=  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ==  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  <  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+className ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  |  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ^  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  &&  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  !=  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^87^88^^^^85^89^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] _problem [RETURN_TYPE] IllegalArgumentException   MyTokenizer tokens String msg [VARIABLES] MyTokenizer  tokens  String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return  ( _pushbackToken != null )  && super.hasMoreTokens (  ) ;^107^^^^^106^108^return  ( _pushbackToken != null )  || super.hasMoreTokens (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] hasMoreTokens [RETURN_TYPE] boolean   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^return  ( _pushbackToken == null )  || super.hasMoreTokens (  ) ;^107^^^^^106^108^return  ( _pushbackToken != null )  || super.hasMoreTokens (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] hasMoreTokens [RETURN_TYPE] boolean   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^if  ( _pushbackToken == null )  {^113^^^^^111^121^if  ( _pushbackToken != null )  {^[CLASS] TypeParser MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^token = str;^114^^^^^111^121^token = _pushbackToken;^[CLASS] TypeParser MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^token = token;^114^^^^^111^121^token = _pushbackToken;^[CLASS] TypeParser MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^_index += str.length (  ) ;^119^^^^^111^121^_index += token.length (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^_index += className.length (  ) ;^119^^^^^111^121^_index += token.length (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^return msg;^120^^^^^111^121^return token;^[CLASS] TypeParser MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^_pushbackToken = str;^124^^^^^123^126^_pushbackToken = token;^[CLASS] TypeParser MyTokenizer  [METHOD] pushBack [RETURN_TYPE] void   String token [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^_index -= str.length (  ) ;^125^^^^^123^126^_index -= token.length (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] pushBack [RETURN_TYPE] void   String token [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Operator]^_index = token.length (  ) ;^125^^^^^123^126^_index -= token.length (  ) ;^[CLASS] TypeParser MyTokenizer  [METHOD] pushBack [RETURN_TYPE] void   String token [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^public String getAllInput (  )  { return str; }^128^^^^^123^133^public String getAllInput (  )  { return _input; }^[CLASS] TypeParser MyTokenizer  [METHOD] getAllInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^public String getUsedInput (  )  { return str.substring ( 0, _index ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^public String getUsedInput (  )  { return _index.substring ( 0, _input ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Literal]^public String getUsedInput (  )  { return _input.substring ( , _index ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^public String getUsedInput (  )  { return token.substring ( 0, _index ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Wrong_Literal]^public String getUsedInput (  )  { return _input.substring ( _index, _index ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^public String getRemainingInput (  )  { return token.substring ( _index ) ; }^130^^^^^125^135^public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getRemainingInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Argument_Swapping]^public String getRemainingInput (  )  { return _index.substring ( _input ) ; }^130^^^^^125^135^public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^[CLASS] TypeParser MyTokenizer  [METHOD] getRemainingInput [RETURN_TYPE] String   [VARIABLES] String  _input  _pushbackToken  canonical  className  msg  str  token  boolean  TypeFactory  _factory  f  long  serialVersionUID  int  _index  
[BugLab_Variable_Misuse]^super ( _pushbackToken, "<,>", true ) ;^101^^^^^100^103^super ( str, "<,>", true ) ;^[CLASS] MyTokenizer  [METHOD] <init> [RETURN_TYPE] String)   String str [VARIABLES] int  _index  String  _input  _pushbackToken  str  boolean  
[BugLab_Wrong_Literal]^super ( str, "<,>", false ) ;^101^^^^^100^103^super ( str, "<,>", true ) ;^[CLASS] MyTokenizer  [METHOD] <init> [RETURN_TYPE] String)   String str [VARIABLES] int  _index  String  _input  _pushbackToken  str  boolean  
[BugLab_Variable_Misuse]^_input = _pushbackToken;^102^^^^^100^103^_input = str;^[CLASS] MyTokenizer  [METHOD] <init> [RETURN_TYPE] String)   String str [VARIABLES] int  _index  String  _input  _pushbackToken  str  boolean  
[BugLab_Wrong_Operator]^return  ( _pushbackToken != null )  && super.hasMoreTokens (  ) ;^107^^^^^106^108^return  ( _pushbackToken != null )  || super.hasMoreTokens (  ) ;^[CLASS] MyTokenizer  [METHOD] hasMoreTokens [RETURN_TYPE] boolean   [VARIABLES] int  _index  String  _input  _pushbackToken  str  boolean  
[BugLab_Wrong_Operator]^return  ( _pushbackToken == null )  || super.hasMoreTokens (  ) ;^107^^^^^106^108^return  ( _pushbackToken != null )  || super.hasMoreTokens (  ) ;^[CLASS] MyTokenizer  [METHOD] hasMoreTokens [RETURN_TYPE] boolean   [VARIABLES] int  _index  String  _input  _pushbackToken  str  boolean  
[BugLab_Wrong_Operator]^if  ( _pushbackToken == null )  {^113^^^^^111^121^if  ( _pushbackToken != null )  {^[CLASS] MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^token = token;^114^^^^^111^121^token = _pushbackToken;^[CLASS] MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^_index += str.length (  ) ;^119^^^^^111^121^_index += token.length (  ) ;^[CLASS] MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^return str;^120^^^^^111^121^return token;^[CLASS] MyTokenizer  [METHOD] nextToken [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^_pushbackToken = str;^124^^^^^123^126^_pushbackToken = token;^[CLASS] MyTokenizer  [METHOD] pushBack [RETURN_TYPE] void   String token [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Wrong_Operator]^_index += token.length (  ) ;^125^^^^^123^126^_index -= token.length (  ) ;^[CLASS] MyTokenizer  [METHOD] pushBack [RETURN_TYPE] void   String token [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^_index -= str.length (  ) ;^125^^^^^123^126^_index -= token.length (  ) ;^[CLASS] MyTokenizer  [METHOD] pushBack [RETURN_TYPE] void   String token [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^public String getAllInput (  )  { return token; }^128^^^^^123^133^public String getAllInput (  )  { return _input; }^[CLASS] MyTokenizer  [METHOD] getAllInput [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^public String getUsedInput (  )  { return token.substring ( 0, _index ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Argument_Swapping]^public String getUsedInput (  )  { return _index.substring ( 0, _input ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Wrong_Literal]^public String getUsedInput (  )  { return _input.substring ( _index, _index ) ; }^129^^^^^124^134^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[CLASS] MyTokenizer  [METHOD] getUsedInput [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Variable_Misuse]^public String getRemainingInput (  )  { return token.substring ( _index ) ; }^130^^^^^125^135^public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^[CLASS] MyTokenizer  [METHOD] getRemainingInput [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
[BugLab_Argument_Swapping]^public String getRemainingInput (  )  { return _index.substring ( _input ) ; }^130^^^^^125^135^public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^[CLASS] MyTokenizer  [METHOD] getRemainingInput [RETURN_TYPE] String   [VARIABLES] int  _index  String  _input  _pushbackToken  str  token  boolean  
