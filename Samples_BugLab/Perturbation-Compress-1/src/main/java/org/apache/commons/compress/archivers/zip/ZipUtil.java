[BugLab_Variable_Misuse]^Date valueime = new Date ( t ) ;^46^^^^^45^62^Date time = new Date ( t ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^int year = time.getYear (  ||  )  + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Literal]^int year = time.getYear (  )  ;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Variable_Misuse]^if  ( month < 1980 )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^if  ( year <= 1980 )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Literal]^if  ( year < year )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^int month = time.getMonth (  ==  )  + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Literal]^int month = time.getMonth (  )  ;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Variable_Misuse]^long value =   (  ( month - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Variable_Misuse]^long value =   (  ( year - 1980 )  << 25 ) |          ( year << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Argument_Swapping]^long value =   (  ( month - 1980 )  << 25 ) |          ( year << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Argument_Swapping]^long value =   (  ( year - 1980 )  << 25 ) |          ( time << 21 ) |          ( month.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Argument_Swapping]^long value =   (  ( time - 1980 )  << 25 ) |          ( month << 21 ) |          ( year.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long  <  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long  &  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long   instanceof   value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long  ^  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long value =   (  ( year - 1980 )   ==  25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long value =   (  ( year  &  1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long value =   (  ( year - 1980 )  << 25 ) |          ( month  &  21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )   &&  16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )   ==  11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^long value =   (  ( year - 1980 )   >>  25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Literal]^long value =   (  ( year - year )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Literal]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << year )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Literal]^long value =   (  ( year 980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Variable_Misuse]^return ZipLong.getBytes ( t ) ;^60^^^^^45^62^return ZipLong.getBytes ( value ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[BugLab_Wrong_Operator]^if  ( i > 0 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Literal]^if  ( i < -1 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^return 2 *  ||  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^return 2 *  ==  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^return - 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Literal]^return i *  (  ( long )  Integer.MAX_VALUE )  + i + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^return 2 *  !=  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^return 2 *  &&  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^return + 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Literal]^return 2 *  (  ( long )  Integer.MAX_VALUE )   + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[BugLab_Wrong_Operator]^cal.set ( Calendar.YEAR,  >  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )   <=  0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime  ==  25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 24 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + this ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )   >  1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )   !=  0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime  >  21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 2 )  & 0x0f )  -  ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )   !=  0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.DATE,  ( int )   ( dosTime  ||  16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 17 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )   !=  0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime  <  11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 12 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )   ||  0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime  <<  5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 6 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )   ^  0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Operator]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime  <=  1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[BugLab_Wrong_Literal]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 0 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
