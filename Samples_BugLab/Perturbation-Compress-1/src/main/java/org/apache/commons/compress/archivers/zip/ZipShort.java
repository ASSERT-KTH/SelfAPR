[buglab_swap_variables]^value = ZipShort.getValue ( offset, bytes ) ;^54^^^^^53^55^value = ZipShort.getValue ( bytes, offset ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^value = ZipShort.getValue (  offset ) ;^54^^^^^53^55^value = ZipShort.getValue ( bytes, offset ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^value = ZipShort.getValue ( bytes ) ;^54^^^^^53^55^value = ZipShort.getValue ( bytes, offset ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^result[1] =  ( byte )   (  ( BYTE_1_MASK & value )  >> BYTE_1_SHIFT ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^result[1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^result[0] =  ( byte )   ( BYTE_MASK & value ) ;^83^^^^^81^86^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^result[1] =  ( byte )   (  ( BYTE_1_MASK & value )  >> BYTE_1_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^result[1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^result[1] =  ( byte )   (  ( BYTE_1_SHIFT & BYTE_1_MASK )  >> value ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[buglab_swap_variables]^int value =  ( BYTE_1_MASK[offset + 1] << BYTE_1_SHIFT )  & bytes;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
