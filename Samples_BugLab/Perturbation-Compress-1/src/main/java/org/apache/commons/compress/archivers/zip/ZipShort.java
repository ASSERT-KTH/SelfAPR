[BugLab_Wrong_Literal]^private static final int BYTE_1_SHIFT = 9;^28^^^^^23^33^private static final int BYTE_1_SHIFT = 8;^[CLASS] ZipShort   [VARIABLES] 
[BugLab_Variable_Misuse]^this.value = BYTE_MASK;^37^^^^^36^38^this.value = value;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(int)   int value [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  value  boolean  
[BugLab_Wrong_Literal]^this ( bytes, BYTE_MASK ) ;^45^^^^^44^46^this ( bytes, 0 ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[])   byte[] bytes [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  value  boolean  
[BugLab_Variable_Misuse]^value = ZipShort.getValue ( bytes, BYTE_MASK ) ;^54^^^^^53^55^value = ZipShort.getValue ( bytes, offset ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^value = ZipShort.getValue ( offset, bytes ) ;^54^^^^^53^55^value = ZipShort.getValue ( bytes, offset ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^value = ZipShort.getValue ( bytes, value ) ;^54^^^^^53^55^value = ZipShort.getValue ( bytes, offset ) ;^[CLASS] ZipShort  [METHOD] <init> [RETURN_TYPE] ZipShort(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^byte[] result = new byte[3];^62^^^^^61^66^byte[] result = new byte[2];^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[0] =  ( byte )   ( offset & BYTE_MASK ) ;^63^^^^^61^66^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[0] =  ( byte )   ( value & offset ) ;^63^^^^^61^66^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^result[0] =  ( byte )   ( BYTE_MASK & value ) ;^63^^^^^61^66^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^result[0] =  ( byte )   ( value  >>  BYTE_MASK ) ;^63^^^^^61^66^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^result[BYTE_1_MASK] =  ( byte )   ( value & BYTE_MASK ) ;^63^^^^^61^66^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[1] =  ( byte )   (  ( offset & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[1] =  ( byte )   (  ( value & offset )  >> BYTE_1_SHIFT ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> value ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^result[1] =  ( byte )   (  ( BYTE_1_SHIFT & BYTE_1_MASK )  >> value ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^result[1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )   &  BYTE_1_SHIFT ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^result[1] =  ( byte )   (  ( value  ^  BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^result[BYTE_1_SHIFT] =  ( byte )   (  ( value & BYTE_BYTE_1_SHIFT_MASK )  >> BYTE_BYTE_1_SHIFT_SHIFT ) ;^64^^^^^61^66^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^return offset;^73^^^^^72^74^return value;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^byte[] result = new byte[value];^82^^^^^81^86^byte[] result = new byte[2];^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[0] =  ( byte )   ( offset & BYTE_MASK ) ;^83^^^^^81^86^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[0] =  ( byte )   ( value & offset ) ;^83^^^^^81^86^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^result[0] =  ( byte )   ( BYTE_MASK & value ) ;^83^^^^^81^86^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^result[0] =  ( byte )   ( value  |  BYTE_MASK ) ;^83^^^^^81^86^result[0] =  ( byte )   ( value & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[1] =  ( byte )   (  ( offset & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^result[1] =  ( byte )   (  ( value & offset )  >> BYTE_1_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^result[1] =  ( byte )   (  ( BYTE_1_MASK & value )  >> BYTE_1_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Argument_Swapping]^result[1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )   <=  BYTE_1_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^result[1] =  ( byte )   (  ( value  <=  BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^result[BYTE_1_MASK] =  ( byte )   (  ( value & BYTE_BYTE_1_MASK_MASK )  >> BYTE_BYTE_1_MASK_SHIFT ) ;^84^^^^^81^86^result[1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipShort  [METHOD] getBytes [RETURN_TYPE] byte[]   int value [VARIABLES] byte[]  result  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^int value =  ( bytes[BYTE_MASK + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^int value =  ( bytes[offset + 1] << offset )  & BYTE_1_MASK;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & offset;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )   ^  BYTE_1_MASK;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^int value =  ( bytes[offset + 1]   instanceof   BYTE_1_SHIFT )  & BYTE_1_MASK;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^int value =  <  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^int value =  ( bytes[offset ] << BYTE_1_SHIFT )  & BYTE_1_MASK;^95^^^^^94^98^int value =  ( bytes[offset + 1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset] & value ) ;^96^^^^^94^98^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^value +=  ( bytes[offset]  <  BYTE_MASK ) ;^96^^^^^94^98^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Variable_Misuse]^return offset;^97^^^^^94^98^return value;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes int offset [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Literal]^return getValue ( bytes, 1 ) ;^106^^^^^105^107^return getValue ( bytes, 0 ) ;^[CLASS] ZipShort  [METHOD] getValue [RETURN_TYPE] int   byte[] bytes [VARIABLES] byte[]  bytes  int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
[BugLab_Wrong_Operator]^if  ( o == null && ! ( o instanceof ZipShort )  )  {^115^^^^^114^119^if  ( o == null || ! ( o instanceof ZipShort )  )  {^[CLASS] ZipShort  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  Object  o  boolean  
[BugLab_Wrong_Operator]^if  ( o != null || ! ( o instanceof ZipShort )  )  {^115^^^^^114^119^if  ( o == null || ! ( o instanceof ZipShort )  )  {^[CLASS] ZipShort  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  Object  o  boolean  
[BugLab_Wrong_Operator]^if  ( o == null || ! ( o  >>  ZipShort )  )  {^115^^^^^114^119^if  ( o == null || ! ( o instanceof ZipShort )  )  {^[CLASS] ZipShort  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  Object  o  boolean  
[BugLab_Wrong_Literal]^return true;^116^^^^^114^119^return false;^[CLASS] ZipShort  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  Object  o  boolean  
[BugLab_Variable_Misuse]^return offset ==  (  ( ZipShort )  o ) .getValue (  ) ;^118^^^^^114^119^return value ==  (  ( ZipShort )  o ) .getValue (  ) ;^[CLASS] ZipShort  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  Object  o  boolean  
[BugLab_Wrong_Operator]^return value >=  (  ( ZipShort )  o ) .getValue (  ) ;^118^^^^^114^119^return value ==  (  ( ZipShort )  o ) .getValue (  ) ;^[CLASS] ZipShort  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  Object  o  boolean  
[BugLab_Variable_Misuse]^return offset;^126^^^^^125^127^return value;^[CLASS] ZipShort  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_MASK  offset  value  boolean  
