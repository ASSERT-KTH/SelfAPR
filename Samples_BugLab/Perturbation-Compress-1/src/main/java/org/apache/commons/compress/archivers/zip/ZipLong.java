[BugLab_Wrong_Literal]^private static final int WORD = 3;^26^^^^^21^31^private static final int WORD = 4;^[CLASS] ZipLong   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final int BYTE_0 = 0;^30^^^^^25^35^private static final int BYTE_1 = 1;^[CLASS] ZipLong   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final int BYTE_2_SHIFT = 17;^36^^^^^31^41^private static final int BYTE_2_SHIFT = 16;^[CLASS] ZipLong   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final int BYTE_3_SHIFT = 25;^40^^^^^35^45^private static final int BYTE_3_SHIFT = 24;^[CLASS] ZipLong   [VARIABLES] 
[BugLab_Variable_Misuse]^this.value = BYTE_3_MASK;^49^^^^^48^50^this.value = value;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(long)   long value [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  long  BYTE_3_MASK  value  boolean  
[BugLab_Argument_Swapping]^value = ZipLong.getValue ( offset, bytes ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value = ZipLong.getValue ( bytes, BYTE_2_SHIFT ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^return ZipLong.getBytes ( BYTE_3_MASK ) ;^74^^^^^73^75^return ZipLong.getBytes ( value ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[BugLab_Variable_Misuse]^return BYTE_3_MASK;^82^^^^^81^83^return value;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[BugLab_Variable_Misuse]^result[0] =  ( byte )   (  ( BYTE_3_MASK & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[0] =  ( byte )   (  ( value & offset )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[0] =  ( byte )   (  ( BYTE_MASK & value )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[0] =  ( byte )   (  ( value  ^  BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_1] =  ( byte )   (  ( BYTE_3_MASK & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_1] =  ( byte )   (  ( value & offset_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_1] =  ( byte )   (  ( value & WORD )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_MASK ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_1] =  ( byte )   (  ( BYTE_1_MASK & value )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )   >  BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[BYTE_1] =  ( byte )   (  ( value  >=  BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_2] =  ( byte )   (  ( BYTE_3_MASK & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_MASK_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_MASK ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_SHIFT )  >> BYTE_2_MASK ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )   >=  BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[BYTE_2] =  ( byte )   (  ( value  <  BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_3] =  ( byte )   (  ( BYTE_3_MASK & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_2_SHIFT_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_3] =  ( byte )   (  ( value & value )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> offset ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_3] =  ( byte )   (  ( BYTE_3 & value_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_SHIFT_MASK )  >> BYTE_3 ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^result[BYTE_3] =  ( byte )   (  ( BYTE_3_MASK & value )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )   !=  BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^result[BYTE_3] =  ( byte )   (  ( value  ==  BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^long value =  ( bytes[BYTE_3 + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^long value =  ( bytes[offset + BYTE_2_SHIFT] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^long value =  ( bytes[offset + BYTE_3] << BYTE_2_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^long value =  ( BYTE_3[offset + bytes] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^long value =  ( bytes[offset + BYTE_3_SHIFT] << BYTE_3 )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^long value =  ( BYTE_3_MASK[offset + BYTE_3] << BYTE_3_SHIFT )  & bytes;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )   >=  BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^long value =  ( bytes[offset + BYTE_3]  &  BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^long value =  &  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[BYTE_MASK + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset + BYTE_3_SHIFT] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset + BYTE_2] << offset )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_3_SHIFT;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^value +=  ( BYTE_2_MASK[offset + BYTE_2] << BYTE_2_SHIFT )  & bytes;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^value +=  ( bytes[offset + BYTE_2_MASK] << BYTE_2_SHIFT )  & BYTE_2;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_MASK )  & BYTE_2_SHIFT;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )   ==  BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  ( bytes[offset + BYTE_2]  >>  BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  >  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[BYTE_3_SHIFT + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset + offset] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset + BYTE_1] << WORD )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & WORD;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^value +=  ( BYTE_1_MASK[offset + BYTE_1] << BYTE_1_SHIFT )  & bytes;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_MASK )  & BYTE_1_SHIFT;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )   |  BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  ( bytes[offset + BYTE_1]  &  BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  ^  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^value +=  ( bytes[offset] & WORD ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Argument_Swapping]^value +=  ( BYTE_MASK[offset] & bytes ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^value +=  ( bytes[offset]  ||  BYTE_MASK ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^return BYTE_3_MASK;^110^^^^^105^111^return value;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Literal]^return getValue ( bytes, BYTE_2_MASK ) ;^119^^^^^118^120^return getValue ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Literal]^return getValue ( bytes, 1 ) ;^119^^^^^118^120^return getValue ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^if  ( o == null && ! ( o instanceof ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^if  ( o != null || ! ( o instanceof ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^if  ( o == null || ! ( o  &&  ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Literal]^return true;^129^^^^^127^132^return false;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Variable_Misuse]^return BYTE_3_MASK ==  (  ( ZipLong )  o ) .getValue (  ) ;^131^^^^^127^132^return value ==  (  ( ZipLong )  o ) .getValue (  ) ;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[BugLab_Wrong_Operator]^return value <  (  ( ZipLong )  o ) .getValue (  ) ;^131^^^^^127^132^return value ==  (  ( ZipLong )  o ) .getValue (  ) ;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
