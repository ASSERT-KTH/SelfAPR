[buglab_swap_variables]^value = ZipLong.getValue ( offset, bytes ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^value = ZipLong.getValue (  offset ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^value = ZipLong.getValue ( bytes ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[0] =  ( byte )   (  ( BYTE_MASK & value )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_1] =  ( byte )   (  ( BYTE_1 & value_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_SHIFT_MASK )  >> BYTE_1 ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_2] =  ( byte )   (  ( BYTE_2_SHIFT & BYTE_2_MASK )  >> value ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_SHIFT_MASK )  >> BYTE_2 ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_SHIFT )  >> BYTE_2_MASK ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_3] =  ( byte )   (  ( BYTE_3_MASK & value )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_SHIFT_MASK )  >> BYTE_3 ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^result[BYTE_3] =  ( byte )   (  ( BYTE_3_SHIFT & BYTE_3_MASK )  >> value ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^long value =  ( BYTE_3_MASK[offset + BYTE_3] << BYTE_3_SHIFT )  & bytes;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^long value =  ( bytes[offset + BYTE_3_SHIFT] << BYTE_3 )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^long value =  ( bytes[offset + BYTE_3] << BYTE_3_MASK )  & BYTE_3_SHIFT;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^value +=  ( bytes[offset + BYTE_2_MASK] << BYTE_2_SHIFT )  & BYTE_2;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_MASK )  & BYTE_2_SHIFT;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^value +=  ( BYTE_1_SHIFT[offset + BYTE_1] << bytes )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[buglab_swap_variables]^value +=  ( BYTE_MASK[offset] & bytes ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
