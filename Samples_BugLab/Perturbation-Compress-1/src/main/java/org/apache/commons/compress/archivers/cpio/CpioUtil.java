[BugLab_Wrong_Literal]^long ret = -1;^33^^^^^32^57^long ret = 0;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^int pos = pos;^34^^^^^32^57^int pos = 0;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^System.arraycopy ( number, 0, number, 0, number.length ) ;^36^^^^^32^57^System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^System.arraycopy ( number, 0, tmp_number, 0, pos ) ;^36^^^^^32^57^System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^System.arraycopy ( number.length, 0, tmp_number, 0, number ) ;^36^^^^^32^57^System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^System.arraycopy ( number, 0, number.length, 0, tmp_number ) ;^36^^^^^32^57^System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^System.arraycopy ( number, 1, tmp_number, 1, number.length ) ;^36^^^^^32^57^System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^if  ( number.length % 2 != 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^if  ( pos % 2 != 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^if  ( tmp_number.length.length % 2 != 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^if  ( tmp_number % 2 != 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Operator]^if  ( tmp_number.length % 2 <= 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Operator]^if  ( tmp_number.length  !=  2 != 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^if  ( tmp_number.length % pos != 0 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^if  ( tmp_number.length % 2 != 1 )  {^38^^^^^32^57^if  ( tmp_number.length % 2 != 0 )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^for  ( pos = 0; pos < number.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( tmp = 0; pos < pos_number.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( tmp_number = 0; pos < pos.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( tmp_number.length = 0; pos < pos; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Operator]^for  ( pos = 0; pos <= tmp_number.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^tmp_number[pos++] = number[pos];^46^^^^^32^57^tmp_number[pos++] = tmp_number[pos];^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^for  ( pos = pos; pos < tmp_number.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^byte tmp = -1;^43^^^^^32^57^byte tmp = 0;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( pos = 0; pos < tmp_number.length.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( pos = 0; pos < tmp_number_number.length; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( pos = 0; pos < tmp; pos++ )  {^44^^^^^32^57^for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^tmp = number[pos];^45^^^^^32^57^tmp = tmp_number[pos];^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^ret = number[0] & 0xFF;^51^^^^^32^57^ret = tmp_number[0] & 0xFF;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Operator]^ret = tmp_number[0]  >  0xFF;^51^^^^^32^57^ret = tmp_number[0] & 0xFF;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^for  ( pos = 1; pos < number.length; pos++ )  {^52^^^^^32^57^for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( tmp_number.length = 1; pos < pos; pos++ )  {^52^^^^^32^57^for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Argument_Swapping]^for  ( tmp_number = 1; pos < pos.length; pos++ )  {^52^^^^^32^57^for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Operator]^for  ( pos = 1; pos > tmp_number.length; pos++ )  {^52^^^^^32^57^for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^ret <<= 9;^53^^^^^32^57^ret <<= 8;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Variable_Misuse]^ret |= number[pos] & 0xFF;^54^^^^^32^57^ret |= tmp_number[pos] & 0xFF;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Operator]^ret |= tmp_number[pos]  |  0xFF;^54^^^^^32^57^ret |= tmp_number[pos] & 0xFF;^[CLASS] CpioUtil  [METHOD] byteArray2long [RETURN_TYPE] long   final byte[] number final boolean swapHalfWord [VARIABLES] byte[]  number  tmp_number  boolean  swapHalfWord  byte  tmp  long  ret  int  pos  
[BugLab_Wrong_Literal]^int pos = 1;^74^^^^^72^97^int pos = 0;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^long tmp_number = length;^75^^^^^72^97^long tmp_number = 0;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Variable_Misuse]^if  ( pos % 2 != 0 || length < 2 )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^if  ( length % 2 != 0 && length < 2 )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^if  ( length % 2 == 0 || length < 2 )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^if  ( length  >>  2 != 0 || length < 2 )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^if  ( length % 2 != 0 || length > 2 )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^if  ( length % pos != 0 || length < pos )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^if  ( length % 3 != 0 || length < 3 )  {^77^^^^^72^97^if  ( length % 2 != 0 || length < 2 )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Variable_Misuse]^tmp_number = tmp_number;^81^^^^^72^97^tmp_number = number;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Argument_Swapping]^for  ( length = pos - 1; pos >= 0; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^for  ( pos = length  >>  1; pos >= 0; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^for  ( pos = length - 1; pos > 0; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^for  ( pos = length ; pos >= 0; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^for  ( pos = length - 1; pos >= 1; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Variable_Misuse]^ret[pos] =  ( byte )   ( number & 0xFF ) ;^83^^^^^72^97^ret[pos] =  ( byte )   ( tmp_number & 0xFF ) ;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^ret[pos] =  ( byte )   ( tmp_number  !=  0xFF ) ;^83^^^^^72^97^ret[pos] =  ( byte )   ( tmp_number & 0xFF ) ;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^tmp_number >>= length;^84^^^^^72^97^tmp_number >>= 8;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Variable_Misuse]^for  ( pos = pos - 1; pos >= 0; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^for  ( pos = length  ||  1; pos >= 0; pos-- )  {^82^^^^^72^97^for  ( pos = length - 1; pos >= 0; pos-- )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^ret[pos] =  ( byte )   ( tmp_number  ^  0xFF ) ;^83^^^^^72^97^ret[pos] =  ( byte )   ( tmp_number & 0xFF ) ;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Variable_Misuse]^for  ( pos = 0; pos < pos; pos++ )  {^89^^^^^72^97^for  ( pos = 0; pos < length; pos++ )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Argument_Swapping]^for  ( length = 0; pos < pos; pos++ )  {^89^^^^^72^97^for  ( pos = 0; pos < length; pos++ )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^for  ( pos = 0; pos <= length; pos++ )  {^89^^^^^72^97^for  ( pos = 0; pos < length; pos++ )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^for  ( pos = pos; pos < length; pos++ )  {^89^^^^^72^97^for  ( pos = 0; pos < length; pos++ )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^for  ( pos = length; pos < length; pos++ )  {^89^^^^^72^97^for  ( pos = 0; pos < length; pos++ )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^byte tmp = ;^88^^^^^72^97^byte tmp = 0;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Operator]^for  ( pos = 0; pos == length; pos++ )  {^89^^^^^72^97^for  ( pos = 0; pos < length; pos++ )  {^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
[BugLab_Wrong_Literal]^byte tmp = pos;^88^^^^^72^97^byte tmp = 0;^[CLASS] CpioUtil  [METHOD] long2byteArray [RETURN_TYPE] byte[]   final long number final int length final boolean swapHalfWord [VARIABLES] byte[]  ret  boolean  swapHalfWord  byte  tmp  long  number  tmp_number  int  length  pos  
