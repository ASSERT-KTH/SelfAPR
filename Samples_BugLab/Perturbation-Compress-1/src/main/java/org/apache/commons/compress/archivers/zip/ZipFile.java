[buglab_swap_variables]^this ( new File ( encoding ) , name, true ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[buglab_swap_variables]^this ( new File ( name ) ,  true ) ;^145^^^^^144^146^this ( new File ( name ) , encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   String name String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[buglab_swap_variables]^this ( encoding, f, true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[buglab_swap_variables]^this (  encoding, true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[buglab_swap_variables]^this ( f,  true ) ;^159^^^^^158^160^this ( f, encoding, true ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] <init> [RETURN_TYPE] String)   File f String encoding [VARIABLES] byte[]  comment  name  boolean  addDummyByte  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  nameMap  File  f  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  
[buglab_swap_variables]^return  ( ZipArchiveEntry )  nameMapMap.get ( name ) ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^return  ( ZipArchiveEntry )  name.get ( nameMap ) ;^244^^^^^243^245^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getEntry [RETURN_TYPE] ZipArchiveEntry   String name [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^OffsetEntry offsetEntry =  ( OffsetEntry )  ze.get ( entries ) ;^257^^^^^255^274^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^long start = offsetEntry.dataOffset.dataOffset;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^long start = offsetEntry;^261^^^^^255^274^long start = offsetEntry.dataOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^new BoundedInputStream ( ze, start.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^new BoundedInputStream (  ze.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^new BoundedInputStream ( start.getCompressedSize (  )  ) ;^263^^^^^255^274^new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^BoundedInputStream bis = new BoundedInputStream ( ze, start.getCompressedSize (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^BoundedInputStream bis = new BoundedInputStream (  ze.getCompressedSize (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^BoundedInputStream bis = new BoundedInputStream ( start.getCompressedSize (  )  ) ;^262^263^^^^255^274^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getInputStream [RETURN_TYPE] InputStream   ZipArchiveEntry ze [VARIABLES] byte[]  comment  name  boolean  addDummyByte  success  useUnicodeExtraFields  ZipEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  BoundedInputStream  bis  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  long  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start  
[buglab_swap_variables]^if  ( cfhSig != sig && startsWithLocalFileHeader (  )  )  {^318^^^^^303^333^if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^while  ( cfhSig == sig )  {^322^^^^^307^337^while  ( sig == cfhSig )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^while  ( sig == cfh )  {^322^^^^^307^337^while  ( sig == cfhSig )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^noEFS.put ( ze, new NameAndComment ( comment, fileName )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^noEFS.put ( ze, new NameAndComment (  comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^noEFS.put ( ze, new NameAndComment ( fileName )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^noEFS.put (  new NameAndComment ( fileName, comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^offset.headerOffset = ZipLong.getValue ( off, cfh ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^offset.headerOffset = ZipLong.getValue (  off ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^offset.headerOffset = ZipLong.getValue ( cfh ) ;^383^^^^^368^398^offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int versionMadeBy = ZipShort.getValue ( off, cfh ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int versionMadeBy = ZipShort.getValue (  off ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int versionMadeBy = ZipShort.getValue ( cfh ) ;^327^^^^^312^342^int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final int generalPurposeFlag = ZipShort.getValue ( off, cfh ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final int generalPurposeFlag = ZipShort.getValue (  off ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final int generalPurposeFlag = ZipShort.getValue ( cfh ) ;^333^^^^^318^348^final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final boolean hasEFS = ( ZipArchiveOutputStream.EFS_FLAG & generalPurposeFlag )  != 0;^334^335^^^^319^349^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final ZipEncoding entryEncoding = zipEncoding ? ZipEncodingHelper.UTF8_ZIP_ENCODING : hasEFS;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final ZipEncoding entryEncoding = hasEFS ? zipEncoding : ZipEncodingHelper.UTF8_ZIP_ENCODING;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( off, cfh )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue (  off )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh )  ) ;^347^^^^^332^362^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int fileNameLen = ZipShort.getValue ( off, cfh ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int fileNameLen = ZipShort.getValue (  off ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int fileNameLen = ZipShort.getValue ( cfh ) ;^360^^^^^345^375^int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int extraLen = ZipShort.getValue ( off, cfh ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int extraLen = ZipShort.getValue (  off ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int extraLen = ZipShort.getValue ( cfh ) ;^363^^^^^348^378^int extraLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int commentLen = ZipShort.getValue ( off, cfh ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int commentLen = ZipShort.getValue (  off ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^int commentLen = ZipShort.getValue ( cfh ) ;^366^^^^^351^381^int commentLen = ZipShort.getValue ( cfh, off ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setPlatform (  ( NIBLET_MASK >> BYTE_SHIFT )  & versionMadeBy ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setPlatform (  ( BYTE_SHIFT >> versionMadeBy )  & NIBLET_MASK ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setPlatform (  ( versionMadeBy >> NIBLET_MASK )  & BYTE_SHIFT ) ;^329^^^^^314^344^ze.setPlatform (  ( versionMadeBy >> BYTE_SHIFT )  & NIBLET_MASK ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setMethod ( ZipShort.getValue ( off, cfh )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setMethod ( ZipShort.getValue (  off )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setMethod ( ZipShort.getValue ( cfh )  ) ;^341^^^^^326^356^ze.setMethod ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setCrc ( ZipLong.getValue ( off, cfh )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setCrc ( ZipLong.getValue (  off )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setCrc ( ZipLong.getValue ( cfh )  ) ;^351^^^^^336^366^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setCompressedSize ( ZipLong.getValue ( off, cfh )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setCompressedSize ( ZipLong.getValue (  off )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setCompressedSize ( ZipLong.getValue ( cfh )  ) ;^354^^^^^339^369^ze.setCompressedSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setSize ( ZipLong.getValue (  off )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setSize ( ZipLong.getValue ( off, cfh )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setSize ( ZipLong.getValue ( cfh )  ) ;^357^^^^^342^372^ze.setSize ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setInternalAttributes ( ZipShort.getValue (  off )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setInternalAttributes ( ZipShort.getValue ( cfh )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setInternalAttributes ( ZipShort.getValue ( off, cfh )  ) ;^371^^^^^356^386^ze.setInternalAttributes ( ZipShort.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setExternalAttributes ( ZipLong.getValue ( off, cfh )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setExternalAttributes ( ZipLong.getValue (  off )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setExternalAttributes ( ZipLong.getValue ( cfh )  ) ;^374^^^^^359^389^ze.setExternalAttributes ( ZipLong.getValue ( cfh, off )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setName ( fileName.decode ( entryEncoding )  ) ;^379^^^^^364^394^ze.setName ( entryEncoding.decode ( fileName )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^entries.put (  offset ) ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^entries.put ( offset, ze ) ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^entries.put ( ze ) ;^385^^^^^370^400^entries.put ( ze, offset ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^nameMap.put ( ze.getName (  )  ) ;^387^^^^^372^402^nameMap.put ( ze.getName (  ) , ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^ze.setComment ( comment.decode ( entryEncoding )  ) ;^395^^^^^380^410^ze.setComment ( entryEncoding.decode ( comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^noEFS.put ( fileName, new NameAndComment ( ze, comment )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^noEFS.put ( comment, new NameAndComment ( fileName, ze )  ) ;^401^^^^^386^416^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^final ZipEncoding entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING ? hasEFS : zipEncoding;^336^337^^^^321^351^final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] populateFromCentralDirectory [RETURN_TYPE] Map   [VARIABLES] byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  HashMap  noEFS  OffsetEntry  offset  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time  
[buglab_swap_variables]^long off = MIN_EOCD_SIZE.length (  )  - archive;^444^^^^^429^459^long off = archive.length (  )  - MIN_EOCD_SIZE;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^long stopSearching = Math.max ( 0L, MAX_EOCD_SIZE.length (  )  - archive ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^long stopSearching = Math.max ( 0L.length (  )  - MAX_EOCD_SIZE ) ;^445^^^^^430^460^long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^while  ( stopSearching >= off && curr != -1 )  {^450^^^^^435^465^while  ( off >= stopSearching && curr != -1 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( sig == curr[POS_0] )  {^451^^^^^436^466^if  ( curr == sig[POS_0] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( sig == curr[POS_3] )  {^457^^^^^442^472^if  ( curr == sig[POS_3] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( sig == curr[POS_1] )  {^453^^^^^438^468^if  ( curr == sig[POS_1] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( sig == curr[POS_2] )  {^455^^^^^440^470^if  ( curr == sig[POS_2] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^archive.seek ( CFD_LOCATOR_OFFSET + off ) ;^471^^^^^456^486^archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] positionAtCentralDirectory [RETURN_TYPE] void   [VARIABLES] byte[]  cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^int skipped = lenToSkip.skipBytes ( archive ) ;^514^^^^^499^529^int skipped = archive.skipBytes ( lenToSkip ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( ze.containsKey ( entriesWithoutEFS )  )  {^531^^^^^516^546^if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^setNameAndCommentFromExtraFields ( entriesWithoutEFS, ( NameAndComment ) ze.get ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^setNameAndCommentFromExtraFields (  ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^532^533^534^^^517^547^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = LFH_OFFSET_FOR_FILENAME_LENGTH + offset + SHORT + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + extraFieldLen + fileNameLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + extraFieldLen + SHORT + fileNameLen + SHORT;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = SHORT + LFH_OFFSET_FOR_FILENAME_LENGTH + offset + SHORT + fileNameLen + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^OffsetEntry offsetEntry =  ( OffsetEntry )  ze.get ( entries ) ;^504^^^^^489^519^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^long offset = offsetEntry.headerOffset.headerOffset;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^long offset = offsetEntry;^505^^^^^490^520^long offset = offsetEntry.headerOffset;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^archive.seek ( LFH_OFFSET_FOR_FILENAME_LENGTH + offset ) ;^506^^^^^491^521^archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = extraFieldLen + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + offset;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = fileNameLen + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + offset + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + fileNameLen + SHORT + SHORT + extraFieldLen;^528^529^^^^513^543^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void   Map entriesWithoutEFS [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  Enumeration  e  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offsetEntry  ZipArchiveEntry  ze  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( ZipArchiveOutputStream.LFH_SIG[i] != start[i] )  {^548^^^^^543^553^if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^for  ( start.lengthnt i = 0; i < i; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^for  ( startnt i = 0; i < i.length; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^for  ( int i = 0; i < start; i++ )  {^547^^^^^543^553^for  ( int i = 0; i < start.length; i++ )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] startsWithLocalFileHeader [RETURN_TYPE] boolean   [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newName = getUnicodeStringIfOriginalMatches ( nc, name.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newName = getUnicodeStringIfOriginalMatches (  nc.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newName = getUnicodeStringIfOriginalMatches ( name.name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newName = getUnicodeStringIfOriginalMatches ( nc.name, name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newName = getUnicodeStringIfOriginalMatches ( name ) ;^565^^^^^560^581^String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^nameMap.put ( ze, newName ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^nameMap.put (  ze ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^nameMap.put ( newName ) ;^569^^^^^560^581^nameMap.put ( newName, ze ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( nc != null && nc.comment.comment.length > 0 )  {^572^^^^^560^581^if  ( nc.comment != null && nc.comment.length > 0 )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches ( nc.comment, cmt ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches (  nc.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches ( cmt.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches ( cmt ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^getUnicodeStringIfOriginalMatches ( nc, cmt.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^getUnicodeStringIfOriginalMatches (  nc.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^getUnicodeStringIfOriginalMatches ( cmt.comment ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^getUnicodeStringIfOriginalMatches ( nc.comment, cmt ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^getUnicodeStringIfOriginalMatches ( cmt ) ;^576^^^^^560^581^getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^String newComment = getUnicodeStringIfOriginalMatches ( nc, cmt.comment ) ;^575^576^^^^560^581^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] setNameAndCommentFromExtraFields [RETURN_TYPE] void   ZipArchiveEntry ze NameAndComment nc [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  UnicodePathExtraField  name  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  UnicodeCommentExtraField  cmt  ZipArchiveEntry  ze  String  encoding  name  newComment  newName  originalName  NameAndComment  nc  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( f == origCRC32.getNameCRC32 (  )  )  {^597^^^^^590^611^if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] getUnicodeStringIfOriginalMatches [RETURN_TYPE] String   AbstractUnicodeExtraField f byte[] orig [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  AbstractUnicodeExtraField  f  CRC32  crc32  String  encoding  name  newComment  newName  originalName  IOException  ex  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^if  ( remaining > len )  {^656^^^^^642^669^if  ( len > remaining )  {^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = archive.read ( off, b, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = archive.read (  off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = off.read ( b, archive, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = archive.read ( b,  len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = archive.read ( b, len, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = archive.read ( b, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = len.read ( b, off, archive ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = b.read ( archive, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  boolean  addDummyByte  found  hasEFS  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  String  encoding  name  newComment  newName  originalName  Map  entries  entriesWithoutEFS  nameMap  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  long  LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time  
[buglab_swap_variables]^ret = b.read ( archive, off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = archive.read (  off, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = archive.read ( b, len, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = archive.read ( b,  len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = archive.read ( len, off, b ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = archive.read ( b, off ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = len.read ( b, off, archive ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
[buglab_swap_variables]^ret = off.read ( b, archive, len ) ;^662^^^^^642^669^ret = archive.read ( b, off, len ) ;^[CLASS] BoundedInputStream  [METHOD] read [RETURN_TYPE] int   byte[] b int off int len [VARIABLES] byte[]  b  boolean  addDummyByte  long  loc  remaining  start  int  len  off  ret  
