[buglab_swap_variables]^int     end = length + offset;^42^^^^^39^66^int     end = offset + length;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[buglab_swap_variables]^result =  ( header << 3 )  +  ( result[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[buglab_swap_variables]^int          end = length + offset;^78^^^^^76^89^int          end = offset + length;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^for  ( int i = end; i < offset; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^for  ( offsetnt i = i; i < end; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^for  ( endnt i = offset; i < i; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^for  ( length = 0; i < i && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^for  ( name = 0; i < length && i < i.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^buf[offset + name] =  ( byte )  i.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^for  ( ; length < i; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^return length + offset;^111^^^^^100^112^return offset + length;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[buglab_swap_variables]^if  ( val == 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[buglab_swap_variables]^if  ( valueue == 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[buglab_swap_variables]^for  ( long value = val; idx >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[buglab_swap_variables]^for  ( long idx = value; val >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[buglab_swap_variables]^buf[offset + val] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( idx & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[buglab_swap_variables]^return length + offset;^147^^^^^123^148^return offset + length;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[buglab_swap_variables]^getOctalBytes ( length, temp, 0, value + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes (  temp, 0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value, length, 0, temp + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value,  0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value, temp, 0 + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy ( buf, 0, temp, offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy (  0, buf, offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy ( temp, 0, offset, buf, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy ( temp, 0,  offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy ( temp, 0, buf,  length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy ( length, 0, buf, offset, temp ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^System.arraycopy ( temp, 0, buf, offset ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^return length + offset;^165^^^^^159^166^return offset + length;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( length, buf, offset, value ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes (  buf, offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value, length, offset, buf ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value,  offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( offset, buf, value, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value, buf,  length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^getOctalBytes ( value, buf, offset ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^return length + offset;^183^^^^^177^184^return offset + length;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[buglab_swap_variables]^for  ( buf.lengthnt i = 0; i < i; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[buglab_swap_variables]^for  ( bufnt i = 0; i < i.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[buglab_swap_variables]^sum += buf & BYTE_MASK[i];^196^^^^^192^200^sum += BYTE_MASK & buf[i];^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
