[BugLab_Argument_Swapping]^changes.add ( new Change ( pInput, pEntry )  ) ;^47^^^^^46^48^changes.add ( new Change ( pEntry, pInput )  ) ;^[CLASS] ChangeSet  [METHOD] add [RETURN_TYPE] void   ArchiveEntry pEntry InputStream pInput [VARIABLES] ArchiveEntry  pEntry  Set  changes  boolean  InputStream  pInput  
[BugLab_Wrong_Operator]^while  (  ( entry = in.getNextEntry (  )  )  == null )  {^57^^^^^42^72^while  (  ( entry = in.getNextEntry (  )  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^if  ( change.type (  )  != Change.TYPE_ADD )  {^63^^^^^48^78^if  ( change.type (  )  == Change.TYPE_ADD )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^copyStream ( out.getInput (  ) , change, change.getEntry (  )  ) ;^64^^^^^49^79^copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Variable_Misuse]^if  ( change.type (  )  == 4 && entry.getName (  )  != null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^if  ( entry.type (  )  == Change.TYPE_DELETE && change.getName (  )  != null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^if  ( change.type (  )  == entry && Change.TYPE_DELETE.getName (  )  != null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^if  ( Change.TYPE_DELETE.type (  )  == change && entry.getName (  )  != null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^if  ( change.type (  )  == Change.TYPE_DELETE || entry.getName (  )  != null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^if  ( change.type (  )  != Change.TYPE_DELETE && entry.getName (  )  != null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  == null )  {^68^69^^^^53^83^if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^if  ( change.getName (  ) .equals ( entry.targetFile (  )  )  )  {^70^^^^^68^79^if  ( entry.getName (  ) .equals ( change.targetFile (  )  )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^} else if  ( change.getName (  ) .matches ( entry.targetFile (  )  + "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   ==  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Literal]^copy = true;^76^^^^^68^79^copy = false;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   ||  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Literal]^copy = true;^71^^^^^68^79^copy = false;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   ^  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   >=  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^if  ( change.getName (  ) .equals ( entry.targetFile (  )  )  )  {^70^^^^^55^85^if  ( entry.getName (  ) .equals ( change.targetFile (  )  )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^} else if  ( change.getName (  ) .matches ( entry.targetFile (  )  + "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   <  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Literal]^copy = true;^76^^^^^74^78^copy = false;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Literal]^copy = true;^76^^^^^61^91^copy = false;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   >>  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Literal]^copy = true;^71^^^^^56^86^copy = false;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   &  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^copyStream ( out, in, entry ) ;^84^^^^^69^99^copyStream ( in, out, entry ) ;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^copyStream ( in, entry, out ) ;^84^^^^^69^99^copyStream ( in, out, entry ) ;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^copyStream ( entry, out, in ) ;^84^^^^^69^99^copyStream ( in, out, entry ) ;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   !=  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   <<  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )    instanceof   "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   !=  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Literal]^boolean copy = false;^58^^^^^43^73^boolean copy = true;^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^if  ( Change.TYPE_ADD.type (  )  == change )  {^63^^^^^48^78^if  ( change.type (  )  == Change.TYPE_ADD )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^if  ( change.type (  )  > Change.TYPE_ADD )  {^63^^^^^48^78^if  ( change.type (  )  == Change.TYPE_ADD )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   &  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   >=  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Argument_Swapping]^for  ( Iterator it = changess.iterator (  ) ; it.hasNext (  ) ; )  {^60^^^^^45^75^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^if  ( change.type (  )  <= Change.TYPE_ADD )  {^63^^^^^48^78^if  ( change.type (  )  == Change.TYPE_ADD )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   |  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   <  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )    instanceof   "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   >>  "/.*" )  )  {^74^75^^^^68^79^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   >  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   ||  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Wrong_Operator]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   ==  "/.*" )  )  {^74^75^^^^59^89^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] perform [RETURN_TYPE] void   ArchiveInputStream in ArchiveOutputStream out [VARIABLES] ArchiveInputStream  in  Set  changes  boolean  copy  Iterator  it  ArchiveEntry  entry  Change  change  ArchiveOutputStream  out  
[BugLab_Variable_Misuse]^if  ( Change.TYPE_DELETE != change.type (  ) || pChange.targetFile (  )  == null )  {^91^92^^^^90^113^if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  == null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^if  ( pChange != Change.TYPE_DELETE.type (  ) || pChange.targetFile (  )  == null )  {^91^92^^^^90^113^if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  == null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( Change.TYPE_DELETE != pChange.type (  ) && pChange.targetFile (  )  == null )  {^91^92^^^^90^113^if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  == null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( Change.TYPE_DELETE == pChange.type (  ) || pChange.targetFile (  )  == null )  {^91^92^^^^90^113^if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  == null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  != null )  {^91^92^^^^90^113^if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  == null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^|| change.targetFile (  )  == null )  {^92^^^^^90^113^|| pChange.targetFile (  )  == null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^String source = change.targetFile (  ) ;^95^^^^^90^113^String source = pChange.targetFile (  ) ;^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^if  ( pChange.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^100^101^^^^90^113^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( change.type (  )  == Change.TYPE_ADD || change.getEntry (  )  != null )  {^100^101^^^^90^113^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( change.type (  )  != Change.TYPE_ADD && change.getEntry (  )  != null )  {^100^101^^^^90^113^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  == null )  {^100^101^^^^90^113^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^if  ( target.equals ( source )  )  {^104^^^^^90^113^if  ( source.equals ( target )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^} else if  ( source.matches ( target + "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  >>  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  ||  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^} else if  ( source.matches ( source + "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  |  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^String target = pChange.getEntry (  ) .getName (  ) ;^102^^^^^90^113^String target = change.getEntry (  ) .getName (  ) ;^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  &&  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  >  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^for  ( Iterator it = pChanges.iterator (  ) ; it.hasNext (  ) ; )  {^98^^^^^90^113^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^for  ( Iterator change = its.iterator (  ) ; it.hasNext (  ) ; )  {^98^^^^^90^113^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^if  ( Change.TYPE_ADD.type (  )  == change && change.getEntry (  )  != null )  {^100^101^^^^90^113^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^} else if  ( target.matches ( target + "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  ^  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  <=  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  !=  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^&& pChange.getEntry (  )  != null )  {^101^^^^^90^113^&& change.getEntry (  )  != null )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source   instanceof   "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^if  ( target.equals ( target )  )  {^104^^^^^90^113^if  ( source.equals ( target )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^if  ( source.equals ( source )  )  {^104^^^^^90^113^if  ( source.equals ( target )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  &  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  <<  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^for  ( Iterator changes = it.iterator (  ) ; it.hasNext (  ) ; )  {^98^^^^^90^113^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Argument_Swapping]^for  ( Iterator it = changess.iterator (  ) ; it.hasNext (  ) ; )  {^98^^^^^90^113^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  <  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^} else if  ( target.matches ( source  >=  "/.*" )  )  {^106^^^^^90^113^} else if  ( target.matches ( source + "/.*" )  )  {^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Variable_Misuse]^changes.add ( change ) ;^112^^^^^90^113^changes.add ( pChange ) ;^[CLASS] ChangeSet  [METHOD] addDeletion [RETURN_TYPE] void   Change pChange [VARIABLES] Iterator  it  Set  changes  Change  change  pChange  String  source  target  boolean  
[BugLab_Wrong_Operator]^if  ( change.type (  )  != Change.TYPE_DELETE )  {^121^^^^^115^133^if  ( change.type (  )  == Change.TYPE_DELETE )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Argument_Swapping]^if  ( target.equals ( source )  )  {^124^^^^^115^133^if  ( source.equals ( target )  )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Literal]^return false;^125^^^^^115^133^return true;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Argument_Swapping]^return target.matches ( source + "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  ==  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  ||  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Argument_Swapping]^if  ( Change.TYPE_DELETE.type (  )  == change )  {^121^^^^^115^133^if  ( change.type (  )  == Change.TYPE_DELETE )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^if  ( change.type (  )  >= Change.TYPE_DELETE )  {^121^^^^^115^133^if  ( change.type (  )  == Change.TYPE_DELETE )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  ^  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  <<  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  <  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  >=  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  &  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Argument_Swapping]^for  ( Iterator changes = it.iterator (  ) ; it.hasNext (  ) ; )  {^119^^^^^115^133^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Argument_Swapping]^for  ( Iterator it = change.iterator (  ) ; it.hasNext (  ) ; )  {^119^^^^^115^133^for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^if  ( change.type (  )  < Change.TYPE_DELETE )  {^121^^^^^115^133^if  ( change.type (  )  == Change.TYPE_DELETE )  {^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  &&  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  !=  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  <=  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Operator]^return source.matches ( target  >  "/.*" ) ;^128^^^^^115^133^return source.matches ( target + "/.*" ) ;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Wrong_Literal]^return true;^132^^^^^115^133^return false;^[CLASS] ChangeSet  [METHOD] isDeletedLater [RETURN_TYPE] boolean   ArchiveEntry entry [VARIABLES] Iterator  it  ArchiveEntry  entry  Set  changes  String  source  target  Change  change  boolean  
[BugLab_Argument_Swapping]^IOUtils.copy ( out, in ) ;^138^^^^^135^140^IOUtils.copy ( in, out ) ;^[CLASS] ChangeSet  [METHOD] copyStream [RETURN_TYPE] void   InputStream in ArchiveOutputStream out ArchiveEntry entry [VARIABLES] ArchiveEntry  entry  Set  changes  boolean  InputStream  in  ArchiveOutputStream  out  
