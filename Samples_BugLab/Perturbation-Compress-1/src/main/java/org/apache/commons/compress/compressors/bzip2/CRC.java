[BugLab_Variable_Misuse]^globalCrc = globalCrc;^110^^^^^109^111^globalCrc = newCrc;^[CLASS] CRC  [METHOD] setGlobalCRC [RETURN_TYPE] void   int newCrc [VARIABLES] int[]  crc32Table  int  globalCrc  newCrc  boolean  
[BugLab_Variable_Misuse]^int temp =  ( globalCrc >> 24 )  ^ newCrc;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Variable_Misuse]^int temp =  ( newCrc >> 24 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Argument_Swapping]^int temp =  ( inCh >> 24 )  ^ globalCrc;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Operator]^int temp =  ( globalCrc  >  24 )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Literal]^int temp =  ( globalCrc >> temp )  ^ inCh;^114^^^^^113^119^int temp =  ( globalCrc >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Variable_Misuse]^if  ( newCrc < 0 )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Operator]^if  ( temp <= 0 )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Literal]^if  ( temp < inCh )  {^115^^^^^113^119^if  ( temp < 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Variable_Misuse]^temp = 256 + newCrc;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Literal]^temp = 255 + temp;^116^^^^^113^119^temp = 256 + temp;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Variable_Misuse]^globalCrc =  ( temp << 8 )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Operator]^globalCrc =  ( globalCrc  !=  8 )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Wrong_Literal]^globalCrc =  ( globalCrc << inCh )  ^ CRC.crc32Table[temp];^118^^^^^113^119^globalCrc =  ( globalCrc << 8 )  ^ CRC.crc32Table[temp];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh [VARIABLES] int[]  crc32Table  int  globalCrc  inCh  newCrc  temp  boolean  
[BugLab_Variable_Misuse]^int globalCrcShadow = temp;^122^^^^^121^130^int globalCrcShadow = this.globalCrc;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^while  ( repeat-- >= 0 )  {^123^^^^^121^130^while  ( repeat-- > 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^while  ( repeat-- >  )  {^123^^^^^121^130^while  ( repeat-- > 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^while  ( repeat-- > inCh )  {^123^^^^^121^130^while  ( repeat-- > 0 )  {^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Variable_Misuse]^globalCrcShadow =  ( repeat << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Variable_Misuse]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( repeat >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Argument_Swapping]^globalCrcShadow =  ( temp << 8 )  ^ crc32Table[ ( globalCrcShadow >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Argument_Swapping]^globalCrcShadow =  ( crc32Table << 8 )  ^ globalCrcShadow[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^globalCrcShadow =  ( globalCrcShadow  ^  8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp > 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp  !=  256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^globalCrcShadow =  ( globalCrcShadow << temp )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 1 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + globalCrc ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Variable_Misuse]^int temp =  ( repeat >> 24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Variable_Misuse]^int temp =  ( globalCrcShadow >> 24 )  ^ repeat;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Argument_Swapping]^int temp =  ( inCh >> 24 )  ^ globalCrcShadow;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^int temp =  ( globalCrcShadow  ^  24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Variable_Misuse]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( newCrc >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Argument_Swapping]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ temp[ ( crc32Table >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^globalCrcShadow =  ( globalCrcShadow  |  8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp  <=  256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^globalCrcShadow =  ( globalCrcShadow << globalCrc )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= globalCrcShadow ) ? temp :  ( temp + 256 ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Literal]^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp  ) ];^125^126^127^^^121^130^globalCrcShadow =  ( globalCrcShadow << 8 )  ^ crc32Table[ ( temp >= 0 ) ? temp :  ( temp + 256 ) ];^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Wrong_Operator]^int temp =  ( globalCrcShadow   instanceof   24 )  ^ inCh;^124^^^^^121^130^int temp =  ( globalCrcShadow >> 24 )  ^ inCh;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
[BugLab_Variable_Misuse]^this.globalCrc = temp;^129^^^^^121^130^this.globalCrc = globalCrcShadow;^[CLASS] CRC  [METHOD] updateCRC [RETURN_TYPE] void   int inCh int repeat [VARIABLES] int[]  crc32Table  int  globalCrc  globalCrcShadow  inCh  newCrc  repeat  temp  boolean  
