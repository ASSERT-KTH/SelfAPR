[buglab_swap_variables]^useEFS = encoding && ZipEncodingHelper.isUTF8 ( b ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^for  ( Iterator entries = i.iterator (  ) ; i.hasNext (  ) ;  )  {^339^^^^^336^346^for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^cdLength = cdOffset - written;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^long size = dataStart - written;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( realCrc.getCrc (  )  != entry )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( dataStart.getSize (  )  != written - entry )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( entry.getSize (  )  != dataStart - written )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( written.getSize (  )  != entry - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^long size = dataStart - written;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( raf.getMethod (  )  == STORED && entry == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( STORED.getMethod (  )  == entry && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^hasCompressionLevelChanged =  ( level != this.level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( offset, b, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut (  offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( b, length, offset ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( b,  length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( b, offset ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( DEFLATER_BLOCK_SIZE <= length )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( length, offset + done, b - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput (  offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset +  length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + length, done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^for  ( fullblocksnt i = 0; i < i; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( DEFLATER_BLOCK_SIZE, offset + i * b, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput (  offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, i + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, DEFLATER_BLOCK_SIZE + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + i *  DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^final int fullblocks = DEFLATER_BLOCK_SIZE / length;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^final int done = DEFLATER_BLOCK_SIZE * fullblocks;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( offset, b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, length + done, offset - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, done + offset, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( offset, b, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput (  offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, length, offset ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b,  length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( offset, b + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput (  offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, length + done, offset - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, done + offset, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset +  length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + done - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( offset, b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput (  offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, i + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, DEFLATER_BLOCK_SIZE + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + i *  DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^final int fullblocks = DEFLATER_BLOCK_SIZE / length;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^final int done = DEFLATER_BLOCK_SIZE * fullblocks;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( length < done )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( i, offset + b * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( done, offset + b, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( b, offset + length, done - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( DEFLATER_BLOCK_SIZE, offset + i * b, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( i, offset + b * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( done, offset + b, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( length, offset + done, b - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^for  ( fullblocksnt i = 0; i < i; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( offset, b + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^def.setInput ( length, offset, b ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( length < done )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( length, offset, b ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut (  offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( b, length, offset ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( b,  length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( b, offset ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^crc.update ( length, offset, b ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^crc.update (  offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^crc.update ( b, length, offset ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^crc.update ( b,  length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^crc.update ( b, offset ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^buff[0] =  ( BYTE_MASKyte )   ( b & b ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^write ( b.length, 0, b ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^write (  0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^write ( b, 0 ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int len = buf.length.deflate ( buf, 0, def ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int len = buf.deflate ( def, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int len = def.deflate (  0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int len = def.deflate ( buf, 0 ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int len = def.deflate ( buf.length, 0, buf ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( len, 0, buf ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( buf, 0 ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut (  0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^boolean encodable = ze.canEncode ( zipEncoding.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ByteBuffer name = ze.encode ( entryEncoding.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodePathExtraField ( name.getName (  ) , ze.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) .array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodeCommentExtraField ( commentB, comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodeCommentExtraField (  commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodeCommentExtraField ( comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodeCommentExtraField ( commentB, comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodeCommentExtraField (  commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodeCommentExtraField ( comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^boolean this.zipEncodingentEncodable = comm.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodePathExtraField ( name.getName (  ) , ze.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) .array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^offsets.put (  ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeVersionNeededToExtractAndGeneralPurposeBits (  !encodable && fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( DEFLATED == zipMethod || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( ZipShort.getBytes ( extra.length.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( ZipShort.getBytes ( extra )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^written += extra.length.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^written += extra;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( DEFLATED.getMethod (  )  != ze || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( ze.getMethod (  )  != raf || DEFLATED != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^final boolean encodable = ze.canEncode ( zipEncoding.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeVersionNeededToExtractAndGeneralPurposeBits ( fallbackToUTF8, !encodable && zipMethod ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeVersionNeededToExtractAndGeneralPurposeBits (  !encodable && fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ByteBuffer name = ze.encode ( entryEncoding.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( ZipShort.getBytes ( extra.length.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( ZipShort.getBytes ( extra )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut (  ( byte[] )  ze.get ( offsets )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^written += extra.length.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^written += extra;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^ByteBuffer data = comment.encode ( this.zipEncoding ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( data.length, 0, data ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut (  0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^writeOut ( data, 0 ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^out.write (  offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^out.write ( data, length, offset ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^out.write ( data,  length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^out.write ( length, offset, data ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^out.write ( data, offset ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^raf.write ( length, offset, data ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^raf.write (  offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^raf.write ( offset, data, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^raf.write ( data,  length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^raf.write ( data, length, offset ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^raf.write ( data, offset ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^out.write ( offset, data, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int generalPurposeFlag =  ( utfFallback || useEFS )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^int generalPurposeFlag =  ( useEFS || EFS_FLAG )  ? utfFallback : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( DEFLATED == zipMethod && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[buglab_swap_variables]^if  ( zipMethod == raf && DEFLATED == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
