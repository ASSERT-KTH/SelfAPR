[BugLab_Wrong_Literal]^private static final int BUFFER_SIZE = 513;^63^^^^^58^68^private static final int BUFFER_SIZE = 512;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Variable_Misuse]^static final String DEFAULT_ENCODING = null;^91^^^^^86^96^static final String DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Operator]^public static final int EFS_FLAG = 1  |  11;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final int EFS_FLAG = 1 << 12;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean hasCompressionLevelChanged = true;^118^^^^^113^123^private boolean hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private long written = ;^138^^^^^133^143^private long written = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private long dataStart = 1;^143^^^^^138^148^private long dataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private long localDataStart = 1;^149^^^^^144^154^private long localDataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private long cdOffset = 1;^154^^^^^149^159^private long cdOffset = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private long cdLength = 1;^159^^^^^154^164^private long cdLength = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final byte[] ZERO = {1, 1};^164^^^^^159^169^private static final byte[] ZERO = {0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final byte[] LZERO = {-1, -1, -1, -1};^169^^^^^164^174^private static final byte[] LZERO = {0, 0, 0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^protected final Deflater def = new Deflater ( level, false ) ;^198^^^^^193^203^protected final Deflater def = new Deflater ( level, true ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean useEFS = false;^216^^^^^211^221^private boolean useEFS = true;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean fallbackToUTF8 = true;^221^^^^^216^226^private boolean fallbackToUTF8 = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[BugLab_Variable_Misuse]^if  ( raf != null )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[BugLab_Wrong_Operator]^if  ( _raf == null )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[BugLab_Wrong_Literal]^_raf.setLength ( BYTE_MASK ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[BugLab_Wrong_Literal]^_raf.setLength ( method ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[BugLab_Variable_Misuse]^out = out;^261^^^^^244^263^out = o;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[BugLab_Variable_Misuse]^raf = raf;^262^^^^^244^263^raf = _raf;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[BugLab_Variable_Misuse]^name = encoding;^939^^^^^938^940^name = n;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] String)   String n [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^return _raf != null;^275^^^^^274^276^return raf != null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] isSeekable [RETURN_TYPE] boolean   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^return raf == null;^275^^^^^274^276^return raf != null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] isSeekable [RETURN_TYPE] boolean   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^this.encoding = n;^288^^^^^287^291^this.encoding = encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( n ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^useEFS &= ZipEncodingHelper.isUTF8 ( name ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^return n;^299^^^^^298^300^return encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] getEncoding [RETURN_TYPE] String   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^useEFS = useEFS && ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^useEFS = b && ZipEncodingHelper.isUTF8 ( n ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^useEFS = encoding && ZipEncodingHelper.isUTF8 ( b ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^useEFS = b || ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^createUnicodeExtraFields = createUnicodeExtraFields;^318^^^^^317^319^createUnicodeExtraFields = b;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setCreateUnicodeExtraFields [RETURN_TYPE] void   UnicodeExtraFieldPolicy b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^fallbackToUTF8 = useEFS;^328^^^^^327^329^fallbackToUTF8 = b;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setFallbackToUTF8 [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^for  ( Iterator entries = i.iterator (  ) ; i.hasNext (  ) ;  )  {^339^^^^^336^346^for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^cdLength = localDataStart - cdOffset;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^cdLength = written - localDataStart;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^cdLength = cdOffset - written;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^cdLength = written  <  cdOffset;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry != null )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  == level )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  <= DEFLATED )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^} else if  ( _raf == null )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^} else if  ( raf != null )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = realCrc - dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = written - save;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^long size = dataStart - written;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^long size = written  &  dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setSize ( written ) ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCompressedSize ( written ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCrc ( size ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( realCrc.getCrc (  )  != entry )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getCrc (  )  <= realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  ==  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  <<  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  &&  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (   instanceof   )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  &&  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  >  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  >=  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  >>  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^+ Long.toHexString ( written )  ) ;^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getSize (  )  != save - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getSize (  )  != written - size )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( dataStart.getSize (  )  != written - entry )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( entry.getSize (  )  != dataStart - written )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  <= written - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != written  <=  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != written  <<  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  <  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  <<  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  >>  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  &&  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  >  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  !=  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  &  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  ||  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  ^  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  <  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  ^  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  |  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (   instanceof   )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  >=  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  &  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  !=  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  ==  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  ==  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getCrc (  )  == realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  |  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^+ Long.toHexString ( size )  ) ;^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getSize (  )  != size - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != written  &  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  >=  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  <<  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  >>  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  <  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = realCrc - dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = written - save;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^long size = dataStart - written;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^long size = written  ==  dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  <=  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  >=  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  ==  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setSize ( save ) ;^392^^^^^377^407^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCompressedSize ( written ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCrc ( written ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCrc ( written ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = save - dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = written - written;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^long size = written   instanceof   dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setSize ( realCrc ) ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCompressedSize ( save ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getCrc (  )  != written )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getCrc (  )  >= realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  <=  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getSize (  )  != realCrc - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  >= written - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != written  <  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != written  ^  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  >  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  &  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  <=  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  <<  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  ||  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  <  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  <=  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  !=  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad CRC checksum for entry "  |  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^+ Long.toHexString ( save )  ) ;^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != written  ==  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  >>  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "   instanceof   entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = save - dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long size = written - written;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^long size = written  |  dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "bad size for entry "  |  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCrc ( save ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setSize ( written ) ;^392^^^^^377^407^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCompressedSize ( save ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( _raf != null )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( raf == null )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^long save = _raf.getFilePointer (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.seek ( size ) ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.seek ( realCrc ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.seek ( written ) ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entries.add ( ze ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getMethod (  )  == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  <= -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( entry.getMethod (  )  == -EFS_FLAG )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setMethod ( level ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getTime (  )  != -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( entry.getTime (  )  == -WORD )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getTime (  )  == -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getMethod (  )  == STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  == SHORT && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  == STORED && _raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( STORED.getMethod (  )  == entry && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( entry.getMethod (  )  == raf && STORED == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  == STORED || raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  != STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  == STORED && raf != null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getSize (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  >= -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( entry.getSize (  )  == -STORED )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for"  >  " STORED method when not writing to a"  >  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  !=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for"  ^  " STORED method when not writing to a"  ^  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  |  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getCrc (  )  == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getCrc (  )  != -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( entry.getCrc (  )  == -2 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "crc checksum is required for STORED"  !=  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for"  |  " STORED method when not writing to a"  |  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"   instanceof   " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "crc checksum is required for STORED"  >  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for"  >>  " STORED method when not writing to a"  >>  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  ||  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "crc checksum is required for STORED"  >=  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entry.setCompressedSize ( ze.getSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getSize (  )  != -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for"   instanceof   " STORED method when not writing to a"   instanceof   " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  ^  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for"  <=  " STORED method when not writing to a"  <=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  <=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "crc checksum is required for STORED"  ||  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new ZipException ( "crc checksum is required for STORED"  ==  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  == SHORT && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  == DEFLATED && useEFS )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  == DEFLATED || hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  <= DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^hasCompressionLevelChanged = true;^448^^^^^433^463^hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setLevel ( WORD ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setLevel ( EFS_FLAG ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeLocalFileHeader ( ze ) ;^450^^^^^435^465^writeLocalFileHeader ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^this.comment = name;^458^^^^^457^459^this.comment = comment;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setComment [RETURN_TYPE] void   String comment [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( EFS_FLAG < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( level < Deflater.SHORT || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( level < Deflater.DEFAULT_COMPRESSION && level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( level <= Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( level < Deflater.DEFAULT_COMPRESSION || level < Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  ==  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Invalid compression EFS_FLAG: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  &  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Invalid compression SHORT: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  >=  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  >  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^hasCompressionLevelChanged =  ( this.level != method ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^hasCompressionLevelChanged =  ( method != level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^hasCompressionLevelChanged =  ( level != this.level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^hasCompressionLevelChanged =  ( this.level >= level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^this.level = EFS_FLAG;^476^^^^^469^477^this.level = level;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^this.method = EFS_FLAG;^486^^^^^485^487^this.method = method;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setMethod [RETURN_TYPE] void   int method [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getMethod (  )  == DEFLATED )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  == method )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( entry.getMethod (  )  >= DEFLATED )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += offset;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZERO, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b, done, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b, offset, offset ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( offset, b, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( b, length, offset ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( length, offset, b ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( length >= 0 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( length > -1 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( length > 1 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( length <= length )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( length < DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( fullblocks < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < method )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( length < done )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( done == length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( buf, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, fullblocks + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + WORD, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, offset - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( length, offset + done, b - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, done + offset, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, length + done, offset - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  <  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( methodnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < method; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = STORED; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, done + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + fullblocks * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * done, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( DEFLATER_BLOCK_SIZE, offset + i * b, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, i + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, DEFLATER_BLOCK_SIZE + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput - ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = done / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / done;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^final int fullblocks = DEFLATER_BLOCK_SIZE / length;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final int fullblocks = length * DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = DEFAULT_COMPRESSION; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = level * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * offset;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^final int done = DEFLATER_BLOCK_SIZE * fullblocks;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final / int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( buf, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, method + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + level * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, method + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + level, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, WORD - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( offset, b + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, offset + length, done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  &&  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( LZERO, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, fullblocks, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset, done ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( offset, b, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( WORD < length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < WORD )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( length < done )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( done <= length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( buf, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, level + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + WORD, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, fullblocks - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( offset, b + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, length + done, offset - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, done + offset, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  <<  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( donent i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < done; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( ZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, method + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + method * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * length, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, i + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, DEFLATER_BLOCK_SIZE + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput / ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = i / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / done;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^final int fullblocks = DEFLATER_BLOCK_SIZE / length;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final int fullblocks = length * DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = BUFFER_SIZE; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = level * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * offset;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^final int done = DEFLATER_BLOCK_SIZE * fullblocks;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final / int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( ZERO, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, method, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset, fullblocks ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, length, offset ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( buf, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, i + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * level, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( offset, b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( DEFLATER_BLOCK_SIZE, offset + i * b, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput + ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, i + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, method - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( done, offset + b, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( b, offset + length, done - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( i <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( length <= method )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( i < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < i )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( done <= length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( LZERO, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, WORD + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( done, offset + b, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  >  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( donent i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < offset; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^for  ( fullblocksnt i = 0; i < i; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( ZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput / ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / length;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final int fullblocks = length - DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final + int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + WORD * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, i + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( i < length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < i )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( LZERO, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + method, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, level - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < level; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^for  ( fullblocksnt i = 0; i < i; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( LZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, WORD + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = WORD / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / i;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final int fullblocks = length + DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = DEFLATER_BLOCK_SIZE; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = i * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * length;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( buf, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, WORD, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, done + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + fullblocks * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * done, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, length + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( length, offset + done, b - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  ==  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( length <= i )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( DEFLATER_BLOCK_SIZE <= length )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( WORD < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < level )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, length + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  |  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < level; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = DEFLATER_BLOCK_SIZE; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, fullblocks + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput + ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = i / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final int fullblocks = length + DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = offset * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * length;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * fullblocks, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + method, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, done, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset, WORD ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, done + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + fullblocks, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, i - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  <  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( lengthnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < WORD; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  >  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = WORD; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput - ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = done / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / method;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = SHORT; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = offset * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * method;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final - int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, fullblocks + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * fullblocks, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( i, offset + b * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, method + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + offset, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( level <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( done > length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + length, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length   instanceof   done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < WORD; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = BUFFER_SIZE; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = i * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * fullblocks;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * level, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + fullblocks, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  <=  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( length, offset, b ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < offset )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( done > length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, WORD + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + level, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  >=  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( WORDnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < offset; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = ; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + WORD * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final int fullblocks = length - DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = i; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = method * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = fullblocks * fullblocks;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, i, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( WORD > 0 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( length > DEFLATED )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( WORD <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( length > DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( levelnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < done; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, WORD + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( i, offset + b * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / i;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = DEFLATED; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * length, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^def.setInput ( offset, b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, fullblocks - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  &  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < length; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + length * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = WORD * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( ZERO, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( length <= done )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  >>  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( WORDnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( LZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, level + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = length * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, length + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + method * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, level, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < method )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / level;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final + int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  &&  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( length < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < WORD )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, level - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = EFS_FLAG; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = offset / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int done = WORD * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * method, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  <<  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset, i ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( method < length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  <=  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, length + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + done, WORD - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  ^  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( length == DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < fullblocks )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^for  >  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = level; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^final - int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + offset, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  ||  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( fullblocks < length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( done < level )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  >  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^for  ( fullblocksnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^def.setInput ( b, offset + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int fullblocks = length / offset;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^for  ( int i = DEFAULT_COMPRESSION; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^def.setInput ( b, offset + done, length  |  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buf, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b, method, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b, offset, level ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( length, offset, b ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( b, length, offset ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^crc.update ( buf, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^crc.update ( b, fullblocks, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^crc.update ( b, offset, method ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^crc.update ( length, offset, b ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^crc.update ( b, length, offset ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^byte[] buff = new byte[2];^533^^^^^532^536^byte[] buff = new byte[1];^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^buff[0] =  ( doneyte )   ( b & BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^buff[0] =  ( byte )   ( b & done ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^buff[0] =  ( BYTE_MASKyte )   ( b & b ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^buff[0] =  ( byte )   ( b  ||  BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^buff[i] =  ( byte )   ( b & BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^write ( buf, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^write ( buff, level, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^write ( buff, 0, 2 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( _raf != null )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( raf == null )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( o != null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( out == null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( o != null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( out == null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^write ( b, 0, fullblocks ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^write ( b.length, 0, b ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^int len = def.deflate ( buff, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^int len = def.deflate ( buf, 0, fullblocks ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^int len = buf.length.deflate ( buf, 0, def ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^int len = buf.deflate ( def, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^int len = def.deflate ( buf, length, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^int len = def.deflate ( buf, 0, b ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( len >= 0 )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( len > WORD )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^if  ( len > BUFFER_SIZE )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buf, 0, level ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZERO, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( len, 0, buf ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buf, 0, offset ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( LZERO, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^writeOut ( buf, level, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^boolean encodable = zipEncoding.canEncode ( entry.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^boolean encodable = entryEncoding.canEncode ( ze.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^boolean encodable = ze.canEncode ( zipEncoding.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( !useEFS && fallbackToUTF8 )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( !encodable && useEFS )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( !encodable || fallbackToUTF8 )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entryEncoding = entryEncoding;^628^^^^^625^629^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entryEncoding = entryEncoding;^628^^^^^613^643^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer name = zipEncoding.encode ( ze.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer name = entryEncoding.encode ( entry.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ByteBuffer name = ze.encode ( entryEncoding.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( b != UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields >= UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !hasCompressionLevelChanged )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( b == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.b || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS && !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodePathExtraField ( entry.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ze.addExtraField ( new UnicodePathExtraField ( name.getName (  ) , ze.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^name.array (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^635^641^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( name != null && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( comm != null || !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( comm == null && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !hasCompressionLevelChanged )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( b == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.createUnicodeExtraFields || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS && !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields >= UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodeCommentExtraField ( n, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ze.addExtraField ( new UnicodeCommentExtraField ( commentB, comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodeCommentExtraField ( name, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^commentB.array (  ) , name.arrayOffset (  ) , commentB.limit (  )  ) ) ;^652^653^654^655^^648^656^commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^commentB.arrayOffset (  ) , name.limit (  )  ) ) ;^653^654^655^^^648^656^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodeCommentExtraField ( name, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ze.addExtraField ( new UnicodeCommentExtraField ( commentB, comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^boolean nameentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^boolean commentEncodable = zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^boolean this.zipEncodingentEncodable = comm.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^boolean nentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^commentB.array (  ) , name.arrayOffset (  ) , commentB.limit (  )  ) ) ;^652^653^654^655^^637^667^commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^commentB.arrayOffset (  ) , name.limit (  )  ) ) ;^653^654^655^^^638^668^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !useEFS )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer nentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodePathExtraField ( entry.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ze.addExtraField ( new UnicodePathExtraField ( name.getName (  ) , ze.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^String comm = entry.getComment (  ) ;^643^^^^^628^658^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^name.array (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^623^653^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^name.arrayOffset (  ) , commentB.limit (  )  )  ) ;^639^640^^^^624^654^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( n != null && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !useEFS )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^name.arrayOffset (  ) , commentB.limit (  )  )  ) ;^639^640^^^^635^641^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.b || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields > UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ze.addExtraField ( new UnicodeCommentExtraField ( n, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer nentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( NOT_ENCODEABLE == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^offsets.put ( entry, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^offsets.put ( ze, ZipLong.getBytes ( size )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^offsets.put ( written, ZipLong.getBytes ( ze )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^offsets.put ( ze, ZipLong.getBytes ( realCrc )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int zipMethod = entry.getMethod (  ) ;^666^^^^^651^681^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeVersionNeededToExtractAndGeneralPurposeBits ( fullblocks, !encodable && fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !useEFS && fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeVersionNeededToExtractAndGeneralPurposeBits ( fallbackToUTF8, !encodable && zipMethod ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable || fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += level;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( fullblocks )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipUtil.toDosTime ( entry.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^localDataStart = size;^684^^^^^669^699^localDataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( len == DEFLATED || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( zipMethod == done || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( zipMethod == DEFLATED || _raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( DEFLATED == zipMethod || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( zipMethod == raf || DEFLATED != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( zipMethod == DEFLATED && raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( zipMethod != DEFLATED || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( zipMethod == DEFLATED || raf == null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buff ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buf ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( extra ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( extra ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^written += BUFFER_SIZE;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += method;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^byte[] extra = entry.getLocalFileDataExtra (  ) ;^703^^^^^688^718^byte[] extra = ze.getLocalFileDataExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( b.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( done )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( ZipShort.getBytes ( extra.length.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( ZipShort.getBytes ( extra )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( buff.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( offset )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^708^^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += commentB.limit (  ) ;^709^^^^^694^724^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += ZERO.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += b;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^written += extra.length.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^written += extra;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^dataStart = size;^715^^^^^700^730^dataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( entry.getMethod (  )  != DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getMethod (  )  != done || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( ze.getMethod (  )  != DEFLATED || _raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( raf.getMethod (  )  != DEFLATED || ze != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( ze.getMethod (  )  != raf || DEFLATED != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( ze.getMethod (  )  != DEFLATED && raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( ze.getMethod (  )  == DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( ze.getMethod (  )  != DEFLATED || raf == null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( extra ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^written += 17;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buf ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += done;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes (  ( entry.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^writeOut  &&  ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )   <=  8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << method )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 19 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^writeOut  <<  ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )   >>  8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << done )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | fullblocks )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += done;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final int zipMethod = entry.getMethod (  ) ;^750^^^^^735^765^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final boolean encodable = zipEncoding.canEncode ( entry.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^final boolean encodable = entryEncoding.canEncode ( ze.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^final boolean encodable = ze.canEncode ( zipEncoding.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeVersionNeededToExtractAndGeneralPurposeBits ( done, !encodable && fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !useEFS && fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable || fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += length;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( done )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( len )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipUtil.toDosTime ( entry.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^written += len;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( !hasCompressionLevelChanged && fallbackToUTF8 )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( !encodable && hasCompressionLevelChanged )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( !encodable || fallbackToUTF8 )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entryEncoding = entryEncoding;^781^^^^^778^782^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^entryEncoding = entryEncoding;^781^^^^^766^796^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer name = entryEncoding.encode ( entry.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ByteBuffer name = ze.encode ( entryEncoding.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer name = zipEncoding.encode ( ze.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += done;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^byte[] extra = entry.getCentralDirectoryExtra (  ) ;^790^^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( buf.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( offset )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( ZipShort.getBytes ( extra.length.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( ZipShort.getBytes ( extra )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( ZERO.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( fullblocks )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^String comm = entry.getComment (  ) ;^795^^^^^780^810^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( name == null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( comm != null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer nentB = entryEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += i;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( extra ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( entry.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( entry.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut (  ( byte[] )  offsets.get ( entry )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut (  ( byte[] )  ze.get ( offsets )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += fullblocks;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^822^^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += commentB.limit (  ) ;^823^^^^^808^838^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZERO ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += buff.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += i;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^written += extra.length.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^written += extra;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^830^^^^^815^845^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^written += name.limit (  ) ;^831^^^^^816^846^written += commentB.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( num ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( b ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZERO ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( buff ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( written )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( save )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( save )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipLong.getBytes ( written )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer data = zipEncoding.encode ( comment ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^ByteBuffer data = this.zipEncoding.encode ( name ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^ByteBuffer data = comment.encode ( this.zipEncoding ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( extra, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( data, 0, zipMethod ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^writeOut ( data.length, 0, data ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^writeOut ( data, 1, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( _raf != null )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( raf == null )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^out.write ( buf, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^out.write ( data, level, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^out.write ( data, offset, zipMethod ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^out.write ( offset, data, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^out.write ( data, length, offset ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.write ( b, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.write ( data, b, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.write ( data, offset, fullblocks ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^raf.write ( data, length, offset ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.write ( buf, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^raf.write ( data, done, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^raf.write ( offset, data, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^out.write ( b, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^out.write ( data, b, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^out.write ( data, offset, len ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^out.write ( length, offset, data ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^int generalPurposeFlag =  ( useEFS || useEFS )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^int generalPurposeFlag =  ( hasCompressionLevelChanged || utfFallback )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^int generalPurposeFlag =  ( useEFS || utfFallback )  ? i : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^int generalPurposeFlag =  ( utfFallback || useEFS )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^int generalPurposeFlag =  ( useEFS || EFS_FLAG )  ? utfFallback : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^int generalPurposeFlag =  ( useEFS && utfFallback )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : EFS_FLAG;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( generalPurposeFlag == DEFLATED && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( zipMethod == fullblocks && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^if  ( zipMethod == DEFLATED && _raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( DEFLATED == zipMethod && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Argument_Swapping]^if  ( zipMethod == raf && DEFLATED == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( zipMethod == DEFLATED || raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( zipMethod != DEFLATED && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Operator]^if  ( zipMethod == DEFLATED && raf != null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^versionNeededToExtract =  19;^903^^^^^891^913^versionNeededToExtract =  20;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Wrong_Literal]^generalPurposeFlag |= SHORT;^905^^^^^891^913^generalPurposeFlag |= 8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( done )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( fullblocks )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[BugLab_Variable_Misuse]^name = name;^939^^^^^938^940^name = n;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] String)   String n [VARIABLES] UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  String  n  name  boolean  
[BugLab_Variable_Misuse]^return n;^942^^^^^941^943^return name;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  String  n  name  boolean  
