[BugLab_Variable_Misuse]^CharsetEncoder enc = charset.newEncoder (  ) ;^58^^^^^57^63^CharsetEncoder enc = this.charset.newEncoder (  ) ;^[CLASS] NioZipEncoding  [METHOD] canEncode [RETURN_TYPE] boolean   String name [VARIABLES] Charset  charset  String  name  boolean  CharsetEncoder  enc  
[BugLab_Argument_Swapping]^return name.canEncode ( enc ) ;^62^^^^^57^63^return enc.canEncode ( name ) ;^[CLASS] NioZipEncoding  [METHOD] canEncode [RETURN_TYPE] boolean   String name [VARIABLES] Charset  charset  String  name  boolean  CharsetEncoder  enc  
[BugLab_Variable_Misuse]^CharsetEncoder enc = charset.newEncoder (  ) ;^70^^^^^55^85^CharsetEncoder enc = this.charset.newEncoder (  ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^ByteBuffer out = ByteBuffer.allocate ( name.length (  &  ) +  ( name.length (  )  + 1 )  / 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  * 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )   >  1 )  / 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )   )  / 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^ByteBuffer out = ByteBuffer.allocate ( name.length (  |  ) +  ( name.length (  )  + 1 )  / 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  - 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )   ||  1 )  / 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + i )  / 2 ) ;^76^77^^^^61^91^ByteBuffer out = ByteBuffer.allocate ( name.length (  ) +  ( name.length (  )  + 1 )  / 2 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^while  ( cb.remaining (  )  == 0 )  {^79^^^^^64^94^while  ( cb.remaining (  )  > 0 )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^while  ( cb.remaining (  )  >= 0 )  {^79^^^^^64^94^while  ( cb.remaining (  )  > 0 )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^while  ( cb.remaining (  )  > i )  {^79^^^^^64^94^while  ( cb.remaining (  )  > 0 )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^while  ( cb.remaining (  )  > 1 )  {^79^^^^^64^94^while  ( cb.remaining (  )  > 0 )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^if  ( res.isUnmappable (  )  && res.isMalformed (  )  )  {^82^^^^^67^97^if  ( res.isUnmappable (  )  || res.isMalformed (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^out = ZipEncodingHelper.growBuffer ( out, 1 ) ;^97^^^^^82^112^out = ZipEncodingHelper.growBuffer ( out, 0 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^out = ZipEncodingHelper.growBuffer ( out, i ) ;^97^^^^^82^112^out = ZipEncodingHelper.growBuffer ( out, 0 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Argument_Swapping]^if  ( out.length (  )  * 6 > res.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^if  ( res.length (  )  * 6 >= out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^if  ( res.length (  )  / 6 > out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^if  ( res.length (  )  * i > out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Argument_Swapping]^out = ZipEncodingHelper.growBuffer ( res, out.position (  ) + out.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  <=  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  + 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  !=  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  / 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * i ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^for  ( int i=i; i<res.length (  ) ; ++i )  {^91^^^^^76^106^for  ( int i=0; i<res.length (  ) ; ++i )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  - 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^if  ( res.length (  )  * 6 == out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^if  ( res.length (  )  + 6 > out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^if  ( res.length (  )  * 7 > out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  <<  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^for  ( int i=-1; i<res.length (  ) ; ++i )  {^91^^^^^76^106^for  ( int i=0; i<res.length (  ) ; ++i )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Argument_Swapping]^CoderResult res = out.encode ( cb, enc,true ) ;^80^^^^^65^95^CoderResult res = enc.encode ( cb, out,true ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Argument_Swapping]^CoderResult res = cb.encode ( enc, out,true ) ;^80^^^^^65^95^CoderResult res = enc.encode ( cb, out,true ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Argument_Swapping]^CoderResult res = enc.encode ( out, cb,true ) ;^80^^^^^65^95^CoderResult res = enc.encode ( cb, out,true ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^CoderResult res = enc.encode ( cb, out,false ) ;^80^^^^^65^95^CoderResult res = enc.encode ( cb, out,true ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ^  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^if  ( res.length (  )  - 6 > out.remaining (  )  )  {^86^^^^^71^101^if  ( res.length (  )  * 6 > out.remaining (  )  )  {^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ==  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  >  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  &  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  >>  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  *  ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (  ||  ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Operator]^out = ZipEncodingHelper.growBuffer ( out, out.position (   instanceof   ) + res.length (  )  * 6 ) ;^87^88^^^^72^102^out = ZipEncodingHelper.growBuffer ( out, out.position (  ) + res.length (  )  * 6 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Wrong_Literal]^out = ZipEncodingHelper.growBuffer ( out, -1 ) ;^97^^^^^82^112^out = ZipEncodingHelper.growBuffer ( out, 0 ) ;^[CLASS] NioZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] boolean  CharBuffer  cb  Charset  charset  String  name  CharsetEncoder  enc  ByteBuffer  out  int  i  CoderResult  res  
[BugLab_Variable_Misuse]^return charset.newDecoder (  ) .onMalformedInput ( CodingErrorAction.REPORT ) .onUnmappableCharacter ( CodingErrorAction.REPORT ) .decode ( ByteBuffer.wrap ( data )  ) .toString (  ) ;^117^118^119^120^^116^121^return this.charset.newDecoder (  ) .onMalformedInput ( CodingErrorAction.REPORT ) .onUnmappableCharacter ( CodingErrorAction.REPORT ) .decode ( ByteBuffer.wrap ( data )  ) .toString (  ) ;^[CLASS] NioZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  Charset  charset  boolean  
[BugLab_Argument_Swapping]^return data.newDecoder (  ) .onMalformedInput ( CodingErrorAction.REPORT ) .onUnmappableCharacter ( CodingErrorAction.REPORT ) .decode ( ByteBuffer.wrap ( this.charset )  ) .toString (  ) ;^117^118^119^120^^116^121^return this.charset.newDecoder (  ) .onMalformedInput ( CodingErrorAction.REPORT ) .onUnmappableCharacter ( CodingErrorAction.REPORT ) .decode ( ByteBuffer.wrap ( data )  ) .toString (  ) ;^[CLASS] NioZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  Charset  charset  boolean  
[BugLab_Variable_Misuse]^return this.charset.newDecoder (  ) .onMalformedInput ( CodingErrorAction.null ) .onUnmappableCharacter ( CodingErrorAction.REPORT ) .decode ( ByteBuffer.wrap ( data )  ) .toString (  ) ;^117^118^119^120^^116^121^return this.charset.newDecoder (  ) .onMalformedInput ( CodingErrorAction.REPORT ) .onUnmappableCharacter ( CodingErrorAction.REPORT ) .decode ( ByteBuffer.wrap ( data )  ) .toString (  ) ;^[CLASS] NioZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  Charset  charset  boolean  
