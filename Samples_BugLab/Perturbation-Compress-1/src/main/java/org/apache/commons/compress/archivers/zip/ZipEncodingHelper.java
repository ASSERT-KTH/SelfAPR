[buglab_swap_variables]^ByteBuffer on = ByteBuffer.allocate ( newCapacity < c2 ? newCapacity : c2 ) ;^152^^^^^147^156^ByteBuffer on = ByteBuffer.allocate ( c2 < newCapacity ? newCapacity : c2 ) ;^[CLASS] ZipEncodingHelper SimpleEncodingHolder  [METHOD] growBuffer [RETURN_TYPE] ByteBuffer   ByteBuffer b int newCapacity [VARIABLES] byte[]  HEX_DIGITS  boolean  ZipEncoding  UTF8_ZIP_ENCODING  Simple8BitZipEncoding  encoding  String  UTF8  Map  simpleEncodings  ByteBuffer  b  on  int  c2  newCapacity  char[]  highChars  
[buglab_swap_variables]^bb.put ( c[ ( HEX_DIGITS >> 12 ) &0x0f] ) ;^181^^^^^176^185^bb.put ( HEX_DIGITS[ ( c >> 12 ) &0x0f] ) ;^[CLASS] ZipEncodingHelper SimpleEncodingHolder  [METHOD] appendSurrogate [RETURN_TYPE] void   ByteBuffer bb char c [VARIABLES] byte[]  HEX_DIGITS  boolean  ZipEncoding  UTF8_ZIP_ENCODING  char  c  Simple8BitZipEncoding  encoding  String  UTF8  Map  simpleEncodings  ByteBuffer  bb  char[]  highChars  
[buglab_swap_variables]^bb.put ( c[ ( HEX_DIGITS >> 8 ) &0x0f] ) ;^182^^^^^176^185^bb.put ( HEX_DIGITS[ ( c >> 8 ) &0x0f] ) ;^[CLASS] ZipEncodingHelper SimpleEncodingHolder  [METHOD] appendSurrogate [RETURN_TYPE] void   ByteBuffer bb char c [VARIABLES] byte[]  HEX_DIGITS  boolean  ZipEncoding  UTF8_ZIP_ENCODING  char  c  Simple8BitZipEncoding  encoding  String  UTF8  Map  simpleEncodings  ByteBuffer  bb  char[]  highChars  
[buglab_swap_variables]^SimpleEncodingHolder h = ( SimpleEncodingHolder )  name.get ( simpleEncodings ) ;^216^217^^^^205^231^SimpleEncodingHolder h = ( SimpleEncodingHolder )  simpleEncodings.get ( name ) ;^[CLASS] ZipEncodingHelper SimpleEncodingHolder  [METHOD] getZipEncoding [RETURN_TYPE] ZipEncoding   String name [VARIABLES] byte[]  HEX_DIGITS  boolean  ZipEncoding  UTF8_ZIP_ENCODING  SimpleEncodingHolder  h  UnsupportedCharsetException  e  Charset  cs  Simple8BitZipEncoding  encoding  String  UTF8  name  Map  simpleEncodings  char[]  highChars  
[buglab_swap_variables]^( SimpleEncodingHolder )  name.get ( simpleEncodings ) ;^217^^^^^205^231^( SimpleEncodingHolder )  simpleEncodings.get ( name ) ;^[CLASS] ZipEncodingHelper SimpleEncodingHolder  [METHOD] getZipEncoding [RETURN_TYPE] ZipEncoding   String name [VARIABLES] byte[]  HEX_DIGITS  boolean  ZipEncoding  UTF8_ZIP_ENCODING  SimpleEncodingHolder  h  UnsupportedCharsetException  e  Charset  cs  Simple8BitZipEncoding  encoding  String  UTF8  name  Map  simpleEncodings  char[]  highChars  
[buglab_swap_variables]^return encoding.equalsIgnoreCase ( UTF8 ) || "utf-8".equalsIgnoreCase ( encoding ) ;^242^243^^^^237^244^return UTF8.equalsIgnoreCase ( encoding ) || "utf-8".equalsIgnoreCase ( encoding ) ;^[CLASS] ZipEncodingHelper SimpleEncodingHolder  [METHOD] isUTF8 [RETURN_TYPE] boolean   String encoding [VARIABLES] byte[]  HEX_DIGITS  boolean  ZipEncoding  UTF8_ZIP_ENCODING  Simple8BitZipEncoding  encoding  String  UTF8  encoding  name  Map  simpleEncodings  char[]  highChars  
