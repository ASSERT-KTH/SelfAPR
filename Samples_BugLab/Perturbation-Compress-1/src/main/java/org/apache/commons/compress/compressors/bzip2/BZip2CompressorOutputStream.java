[buglab_swap_variables]^for  ( alphaSize = 0; i < i; i++ )  {^78^^^^^63^93^for  ( i = 0; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nHeap > yy )  {^119^^^^^104^134^if  ( yy > nHeap )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nHeap < yy && weight[heap[yy + 1]] < weight[heap[yy]] )  {^122^123^^^^107^137^if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nHeap > yy )  {^143^^^^^128^158^if  ( yy > nHeap )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nHeap < yy && weight[heap[yy + 1]] < weight[heap[yy]] )  {^146^147^^^^131^161^if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( yy < weight && nHeap[heap[yy + 1]] < weight[heap[yy]] )  {^122^123^^^^107^137^if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( weight < nHeap && yy[heap[yy + 1]] < weight[heap[yy]] )  {^122^123^^^^107^137^if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( weight < nHeap && yy[heap[yy + 1]] < weight[heap[yy]] )  {^146^147^^^^131^161^if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( yy < weight && nHeap[heap[yy + 1]] < weight[heap[yy]] )  {^146^147^^^^131^161^if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ! ( MAX_ALPHA_SIZE <  ( nHeap + 2 )  )  )  {^105^^^^^90^120^if  ( ! ( nHeap <  ( MAX_ALPHA_SIZE + 2 )  )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ! ( MAX_ALPHA_SIZE <  ( nNodes * 2 )  )  )  {^182^^^^^167^197^if  ( ! ( nNodes <  ( MAX_ALPHA_SIZE * 2 )  )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( maxLen > j )  {^195^^^^^180^210^if  ( j > maxLen )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( alphaSize = 1; i < i; i++ )  {^204^^^^^189^219^for  ( i = 1; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^parent[n1] = nNodes[n2] = parent;^159^^^^^144^174^parent[n1] = parent[n2] = nNodes;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbMakeCodeLengths [RETURN_TYPE] void   char[] len int[] freq int alphaSize int maxLen [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( b == currentChar )  {^303^^^^^300^319^if  ( currentChar == b )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] write [RETURN_TYPE] void   int bv [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( allowableBlockSize < last )  {^322^^^^^307^337^if  ( last < allowableBlockSize )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] writeRun [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( runLengthnt i = 0; i < i; i++ )  {^324^^^^^309^339^for  ( int i = 0; i < runLength; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] writeRun [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^allowableBlockSize = blockSize100k * baseBlockSize - 20;^432^^^^^421^433^allowableBlockSize = baseBlockSize * blockSize100k - 20;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  char[]  block  len  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( n[i] == length )  {^511^^^^^504^518^if  ( length[i] == n )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbAssignCodes [RETURN_TYPE] void   int[] code char[] length int minLen int maxLen int alphaSize [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( maxLen = minLen; n <= n; n++ )  {^509^^^^^504^518^for  ( n = minLen; n <= maxLen; n++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbAssignCodes [RETURN_TYPE] void   int[] code char[] length int minLen int maxLen int alphaSize [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( alphaSize = 0; i < i; i++ )  {^510^^^^^504^518^for  ( i = 0; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] hbAssignCodes [RETURN_TYPE] void   int[] code char[] length int minLen int maxLen int alphaSize [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsBuff |=  ( bsLive <<  ( 32 - v - n )  ) ;^553^^^^^541^555^bsBuff |=  ( v <<  ( 32 - bsLive - n )  ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] bsW [RETURN_TYPE] void   int n int v [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  IOException  e  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsBuff |=  ( n <<  ( 32 - bsLive - v )  ) ;^553^^^^^541^555^bsBuff |=  ( v <<  ( 32 - bsLive - n )  ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] bsW [RETURN_TYPE] void   int n int v [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  IOException  e  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsBuff |=  ( v <<  ( 32 - n - bsLive )  ) ;^553^^^^^541^555^bsBuff |=  ( v <<  ( 32 - bsLive - n )  ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] bsW [RETURN_TYPE] void   int n int v [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  IOException  e  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsW ( c, numBits ) ;^569^^^^^568^570^bsW ( numBits, c ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] bsPutIntVS [RETURN_TYPE] void   int numBits int c [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  numBits  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsW (  c ) ;^569^^^^^568^570^bsW ( numBits, c ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] bsPutIntVS [RETURN_TYPE] void   int numBits int c [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  numBits  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsW ( numBits ) ;^569^^^^^568^570^bsW ( numBits, c ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] bsPutIntVS [RETURN_TYPE] void   int numBits int c [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  szptr  int[]  code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  numBits  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( N_GROUPS = 0; t < t; t++ )  {^580^^^^^565^595^for  ( t = 0; t < N_GROUPS; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( alphaSize = 0; v < v; v++ )  {^581^^^^^566^596^for  ( v = 0; v < alphaSize; v++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( tFreq < aFreq && ge < alphaSize - 1 )  {^613^^^^^598^628^while  ( aFreq < tFreq && ge < alphaSize - 1 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( aFreq < ge && tFreq < alphaSize - 1 )  {^613^^^^^598^628^while  ( aFreq < tFreq && ge < alphaSize - 1 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( aFreq < alphaSize && ge < tFreq - 1 )  {^613^^^^^598^628^while  ( aFreq < tFreq && ge < alphaSize - 1 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( gs > ge && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^603^633^if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ge > nPart && gs != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^603^633^if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ge > gs && nGroups != nPart && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^603^633^if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ge > nGroups && nPart != gs && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^603^633^if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ge >= gs && v <= v )  {^625^^^^^610^640^if  ( v >= gs && v <= ge )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( gs >= v && v <= ge )  {^625^^^^^610^640^if  ( v >= gs && v <= ge )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^tFreq = nPart / remF;^610^^^^^595^625^tFreq = remF / nPart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( ge < tFreq && aFreq < alphaSize - 1 )  {^613^^^^^598^628^while  ( aFreq < tFreq && ge < alphaSize - 1 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nGroups > gs && nPart != ge && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^603^633^if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( v >= ge && v <= gs )  {^625^^^^^610^640^if  ( v >= gs && v <= ge )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nMTF >= gs )  {^661^^^^^646^676^if  ( gs >= nMTF )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nMTF >= ge )  {^665^^^^^650^680^if  ( ge >= nMTF )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( i = ge; i <= gs; i++ )  {^696^^^^^677^702^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^698^^^^^677^702^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^short szptrcv = i[i];^697^^^^^677^702^short icv = szptr[i];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( i = ge; i <= gs; i++ )  {^680^^^^^665^695^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^short szptrcv = i[i];^681^^^^^666^696^short icv = szptr[i];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[0] = cost00;^689^^^^^674^704^cost[0] = cost0;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[0] = cost;^689^^^^^674^704^cost[0] = cost0;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[1] = cost11;^690^^^^^675^705^cost[1] = cost1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[1] = cost;^690^^^^^675^705^cost[1] = cost1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[2] = cost22;^691^^^^^676^706^cost[2] = cost2;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[2] = cost;^691^^^^^676^706^cost[2] = cost2;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[3] = cost33;^692^^^^^677^707^cost[3] = cost3;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[3] = cost;^692^^^^^677^707^cost[3] = cost3;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[4] = cost44;^693^^^^^678^708^cost[4] = cost4;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[4] = cost;^693^^^^^678^708^cost[4] = cost4;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[5] = cost55;^694^^^^^679^709^cost[5] = cost5;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^cost[5] = cost;^694^^^^^679^709^cost[5] = cost5;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( bc[t] < cost )  {^711^^^^^696^726^if  ( cost[t] < bc )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^673^^^^^658^688^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( ge = gs; i <= i; i++ )  {^680^^^^^665^695^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( gs = i; i <= ge; i++ )  {^696^^^^^681^711^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^698^^^^^683^713^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^short szptrcv = i[i];^697^^^^^682^712^short icv = szptr[i];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^710^^^^^695^725^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( i = ge; i <= gs; i++ )  {^724^^^^^709^739^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^ge = G_SIZE + gs - 1;^664^^^^^649^679^ge = gs + G_SIZE - 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( ge = gs; i <= i; i++ )  {^696^^^^^677^702^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( gs = i; i <= ge; i++ )  {^680^^^^^665^695^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( i = ge; i <= gs; i++ )  {^696^^^^^681^711^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( ge = gs; i <= i; i++ )  {^696^^^^^681^711^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( ge = gs; i <= i; i++ )  {^724^^^^^709^739^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^645^^^^^630^660^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^649^^^^^634^664^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( alphaSize = 0; v < v; v++ )  {^650^^^^^635^665^for  ( v = 0; v < alphaSize; v++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^734^^^^^719^749^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbMakeCodeLengths ( alphaSize[t], rfreq[t], len, 20 ) ;^735^^^^^720^750^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbMakeCodeLengths ( len[t], alphaSize[t], rfreq, 20 ) ;^735^^^^^720^750^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbMakeCodeLengths ( len[t][t], alphaSize, 20 ) ;^735^^^^^720^750^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbMakeCodeLengths ( len[t], rfreq[t],  20 ) ;^735^^^^^720^750^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( gs = i; i <= ge; i++ )  {^724^^^^^709^739^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbMakeCodeLengths ( rfreq[t], len[t], alphaSize, 20 ) ;^735^^^^^720^750^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ! ( G_SIZE < 32768 && nSelectors <=  ( 2 +  ( 900000 / nSelectors )  )  )  )  {^746^^^^^731^761^if  ( ! ( nSelectors < 32768 && nSelectors <=  ( 2 +  ( 900000 / G_SIZE )  )  )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( tmp != ll_i )  {^762^^^^^747^777^while  ( ll_i != tmp )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^776^^^^^761^791^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( alphaSize = 0; i < i; i++ )  {^779^^^^^764^794^for  ( i = 0; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( maxLen[t][i] > len )  {^780^^^^^765^795^if  ( len[t][i] > maxLen )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( minLen[t][i] < len )  {^783^^^^^768^798^if  ( len[t][i] < minLen )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t][t], minLen, maxLen, alphaSize ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], len[t], maxLen, minLen, alphaSize ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], len[t],  maxLen, alphaSize ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], len[t], minLen,  alphaSize ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], len[t], alphaSize, maxLen, minLen ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], len[t], minLen, maxLen ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], maxLen[t], minLen, len, alphaSize ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hbAssignCodes ( code[t], len[t], minLen, alphaSize, maxLen ) ;^793^^^^^778^808^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( jnUse[i * 16 + i] )  {^802^^^^^787^817^if  ( inUse[i * 16 + j] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( j[i * 16 + inUse] )  {^802^^^^^787^817^if  ( inUse[i * 16 + j] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( i[i] )  {^810^^^^^795^825^if  ( inUse16[i] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( inUse16nUse16[i] )  {^810^^^^^795^825^if  ( inUse16[i] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( inUse[i] )  {^818^^^^^803^833^if  ( inUse16[i] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( inUsenUse[i * 16 + j] )  {^820^^^^^805^835^if  ( inUse[i * 16 + j] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( jnUse[i * 16 + i] )  {^820^^^^^805^835^if  ( inUse[i * 16 + j] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( i[i * 16 + j] )  {^820^^^^^805^835^if  ( inUse[i * 16 + j] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( j[i * 16 + inUse] )  {^820^^^^^805^835^if  ( inUse[i * 16 + j] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( inUse1616[i] )  {^818^^^^^803^833^if  ( inUse16[i] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( selectorMtf = 0; j < j[i]; j++ )  {^836^^^^^821^851^for  ( j = 0; j < selectorMtf[i]; j++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( len < curr[t][i] )  {^849^^^^^834^864^while  ( curr < len[t][i] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( nGroups = 0; t < t; t++ )  {^845^^^^^830^860^for  ( t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( len > curr[t][i] )  {^853^^^^^838^868^while  ( curr > len[t][i] )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( alphaSize = 0; i < i; i++ )  {^848^^^^^833^863^for  ( i = 0; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nMTF >= gs )  {^866^^^^^851^881^if  ( gs >= nMTF )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( nMTF >= ge )  {^870^^^^^855^885^if  ( ge >= nMTF )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( gs = i; i <= ge; i++ )  {^873^^^^^858^888^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( ge = gs; i <= i; i++ )  {^873^^^^^858^888^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsW ( len[selector[selCtr]][szptr[i]][selector[selCtr]][szptr[i]] ) ;^874^875^^^^859^889^bsW ( len[selector[selCtr]][szptr[i]], code[selector[selCtr]][szptr[i]] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^ge = G_SIZE + gs - 1;^869^^^^^854^884^ge = gs + G_SIZE - 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bsW ( code[selector[selCtr]][szptr[i]], len[selector[selCtr]][szptr[i]] ) ;^874^875^^^^859^889^bsW ( len[selector[selCtr]][szptr[i]], code[selector[selCtr]][szptr[i]] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( i = ge; i <= gs; i++ )  {^873^^^^^858^888^for  ( i = gs; i <= ge; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ! ( nSelectors == selCtr )  )  {^881^^^^^866^896^if  ( ! ( selCtr == nSelectors )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] sendMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  int[][]  code  rfreq  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  char[][]  len  short  cost0  cost1  cost2  cost3  cost4  cost5  icv  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^bigN = lo - hi + 1;^898^^^^^883^913^bigN = hi - lo + 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - v] + d, h + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - d] + h, v + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] +  v + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] + d + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( lo <=  ( j + h - 1 )  )  {^923^^^^^908^938^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( j <=  ( h + lo - 1 )  )  {^923^^^^^908^938^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^zptr[j] = h[j - zptr];^921^^^^^906^936^zptr[j] = zptr[j - h];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^j = h - j;^922^^^^^907^937^j = j - h;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - d] + h, v + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] +  v + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] + v, d + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] + d + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( h[j - zptr] + d, v + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( lo <=  ( j + h - 1 )  )  {^939^^^^^924^954^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( h <=  ( lo + j - 1 )  )  {^939^^^^^924^954^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^zptr[j] = h[j - zptr];^937^^^^^922^952^zptr[j] = zptr[j - h];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^j = h - j;^938^^^^^923^953^j = j - h;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] + v, d + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] +  v + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - v] + d, h + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] + d + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( v[j - h] + d, zptr + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( lo <=  ( j + h - 1 )  )  {^955^^^^^940^970^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( j <=  ( h + lo - 1 )  )  {^955^^^^^940^970^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( h <=  ( lo + j - 1 )  )  {^955^^^^^940^970^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^zptr[j] = h[j - zptr];^953^^^^^938^968^zptr[j] = zptr[j - h];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^j = h - j;^954^^^^^939^969^j = j - h;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi > i )  {^915^^^^^900^930^if  ( i > hi )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi > i )  {^931^^^^^916^946^if  ( i > hi )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi > i )  {^947^^^^^932^962^if  ( i > hi )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workLimit > workDone && firstAttempt )  {^962^^^^^947^977^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workDone > firstAttempt && workLimit )  {^962^^^^^947^977^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( v[j - h] + d, zptr + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( h[j - zptr] + d, v + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - d] + h, v + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( h <=  ( lo + j - 1 )  )  {^923^^^^^908^938^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( v[j - h] + d, zptr + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( h[j - zptr] + d, v + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( j <=  ( h + lo - 1 )  )  {^939^^^^^924^954^if  ( j <=  ( lo + h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( firstAttempt > workLimit && workDone )  {^962^^^^^947^977^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( d[j - h] + zptr, v + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( d[j - h] + zptr, v + d )  )  {^952^^^^^937^967^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - v] + d, h + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^i = h + lo;^912^^^^^897^927^i = lo + h;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( zptr[j - h] + v, d + d )  )  {^920^^^^^905^935^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  ( fullGtU ( d[j - h] + zptr, v + d )  )  {^936^^^^^921^951^while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] simpleSort [RETURN_TYPE] void   int lo int hi int d [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c > b )  {^988^^^^^981^995^if  ( b > c )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] med3 [RETURN_TYPE] char   char a char b char c [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  a  b  c  t  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( b > a )  {^991^^^^^981^995^if  ( a > b )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] med3 [RETURN_TYPE] char   char a char b char c [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  a  b  c  t  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( unHi > unLo )  {^1041^^^^^1026^1056^if  ( unLo > unHi )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = med[zptr[unLo] + d + 1] - block;^1044^^^^^1029^1059^n = block[zptr[unLo] + d + 1] - med;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( unHi > unLo )  {^1060^^^^^1045^1075^if  ( unLo > unHi )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = block[zptr[unHi] + med + 1] - d;^1063^^^^^1048^1078^n = block[zptr[unHi] + d + 1] - med;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = med[zptr[unHi] + d + 1] - block;^1063^^^^^1048^1078^n = block[zptr[unHi] + d + 1] - med;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( unHi > unLo )  {^1078^^^^^1063^1093^if  ( unLo > unHi )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = block[zptr[unLo] + med + 1] - d;^1044^^^^^1029^1059^n = block[zptr[unLo] + d + 1] - med;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = d[zptr[unLo] + block + 1] - med;^1044^^^^^1029^1059^n = block[zptr[unLo] + d + 1] - med;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( QSORT_STACK_SIZE >= sp )  {^1015^^^^^1000^1030^if  ( sp >= QSORT_STACK_SIZE )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( SMALL_THRESH - lo < hi || d > DEPTH_THRESH )  {^1024^^^^^1009^1039^if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi - SMALL_THRESH < lo || d > DEPTH_THRESH )  {^1024^^^^^1009^1039^if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi - d < SMALL_THRESH || lo > DEPTH_THRESH )  {^1024^^^^^1009^1039^if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi - lo < DEPTH_THRESH || d > SMALL_THRESH )  {^1024^^^^^1009^1039^if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( firstAttempt > workLimit && workDone )  {^1026^^^^^1011^1041^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workLimit > workDone && firstAttempt )  {^1026^^^^^1011^1041^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workDone > firstAttempt && workLimit )  {^1026^^^^^1011^1041^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^simpleSort ( hi, lo, d ) ;^1025^^^^^1010^1040^simpleSort ( lo, hi, d ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^simpleSort (  hi, d ) ;^1025^^^^^1010^1040^simpleSort ( lo, hi, d ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^simpleSort ( lo, d, hi ) ;^1025^^^^^1010^1040^simpleSort ( lo, hi, d ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^simpleSort ( lo,  d ) ;^1025^^^^^1010^1040^simpleSort ( lo, hi, d ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^simpleSort ( lo, hi ) ;^1025^^^^^1010^1040^simpleSort ( lo, hi, d ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^lo = stack[sp].ll[sp].ll;^1020^^^^^1005^1035^lo = stack[sp].ll;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^hi = stack[sp].hh[sp].hh;^1021^^^^^1006^1036^hi = stack[sp].hh;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^d = stack[sp].dd[sp].dd;^1022^^^^^1007^1037^d = stack[sp].dd;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( hi + lo )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( block[zptr[lo] + lo + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( d + hi )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( d[zptr[lo] + block + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( block[zptr[lo] + d + 1][zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n =  (  ( lo - ltLo )  <  ( unLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ;^1097^^^^^1082^1112^n =  (  ( ltLo - lo )  <  ( unLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n =  (  ( unLo - lo )  <  ( ltLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ;^1097^^^^^1082^1112^n =  (  ( ltLo - lo )  <  ( unLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^m =  (  ( unHi - gtHi )  <  ( gtHi - hi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^1099^^^^^1084^1114^m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^m =  (  ( gtHi - hi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^1099^^^^^1084^1114^m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^m =  (  ( hi - unHi )  <  ( gtHi - gtHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^1099^^^^^1084^1114^m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = ltLo + unLo - lo - 1;^1102^^^^^1087^1117^n = lo + unLo - ltLo - 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = unLo + lo - ltLo - 1;^1102^^^^^1087^1117^n = lo + unLo - ltLo - 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^m = gtHi -  ( hi - unHi )  + 1;^1103^^^^^1088^1118^m = hi -  ( gtHi - unHi )  + 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^m = hi -  ( unHi - gtHi )  + 1;^1103^^^^^1088^1118^m = hi -  ( gtHi - unHi )  + 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^m = unHi -  ( gtHi - hi )  + 1;^1103^^^^^1088^1118^m = hi -  ( gtHi - unHi )  + 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^simpleSort ( d, hi, lo ) ;^1025^^^^^1010^1040^simpleSort ( lo, hi, d ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( hi[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + block )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( unLo, lo - n, n ) ;^1098^^^^^1083^1113^vswap ( lo, unLo - n, n ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap (  unLo - n, n ) ;^1098^^^^^1083^1113^vswap ( lo, unLo - n, n ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( lo - n, n ) ;^1098^^^^^1083^1113^vswap ( lo, unLo - n, n ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( lo, n - unLo, n ) ;^1098^^^^^1083^1113^vswap ( lo, unLo - n, n ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( lo, unLo -  n ) ;^1098^^^^^1083^1113^vswap ( lo, unLo - n, n ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( m, hi - unLo + 1, m ) ;^1100^^^^^1085^1115^vswap ( unLo, hi - m + 1, m ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap (  hi - m + 1, m ) ;^1100^^^^^1085^1115^vswap ( unLo, hi - m + 1, m ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( hi, unLo - m + 1, m ) ;^1100^^^^^1085^1115^vswap ( unLo, hi - m + 1, m ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( unLo - m + 1, m ) ;^1100^^^^^1085^1115^vswap ( unLo, hi - m + 1, m ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( unLo, hi - m + 1 ) ;^1100^^^^^1085^1115^vswap ( unLo, hi - m + 1, m ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( hi - DEPTH_THRESH < SMALL_THRESH || d > lo )  {^1024^^^^^1009^1039^if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( DEPTH_THRESH - lo < SMALL_THRESH || d > hi )  {^1024^^^^^1009^1039^if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ltLo < gtHi )  {^1089^^^^^1074^1104^if  ( gtHi < ltLo )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( lo[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( block + hi )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^n = lo + ltLo - unLo - 1;^1102^^^^^1087^1117^n = lo + unLo - ltLo - 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^med = med3 ( block[zptr[lo] + hi + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + d )  >>> 1] + d + 1] ) ;^1032^1033^1034^^^1017^1047^med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( n, unLo - lo, n ) ;^1098^^^^^1083^1113^vswap ( lo, unLo - n, n ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^vswap ( unLo, m - hi + 1, m ) ;^1100^^^^^1085^1115^vswap ( unLo, hi - m + 1, m ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] qSort3 [RETURN_TYPE] void   int loSt int hiSt int dSt StackElem[] stack [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  boolean[]  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^block[last + block + 2] = i[ ( i %  ( last + 1 )  )  + 1];^1139^^^^^1124^1154^block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^block[last + last + 2] = block[ ( i %  ( i + 1 )  )  + 1];^1139^^^^^1124^1154^block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^block[last + i + 2] = last[ ( i %  ( block + 1 )  )  + 1];^1139^^^^^1124^1154^block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( last = 0; i <= i + NUM_OVERSHOOT_BYTES; i++ )  {^1141^^^^^1126^1156^for  ( i = 0; i <= last + NUM_OVERSHOOT_BYTES; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  (  ( runningOrder[ (  ( ftab[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1199^1229^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  (  ( h[ (  ( runningOrder[j - ftab] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1199^1229^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( h <=  ( j - 1 )  )  {^1219^^^^^1214^1222^if  ( j <=  ( h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^runningOrder[j] = h[j - runningOrder];^1217^^^^^1214^1222^runningOrder[j] = runningOrder[j - h];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^j = h - j;^1218^^^^^1214^1222^j = j - h;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  (  ( shifts >> bbSize )  > 65534 )  {^1281^^^^^1266^1296^while  (  ( bbSize >> shifts )  > 65534 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  (  ( ftab[ (  ( runningOrder[j - vv] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( h )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1199^1229^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  (  ( vv[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( ftab )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1199^1229^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( h <=  ( j - 1 )  )  {^1219^^^^^1204^1234^if  ( j <=  ( h - 1 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workLimit > workDone && firstAttempt )  {^1258^^^^^1243^1273^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( firstAttempt > workLimit && workDone )  {^1258^^^^^1243^1273^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^numQSorted +=  ( lo - hi + 1 ) ;^1257^^^^^1242^1272^numQSorted +=  ( hi - lo + 1 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^qSort3 ( hi, lo, 2, stack ) ;^1256^^^^^1241^1271^qSort3 ( lo, hi, 2, stack ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^qSort3 (  hi, 2, stack ) ;^1256^^^^^1241^1271^qSort3 ( lo, hi, 2, stack ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^qSort3 ( lo, stack, 2, hi ) ;^1256^^^^^1241^1271^qSort3 ( lo, hi, 2, stack ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^qSort3 ( lo,  2, stack ) ;^1256^^^^^1241^1271^qSort3 ( lo, hi, 2, stack ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^qSort3 ( stack, hi, 2, lo ) ;^1256^^^^^1241^1271^qSort3 ( lo, hi, 2, stack ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^qSort3 ( lo, hi, 2 ) ;^1256^^^^^1241^1271^qSort3 ( lo, hi, 2, stack ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workDone > firstAttempt && workLimit )  {^1258^^^^^1243^1273^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int lo = CLEARMASK[sb] & ftab;^1253^^^^^1238^1268^int lo = ftab[sb] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int hi =  ( CLEARMASK[sb + 1] & ftab )  - 1;^1254^^^^^1239^1269^int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( lo > hi )  {^1255^^^^^1240^1270^if  ( hi > lo )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^quadrant[a2update + qVal + 1] = last;^1290^^^^^1275^1305^quadrant[a2update + last + 1] = qVal;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( ! (  (  ( shifts - 1 )  >> bbSize )  <= 65535 )  )  {^1294^^^^^1279^1309^if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( NUM_OVERSHOOT_BYTES < a2update )  {^1289^^^^^1274^1304^if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int qVal =  ( shifts >> j ) ;^1287^^^^^1272^1302^int qVal =  ( j >> shifts ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbStart  = CLEARMASK[ss << 8] & ftab;^1277^^^^^1262^1292^int bbStart  = ftab[ss << 8] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbSize   =  ( ftab[ ( bbStart + 1 )  << 8] & CLEARMASK )  - ss;^1278^^^^^1263^1293^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & bbStart )  - CLEARMASK;^1278^^^^^1263^1293^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbSize   =  ( ss[ ( ftab + 1 )  << 8] & CLEARMASK )  - bbStart;^1278^^^^^1263^1293^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbSize   =  ( ftab[ ( CLEARMASK + 1 )  << 8] & ss )  - bbStart;^1278^^^^^1263^1293^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int a2update = j[bbStart + zptr];^1286^^^^^1271^1301^int a2update = zptr[bbStart + j];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^j =  ( c2 << 8 )  + c1;^1182^^^^^1167^1197^j =  ( c1 << 8 )  + c2;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^runningOrder[j] = h[j - runningOrder];^1217^^^^^1202^1232^runningOrder[j] = runningOrder[j - h];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^j = h - j;^1218^^^^^1203^1233^j = j - h;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( int QSORT_STACK_SIZE = 0; count < count; count++ )  {^1229^^^^^1214^1244^for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( bbSize = 0; j < j; j++ )  {^1285^^^^^1270^1300^for  ( j = 0; j < bbSize; j++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^sb =  ( j << 8 )  + ss;^1251^^^^^1236^1266^sb =  ( ss << 8 )  + j;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^copy[j] = ftab[ ( CLEARMASK << 8 )  + ss] & j;^1304^^^^^1289^1319^copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^copy[j] = ftab[ ( j << 8 )  + CLEARMASK] & ss;^1304^^^^^1289^1319^copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( CLEARMASK = ftab[ss << 8] & j;^1307^^^^^1292^1322^for  ( j = ftab[ss << 8] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^ftab[ ( SETMASK << 8 )  + ss] |= j;^1317^^^^^1302^1332^ftab[ ( j << 8 )  + ss] |= SETMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^ftab[ ( j << 8 )  + SETMASK] |= ss;^1317^^^^^1302^1332^ftab[ ( j << 8 )  + ss] |= SETMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^copy[j] = CLEARMASK[ ( j << 8 )  + ss] & ftab;^1304^^^^^1289^1319^copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( j = CLEARMASK[ss << 8] & ftab;^1307^^^^^1292^1322^for  ( j = ftab[ss << 8] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^ftab[ ( ss << 8 )  + j] |= SETMASK;^1317^^^^^1302^1332^ftab[ ( j << 8 )  + ss] |= SETMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbSize   =  ( bbStart[ ( ss + 1 )  << 8] & CLEARMASK )  - ftab;^1278^^^^^1263^1293^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^copy[j] = ftab[ ( ss << 8 )  + j] & CLEARMASK;^1304^^^^^1289^1319^copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^copy[j] = ss[ ( j << 8 )  + ftab] & CLEARMASK;^1304^^^^^1289^1319^copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( last = 0; i <= i; i++ )  {^1152^^^^^1137^1167^for  ( i = 0; i <= last; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( last = 0; i <= i; i++ )  {^1169^^^^^1154^1184^for  ( i = 0; i <= last; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( last = 0; i < i; i++ )  {^1180^^^^^1165^1195^for  ( i = 0; i < last; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^while  (  ( ftab[ (  ( h[j - runningOrder] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1199^1229^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int bbSize   =  ( CLEARMASK[ ( ss + 1 )  << 8] & ftab )  - bbStart;^1278^^^^^1263^1293^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^copy[j] = j[ ( ftab << 8 )  + ss] & CLEARMASK;^1304^^^^^1289^1319^copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] mainSort [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  StackElem[]  stack  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( last = 0; i <= i; i++ )  {^1331^^^^^1323^1346^for  ( i = 0; i <= last; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] randomiseBlock [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^workLimit = last * workFactor;^1351^^^^^1348^1377^workLimit = workFactor * last;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] doReversibleTransformation [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( workLimit > workDone && firstAttempt )  {^1358^^^^^1348^1377^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] doReversibleTransformation [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( firstAttempt > workLimit && workDone )  {^1358^^^^^1348^1377^if  ( workDone > workLimit && firstAttempt )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] doReversibleTransformation [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( last = 0; i <= i; i++ )  {^1367^^^^^1348^1377^for  ( i = 0; i <= last; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] doReversibleTransformation [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1386^^^^^1371^1401^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1387^^^^^1372^1402^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1394^^^^^1379^1409^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1395^^^^^1380^1410^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1402^^^^^1387^1417^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1403^^^^^1388^1418^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1410^^^^^1395^1425^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1411^^^^^1396^1426^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1418^^^^^1403^1433^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1419^^^^^1404^1434^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1426^^^^^1411^1441^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1427^^^^^1412^1442^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1437^^^^^1422^1452^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1438^^^^^1423^1453^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( s2 != s1 )  {^1442^^^^^1427^1457^if  ( s1 != s2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( s2 > s1 ) ;^1443^^^^^1428^1458^return  ( s1 > s2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1450^^^^^1435^1465^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1451^^^^^1436^1466^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( s2 != s1 )  {^1455^^^^^1440^1470^if  ( s1 != s2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( s2 > s1 ) ;^1456^^^^^1441^1471^return  ( s1 > s2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1463^^^^^1448^1478^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1464^^^^^1449^1479^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( s2 != s1 )  {^1468^^^^^1453^1483^if  ( s1 != s2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( s2 > s1 ) ;^1469^^^^^1454^1484^return  ( s1 > s2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( c2 != c1 )  {^1476^^^^^1461^1491^if  ( c1 != c2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( c2 > c1 ) ;^1477^^^^^1462^1492^return  ( c1 > c2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( s2 != s1 )  {^1481^^^^^1466^1496^if  ( s1 != s2 )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^return  ( s2 > s1 ) ;^1482^^^^^1467^1497^return  ( s1 > s2 ) ;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( last > i1 )  {^1487^^^^^1472^1502^if  ( i1 > last )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( last > i2 )  {^1491^^^^^1476^1506^if  ( i2 > last )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] fullGtU [RETURN_TYPE] boolean   int i1 int i2 [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  c1  c2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^int n = blockSize100k * baseBlockSize;^1514^^^^^1513^1540^int n = baseBlockSize * blockSize100k;^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] allocateCompressStructures [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^block = NUM_OVERSHOOT_BYTESew char[ ( n + 1 + n ) ];^1515^^^^^1513^1540^block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] allocateCompressStructures [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^quadrant = NUM_OVERSHOOT_BYTESew int[ ( n + n ) ];^1516^^^^^1513^1540^quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] allocateCompressStructures [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( quadrant == null || block == null || zptr == null || ftab == null )  {^1520^1521^^^^1513^1540^if  ( block == null || quadrant == null || zptr == null || ftab == null )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] allocateCompressStructures [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( block == null || zptr == null || quadrant == null || ftab == null )  {^1520^1521^^^^1513^1540^if  ( block == null || quadrant == null || zptr == null || ftab == null )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] allocateCompressStructures [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^if  ( block == null || quadrant == null || ftab == null || zptr == null )  {^1520^1521^^^^1513^1540^if  ( block == null || quadrant == null || zptr == null || ftab == null )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] allocateCompressStructures [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  
[buglab_swap_variables]^for  ( EOB = 0; i <= i; i++ )  {^1554^^^^^1539^1569^for  ( i = 0; i <= EOB; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] generateMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy  
[buglab_swap_variables]^for  ( nInUse = 0; i < i; i++ )  {^1560^^^^^1545^1575^for  ( i = 0; i < nInUse; i++ )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] generateMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy  
[buglab_swap_variables]^while  ( tmp != ll_i )  {^1572^^^^^1557^1587^while  ( ll_i != tmp )  {^[CLASS] BZip2CompressorOutputStream StackElem  [METHOD] generateMTFValues [RETURN_TYPE] void   [VARIABLES] boolean  blockRandomised  closed  firstAttempt  tooLong  CRC  mCrc  OutputStream  bsStream  f  inStream  short[]  cost  szptr  char  ll_i  tmp  tmp2  int[]  code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  boolean[]  bigDone  inUse  inUse16  int  CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  char[]  block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy  
