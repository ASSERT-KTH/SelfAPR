[BugLab_Wrong_Literal]^public static final int DEFAULT_RCDSIZE =  ( 3 ) ;^42^^^^^37^47^public static final int DEFAULT_RCDSIZE =  ( 512 ) ;^[CLASS] TarBuffer   [VARIABLES] 
[BugLab_Wrong_Operator]^public static final int DEFAULT_BLKSIZE =  ( DEFAULT_RCDSIZE - 20 ) ;^45^^^^^40^50^public static final int DEFAULT_BLKSIZE =  ( DEFAULT_RCDSIZE * 20 ) ;^[CLASS] TarBuffer   [VARIABLES] 
[BugLab_Variable_Misuse]^this ( inStream, TarBuffer.recsPerBlock ) ;^62^^^^^61^63^this ( inStream, TarBuffer.DEFAULT_BLKSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream)   InputStream inStream [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this ( inStream, recsPerBlock, TarBuffer.DEFAULT_RCDSIZE ) ;^71^^^^^70^72^this ( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int)   InputStream inStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this ( inStream, blockSize, TarBuffer.recsPerBlock ) ;^71^^^^^70^72^this ( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int)   InputStream inStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Argument_Swapping]^this ( blockSize, inStream, TarBuffer.DEFAULT_RCDSIZE ) ;^71^^^^^70^72^this ( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int)   InputStream inStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.initialize ( recsPerBlock, recordSize ) ;^84^^^^^80^85^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int,int)   InputStream inStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.initialize ( blockSize, recsPerBlock ) ;^84^^^^^80^85^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int,int)   InputStream inStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Argument_Swapping]^this.initialize ( recordSize, blockSize ) ;^84^^^^^80^85^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int,int)   InputStream inStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this ( outStream, TarBuffer.currRecIdx ) ;^92^^^^^91^93^this ( outStream, TarBuffer.DEFAULT_BLKSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream outStream [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this ( outStream, recsPerBlock, TarBuffer.DEFAULT_RCDSIZE ) ;^101^^^^^100^102^this ( outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int)   OutputStream outStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this ( outStream, blockSize, TarBuffer.recsPerBlock ) ;^101^^^^^100^102^this ( outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int)   OutputStream outStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Argument_Swapping]^this ( blockSize, outStream, TarBuffer.DEFAULT_RCDSIZE ) ;^101^^^^^100^102^this ( outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int)   OutputStream outStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.initialize ( recsPerBlock, recordSize ) ;^114^^^^^110^115^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)   OutputStream outStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.initialize ( blockSize, recsPerBlock ) ;^114^^^^^110^115^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)   OutputStream outStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Argument_Swapping]^this.initialize ( recordSize, blockSize ) ;^114^^^^^110^115^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)   OutputStream outStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Literal]^this.debug = true;^121^^^^^120^134^this.debug = false;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.blockSize = currRecIdx;^122^^^^^120^134^this.blockSize = blockSize;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.recordSize = currRecIdx;^123^^^^^120^134^this.recordSize = recordSize;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.recsPerBlock =  ( recsPerBlock / this.recordSize ) ;^124^^^^^120^134^this.recsPerBlock =  ( this.blockSize / this.recordSize ) ;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Argument_Swapping]^this.recsPerBlock =  ( this.recordSize / this.blockSize ) ;^124^^^^^120^134^this.recsPerBlock =  ( this.blockSize / this.recordSize ) ;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Operator]^this.recsPerBlock =  ( this.blockSize * this.recordSize ) ;^124^^^^^120^134^this.recsPerBlock =  ( this.blockSize / this.recordSize ) ;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( inStream != null )  {^127^^^^^120^134^if  ( this.inStream != null )  {^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( this.inStream == null )  {^127^^^^^120^134^if  ( this.inStream != null )  {^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Literal]^this.currBlkIdx = currRecIdx;^131^^^^^120^134^this.currBlkIdx = 0;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Literal]^this.currRecIdx = DEFAULT_RCDSIZE;^132^^^^^120^134^this.currRecIdx = 0;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Literal]^this.currBlkIdx = -DEFAULT_RCDSIZE;^128^^^^^120^134^this.currBlkIdx = -1;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.currRecIdx = currBlkIdx;^129^^^^^120^134^this.currRecIdx = this.recsPerBlock;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Wrong_Literal]^this.currBlkIdx = -currBlkIdx;^128^^^^^120^134^this.currBlkIdx = -1;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^this.currRecIdx = recsPerBlock;^129^^^^^120^134^this.currRecIdx = this.recsPerBlock;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^return recsPerBlock;^141^^^^^140^142^return this.blockSize;^[CLASS] TarBuffer  [METHOD] getBlockSize [RETURN_TYPE] int   [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^return currBlkIdx;^149^^^^^148^150^return this.recordSize;^[CLASS] TarBuffer  [METHOD] getRecordSize [RETURN_TYPE] int   [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( blockBuffer[i] != 0 )  {^170^^^^^168^176^if  ( record[i] != 0 )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( record[i] == 0 )  {^170^^^^^168^176^if  ( record[i] != 0 )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^if  ( record[i] != -1 )  {^170^^^^^168^176^if  ( record[i] != 0 )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^return true;^171^^^^^168^176^return false;^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^for  ( sznt i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^for  ( int i = 0, currRecIdx = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^for  ( sznt i = 0, i = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^for  ( int i = 0, sz = getRecordSize (  ) ; i <= sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^for  ( int i = blockSize, sz = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^for  ( int i = sz, sz = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^if  ( record[i] != recsPerBlock )  {^170^^^^^168^176^if  ( record[i] != 0 )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^return false;^175^^^^^168^176^return true;^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "SkipRecord: recIdx = " + recordSize + " blkIdx = " + currBlkIdx ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + sz ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.err.println ( "SkipRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "SkipRecord: recIdx = "  ==  currRecIdx + " blkIdx = " + currBlkIdx ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "SkipRecord: recIdx = " + recsPerBlock + " blkIdx = " + currBlkIdx ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "SkipRecord: recIdx = "  ^  currRecIdx + " blkIdx = " + currBlkIdx ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( inStream != null )  {^188^^^^^182^199^if  ( inStream == null )  {^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( sz >= recsPerBlock )  {^192^^^^^182^199^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( currRecIdx >= recordSize )  {^192^^^^^182^199^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( recsPerBlock >= currRecIdx )  {^192^^^^^182^199^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( currRecIdx == recsPerBlock )  {^192^^^^^182^199^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadRecord: recIdx = " + recsPerBlock + " blkIdx = " + currBlkIdx ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + recordSize ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.err.println ( "ReadRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadRecord: recIdx = "  ^  currRecIdx + " blkIdx = " + currBlkIdx ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + sz ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadRecord: recIdx = "  |  currRecIdx + " blkIdx = " + currBlkIdx ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( inStream != null )  {^213^^^^^207^232^if  ( inStream == null )  {^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( i >= recsPerBlock )  {^217^^^^^207^232^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( currRecIdx >= sz )  {^217^^^^^207^232^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( recsPerBlock >= currRecIdx )  {^217^^^^^207^232^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( currRecIdx < recsPerBlock )  {^217^^^^^207^232^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , record, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( result, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( blockBuffer, ( i * recordSize ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( blockBuffer, ( currRecIdx * currRecIdx ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( result, ( currRecIdx * recordSize ) , blockBuffer, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( blockBuffer, ( recordSize * currRecIdx ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.arraycopy ( blockBuffer, ( currRecIdx - recordSize ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadBlock: blkIdx = " + i ) ;^239^^^^^224^254^System.err.println ( "ReadBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: blkIdx = "  <<  currBlkIdx ) ;^239^^^^^224^254^System.err.println ( "ReadBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: blkIdx = "  ^  currBlkIdx ) ;^239^^^^^224^254^System.err.println ( "ReadBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( inStream != null )  {^242^^^^^227^257^if  ( inStream == null )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^currRecIdx = i;^246^^^^^231^261^currRecIdx = 0;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^int offset = recsPerBlock;^248^^^^^233^263^int offset = 0;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^int bytesNeeded = offset;^249^^^^^234^264^int bytesNeeded = blockSize;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^while  ( i > 0 )  {^251^^^^^236^266^while  ( bytesNeeded > 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^while  ( bytesNeeded >= 0 )  {^251^^^^^236^266^while  ( bytesNeeded > 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^while  ( bytesNeeded > 1 )  {^251^^^^^236^266^while  ( bytesNeeded > 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( numBytes != -1 )  {^268^^^^^253^283^if  ( numBytes == -1 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( numBytes > -1 )  {^268^^^^^253^283^if  ( numBytes == -1 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( offset != 0 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^return true;^273^^^^^258^288^return false;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( blockBuffer, recordSize, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( blockBuffer, offset, offset + sz,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( result, offset, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^Arrays.fill ( offset, blockBuffer, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^Arrays.fill ( blockBuffer, bytesNeeded, offset + offset,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^Arrays.fill ( bytesNeeded, offset, offset + blockBuffer,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  <=  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( sz == 0 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( offset < 0 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( numBytes != sz )  {^289^^^^^274^304^if  ( numBytes != blockSize )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( numBytes == blockSize )  {^289^^^^^274^304^if  ( numBytes != blockSize )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + i + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.err.println ( "ReadBlock: INCOMPLETE READ " + blockSize + " of " + numBytes + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "   instanceof   numBytes   instanceof   " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  &&  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  >  numBytes  >  " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  >  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  <  numBytes  <  " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^bytesNeeded += numBytes;^287^^^^^272^302^bytesNeeded -= numBytes;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( blockBuffer, recordSize, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( result, offset, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^long numBytes = inStream.read ( blockBuffer, bytesNeeded, offset ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^long numBytes = inStream.read ( bytesNeeded, offset, blockBuffer ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^long numBytes = blockBuffer.read ( inStream, offset, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( blockBuffer, offset, recordSize ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^long numBytes = bytesNeeded.read ( blockBuffer, offset, inStream ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^long numBytes = inStream.read ( offset, blockBuffer, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( blockBuffer, recsPerBlock, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  &&  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + sz + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  !=  numBytes  !=  " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  <=  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( numBytes <= -1 )  {^268^^^^^253^283^if  ( numBytes == -1 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( numBytes >= -1 )  {^268^^^^^253^283^if  ( numBytes == -1 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^if  ( numBytes == -recordSize )  {^268^^^^^253^283^if  ( numBytes == -1 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( currRecIdx == 0 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^if  ( offset == DEFAULT_RCDSIZE )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( blockBuffer, i, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( blockBuffer, offset, offset + i,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  <<  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( recordSize == 0 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^if  ( offset == 1 )  {^269^^^^^254^284^if  ( offset == 0 )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( numBytes != offset )  {^289^^^^^274^304^if  ( numBytes != blockSize )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( blockSize != numBytes )  {^289^^^^^274^304^if  ( numBytes != blockSize )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( numBytes <= blockSize )  {^289^^^^^274^304^if  ( numBytes != blockSize )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + recordSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  &  numBytes  &  " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  >>  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  ||  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  <  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^bytesNeeded = numBytes;^287^^^^^272^302^bytesNeeded -= numBytes;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( blockBuffer, currRecIdx, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( blockBuffer, offset, i ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( blockBuffer, i, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^long numBytes = inStream.read ( blockBuffer, offset, recsPerBlock ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Argument_Swapping]^long numBytes = offset.read ( blockBuffer, inStream, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^Arrays.fill ( blockBuffer, sz, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "ReadBlock: INCOMPLETE READ "  |  numBytes + " of " + blockSize + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Wrong_Literal]^return false;^300^^^^^285^315^return true;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[BugLab_Variable_Misuse]^return recsPerBlock;^309^^^^^308^310^return currBlkIdx;^[CLASS] TarBuffer  [METHOD] getCurrentBlockNum [RETURN_TYPE] int   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^return offset - 1;^319^^^^^318^320^return currRecIdx - 1;^[CLASS] TarBuffer  [METHOD] getCurrentRecordNum [RETURN_TYPE] int   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^return currRecIdx  <=  1;^319^^^^^318^320^return currRecIdx - 1;^[CLASS] TarBuffer  [METHOD] getCurrentRecordNum [RETURN_TYPE] int   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^return currRecIdx ;^319^^^^^318^320^return currRecIdx - 1;^[CLASS] TarBuffer  [METHOD] getCurrentRecordNum [RETURN_TYPE] int   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteRecord: recIdx = " + offset + " blkIdx = " + currBlkIdx ) ;^330^331^^^^328^354^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.err.println ( "WriteRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^330^331^^^^328^354^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "WriteRecord: recIdx = "  ||  currRecIdx + " blkIdx = " + currBlkIdx ) ;^330^331^^^^328^354^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteRecord: recIdx = " + recsPerBlock + " blkIdx = " + currBlkIdx ) ;^330^331^^^^328^354^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "WriteRecord: recIdx = "  &  currRecIdx + " blkIdx = " + currBlkIdx ) ;^330^331^^^^328^354^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream != null )  {^334^^^^^328^354^if  ( outStream == null )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( result.length != recordSize )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( sz != recordSize )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( record.length != currRecIdx )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( recordSize.length != record )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( record != record.lengthSize )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( record.length >= recordSize )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record to write has length '" + result.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record to write has length '" + offset + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + sz + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record to write has length '" + recordSize.length + "' which is not the record size of '" + record + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record to write has length '" + record + "' which is not the record.length size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record to write has length '" + recordSize + "' which is not the record size of '" + record.length + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record to write has length '"  >>  record.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record to write has length '" + currRecIdx + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + currRecIdx + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record to write has length '"  |  record.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record to write has length '"  ^  record.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recsPerBlock + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record to write has length '" + record.length.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record to write has length '"  &&  record.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( sz >= recsPerBlock )  {^345^^^^^328^354^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( currRecIdx >= sz )  {^345^^^^^328^354^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( recsPerBlock >= currRecIdx )  {^345^^^^^328^354^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( currRecIdx == recsPerBlock )  {^345^^^^^328^354^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( result, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( record, 0, result, ( currRecIdx * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( record, 0, blockBuffer, ( sz * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * offset ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( recordSize, 0, blockBuffer, ( currRecIdx * record ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( blockBuffer, 0, record, ( currRecIdx * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( record, 0, blockBuffer, ( recordSize * currRecIdx ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( record, 0, recordSize, ( currRecIdx * blockBuffer ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx / recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteRecord: recIdx = " + recordSize + " blkIdx = " + currBlkIdx ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + sz ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.err.println ( "WriteRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "WriteRecord: recIdx = "  &&  currRecIdx + " blkIdx = " + currBlkIdx ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + offset ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "WriteRecord: recIdx = "  >=  currRecIdx + " blkIdx = " + currBlkIdx ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream != null )  {^371^^^^^365^391^if  ( outStream == null )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  (  ( recordSize + recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  (  ( offset + recordSize )  > result.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  (  ( offset + sz )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  (  ( recordSize + offset )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  (  ( offset + recordSize )  > buf.length.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  (  ( offset + buf.length )  > recordSize )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  (  ( buf.length + recordSize )  > offset )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  (  ( offset + recordSize )  == buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  (  ( offset  <<  recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  >>  (  ( offset + recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  !=  (  ( offset + recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  &&  (  ( offset + recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  >=  (  ( offset + recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ==  (  ( offset + recordSize )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + result.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + buf.length + "' with sz '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + recsPerBlock + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + sz + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record has length '" + buf.length.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record has length '" + offset + "' with buf.length '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record has length '" + recordSize + "' with offset '" + offset + "' which is less than the record size of '" + buf.length + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record has length '"  &&  buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + buf.length + "' with recordSize '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + currRecIdx + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + currRecIdx + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record has length '" + buf.length + "' with recordSize '" + offset + "' which is less than the record size of '" + offset + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record has length '" + recordSize.length + "' with offset '" + offset + "' which is less than the record size of '" + buf + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record has length '"  |  buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + i + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^throw new IOException ( "record has length '" + offset.length + "' with buf '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record has length '"  ^  buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + buf.length + "' with recsPerBlock '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + i + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^throw new IOException ( "record has length '"   instanceof   buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( sz >= recsPerBlock )  {^382^^^^^365^391^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( currRecIdx >= i )  {^382^^^^^365^391^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( recsPerBlock >= currRecIdx )  {^382^^^^^365^391^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( currRecIdx > recsPerBlock )  {^382^^^^^365^391^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( result, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( buf, sz, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( buf, offset, result, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( buf, offset, blockBuffer, ( i * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recsPerBlock ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( blockBuffer, offset, buf, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( buf, recordSize, blockBuffer, ( currRecIdx * offset ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^System.arraycopy ( buf, currRecIdx, blockBuffer, ( offset * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx / recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteBlock: blkIdx = " + sz ) ;^398^^^^^396^410^System.err.println ( "WriteBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "WriteBlock: blkIdx = "  &  currBlkIdx ) ;^398^^^^^396^410^System.err.println ( "WriteBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^System.err.println ( "WriteBlock: blkIdx = " + recordSize ) ;^398^^^^^396^410^System.err.println ( "WriteBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^System.err.println ( "WriteBlock: blkIdx = "  ^  currBlkIdx ) ;^398^^^^^396^410^System.err.println ( "WriteBlock: blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream != null )  {^401^^^^^396^410^if  ( outStream == null )  {^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^outStream.write ( result, 0, blockSize ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^outStream.write ( blockBuffer, 0, sz ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^outStream.write ( blockSize, 0, blockBuffer ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^outStream.write ( blockBuffer, 1, blockSize ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Literal]^currRecIdx = currBlkIdx;^408^^^^^396^410^currRecIdx = 0;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream != null )  {^420^^^^^415^427^if  ( outStream == null )  {^[CLASS] TarBuffer  [METHOD] flushBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Variable_Misuse]^if  ( sz > 0 )  {^424^^^^^415^427^if  ( currRecIdx > 0 )  {^[CLASS] TarBuffer  [METHOD] flushBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( currRecIdx >= 0 )  {^424^^^^^415^427^if  ( currRecIdx > 0 )  {^[CLASS] TarBuffer  [METHOD] flushBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream == null )  {^439^^^^^434^455^if  ( outStream != null )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^} else if  ( in != null )  {^448^^^^^434^455^} else if  ( inStream != null )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^} else if  ( inStreamStream != null )  {^448^^^^^434^455^} else if  ( inStream != null )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^} else if  ( inStream == null )  {^448^^^^^434^455^} else if  ( inStream != null )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( in != System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( inStreamStream != System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( inStream >= System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( inStream <= System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream != System.out || outStream != System.err )  {^442^443^^^^434^455^if  ( outStream != System.out && outStream != System.err )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream >= System.out && outStream != System.err )  {^442^443^^^^434^455^if  ( outStream != System.out && outStream != System.err )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( outStream == System.out && outStream != System.err )  {^442^443^^^^434^455^if  ( outStream != System.out && outStream != System.err )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Argument_Swapping]^if  ( out != System.out && outStreamStream != System.err )  {^442^443^^^^434^455^if  ( outStream != System.out && outStream != System.err )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[BugLab_Wrong_Operator]^if  ( inStream == System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
