[buglab_swap_variables]^this (  TarBuffer.DEFAULT_BLKSIZE ) ;^62^^^^^61^63^this ( inStream, TarBuffer.DEFAULT_BLKSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream)   InputStream inStream [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this ( blockSize, inStream, TarBuffer.DEFAULT_RCDSIZE ) ;^71^^^^^70^72^this ( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int)   InputStream inStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this (  blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^71^^^^^70^72^this ( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int)   InputStream inStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this ( inStream,  TarBuffer.DEFAULT_RCDSIZE ) ;^71^^^^^70^72^this ( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int)   InputStream inStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.initialize ( recordSize, blockSize ) ;^84^^^^^80^85^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int,int)   InputStream inStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.initialize (  recordSize ) ;^84^^^^^80^85^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int,int)   InputStream inStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.initialize ( blockSize ) ;^84^^^^^80^85^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] InputStream,int,int)   InputStream inStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this (  TarBuffer.DEFAULT_BLKSIZE ) ;^92^^^^^91^93^this ( outStream, TarBuffer.DEFAULT_BLKSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream outStream [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this (  blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^101^^^^^100^102^this ( outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int)   OutputStream outStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this ( outStream,  TarBuffer.DEFAULT_RCDSIZE ) ;^101^^^^^100^102^this ( outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int)   OutputStream outStream int blockSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.initialize ( recordSize, blockSize ) ;^114^^^^^110^115^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)   OutputStream outStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.initialize (  recordSize ) ;^114^^^^^110^115^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)   OutputStream outStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.initialize ( blockSize ) ;^114^^^^^110^115^this.initialize ( blockSize, recordSize ) ;^[CLASS] TarBuffer  [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)   OutputStream outStream int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^this.recsPerBlock =  ( this.recordSize / this.blockSize ) ;^124^^^^^120^134^this.recsPerBlock =  ( this.blockSize / this.recordSize ) ;^[CLASS] TarBuffer  [METHOD] initialize [RETURN_TYPE] void   int blockSize int recordSize [VARIABLES] byte[]  blockBuffer  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  recordSize  recsPerBlock  OutputStream  outStream  
[buglab_swap_variables]^for  ( sznt i = 0, i = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^for  ( int i = 0 = getRecordSize (  ) ; i < sz; ++i )  {^169^^^^^168^176^for  ( int i = 0, sz = getRecordSize (  ) ; i < sz; ++i )  {^[CLASS] TarBuffer  [METHOD] isEOFRecord [RETURN_TYPE] boolean   byte[] record [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.err.println ( "SkipRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^184^185^^^^182^199^System.err.println ( "SkipRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( recsPerBlock >= currRecIdx )  {^192^^^^^182^199^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] skipRecord [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  record  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.err.println ( "ReadRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^209^210^^^^207^232^System.err.println ( "ReadRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( recsPerBlock >= currRecIdx )  {^217^^^^^207^232^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( result, ( currRecIdx * recordSize ) , blockBuffer, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) ,  0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy (  ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( blockBuffer, ( recordSize * currRecIdx ) , result, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( blockBuffer, ( currRecIdx * result ) , recordSize, 0, recordSize ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0 ) ;^225^226^227^^^207^232^System.arraycopy ( blockBuffer, ( currRecIdx * recordSize ) , result, 0, recordSize ) ;^[CLASS] TarBuffer  [METHOD] readRecord [RETURN_TYPE] byte[]   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  currBlkIdx  currRecIdx  i  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^Arrays.fill ( offset, blockBuffer, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^Arrays.fill ( blockBuffer,  offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^Arrays.fill ( blockBuffer, bytesNeeded, offset + offset,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^Arrays.fill ( blockBuffer, offset, offset +   ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^Arrays.fill (  offset, offset + bytesNeeded,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^if  ( blockSize != numBytes )  {^289^^^^^274^304^if  ( numBytes != blockSize )  {^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^System.err.println ( "ReadBlock: INCOMPLETE READ " + blockSize + " of " + numBytes + " bytes read." ) ;^291^292^293^^^276^306^System.err.println ( "ReadBlock: INCOMPLETE READ " + numBytes + " of " + blockSize + " bytes read." ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = inStream.read ( blockBuffer, bytesNeeded, offset ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = inStream.read ( blockBuffer,  bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = inStream.read ( blockBuffer, offset ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = bytesNeeded.read ( blockBuffer, offset, inStream ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = inStream.read ( offset, blockBuffer, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = inStream.read (  offset, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = blockBuffer.read ( inStream, offset, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^Arrays.fill ( bytesNeeded, offset, offset + blockBuffer,  ( byte )  0 ) ;^281^^^^^266^296^Arrays.fill ( blockBuffer, offset, offset + bytesNeeded,  ( byte )  0 ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^long numBytes = offset.read ( blockBuffer, inStream, bytesNeeded ) ;^252^253^^^^237^267^long numBytes = inStream.read ( blockBuffer, offset, bytesNeeded ) ;^[CLASS] TarBuffer  [METHOD] readBlock [RETURN_TYPE] boolean   [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  long  numBytes  OutputStream  outStream  
[buglab_swap_variables]^System.err.println ( "WriteRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^330^331^^^^328^354^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( recordSize.length != record )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( recordSize != record.length )  {^338^^^^^328^354^if  ( record.length != recordSize )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record to write has length '" + record.length.length + "' which is not the record size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record to write has length '" + recordSize + "' which is not the record size of '" + record.length + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record to write has length '" + recordSize.length + "' which is not the record size of '" + record + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record to write has length '" + record + "' which is not the record.length size of '" + recordSize + "'" ) ;^339^340^341^342^^328^354^throw new IOException ( "record to write has length '" + record.length + "' which is not the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( recsPerBlock >= currRecIdx )  {^345^^^^^328^354^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( currRecIdx, 0, blockBuffer, ( record * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy (  0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( record, 0, recordSize, ( currRecIdx * blockBuffer ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( record, 0,  ( currRecIdx * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( record, 0, currRecIdx, ( blockBuffer * recordSize ) , recordSize ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize )  ) ;^349^350^351^^^328^354^System.arraycopy ( record, 0, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] record [VARIABLES] byte[]  blockBuffer  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.err.println ( "WriteRecord: recIdx = " + currBlkIdx + " blkIdx = " + currRecIdx ) ;^367^368^^^^365^391^System.err.println ( "WriteRecord: recIdx = " + currRecIdx + " blkIdx = " + currBlkIdx ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  (  ( buf + recordSize )  > offset.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  (  ( offset + recordSize )  > buf.length.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  (  ( recordSize + offset )  > buf.length )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  (  ( offset + buf.length )  > recordSize )  {^375^^^^^365^391^if  (  ( offset + recordSize )  > buf.length )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record has length '" + recordSize.length + "' with offset '" + offset + "' which is less than the record size of '" + buf + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record has length '" + buf.length + "' with recordSize '" + offset + "' which is less than the record size of '" + offset + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record has length '" + recordSize + "' with offset '" + offset + "' which is less than the record size of '" + buf.length + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record has length '" + buf.length.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record has length '" + offset.length + "' with buf '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^throw new IOException ( "record has length '" + offset + "' with buf.length '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^376^377^378^379^^365^391^throw new IOException ( "record has length '" + buf.length + "' with offset '" + offset + "' which is less than the record size of '" + recordSize + "'" ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( recsPerBlock >= currRecIdx )  {^382^^^^^365^391^if  ( currRecIdx >= recsPerBlock )  {^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( blockBuffer, offset, buf, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy (  offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( buf, recordSize, blockBuffer, ( currRecIdx * offset ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( buf,  blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( buf, blockBuffer, offset, ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( buf, offset,  ( currRecIdx * recordSize ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( buf, offset, blockBuffer, ( recordSize * currRecIdx ) , recordSize ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize )  ) ;^386^387^388^^^365^391^System.arraycopy ( buf, offset, blockBuffer, ( currRecIdx * recordSize ) , recordSize ) ;^[CLASS] TarBuffer  [METHOD] writeRecord [RETURN_TYPE] void   byte[] buf int offset [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^outStream.write ( blockSize, 0, blockBuffer ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^outStream.write (  0, blockSize ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^outStream.write ( blockBuffer, 0 ) ;^405^^^^^396^410^outStream.write ( blockBuffer, 0, blockSize ) ;^[CLASS] TarBuffer  [METHOD] writeBlock [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^} else if  ( in != null )  {^448^^^^^434^455^} else if  ( inStream != null )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^} else if  ( inStreamStream != null )  {^448^^^^^434^455^} else if  ( inStream != null )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( in != System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( inStreamStream != System.in )  {^449^^^^^434^455^if  ( inStream != System.in )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
[buglab_swap_variables]^if  ( out != System.out && outStreamStream != System.err )  {^442^443^^^^434^455^if  ( outStream != System.out && outStream != System.err )  {^[CLASS] TarBuffer  [METHOD] close [RETURN_TYPE] void   [VARIABLES] byte[]  blockBuffer  buf  record  result  boolean  debug  InputStream  inStream  int  DEFAULT_BLKSIZE  DEFAULT_RCDSIZE  blockSize  bytesNeeded  currBlkIdx  currRecIdx  i  offset  recordSize  recsPerBlock  sz  OutputStream  outStream  
