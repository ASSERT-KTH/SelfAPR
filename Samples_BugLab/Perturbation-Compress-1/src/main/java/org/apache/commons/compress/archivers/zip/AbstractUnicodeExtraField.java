[BugLab_Variable_Misuse]^crc32.update ( unicodeName, off, len ) ;^51^^^^^48^60^crc32.update ( bytes, off, len ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[],int,int)   String text byte[] bytes int off int len [VARIABLES] byte[]  bytes  data  unicodeName  boolean  CRC32  crc32  UnsupportedEncodingException  e  String  text  long  nameCRC32  int  len  off  
[BugLab_Argument_Swapping]^crc32.update ( len, off, bytes ) ;^51^^^^^48^60^crc32.update ( bytes, off, len ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[],int,int)   String text byte[] bytes int off int len [VARIABLES] byte[]  bytes  data  unicodeName  boolean  CRC32  crc32  UnsupportedEncodingException  e  String  text  long  nameCRC32  int  len  off  
[BugLab_Argument_Swapping]^crc32.update ( bytes, len, off ) ;^51^^^^^48^60^crc32.update ( bytes, off, len ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[],int,int)   String text byte[] bytes int off int len [VARIABLES] byte[]  bytes  data  unicodeName  boolean  CRC32  crc32  UnsupportedEncodingException  e  String  text  long  nameCRC32  int  len  off  
[BugLab_Variable_Misuse]^this ( text, unicodeName, 0, bytes.length ) ;^72^^^^^70^73^this ( text, bytes, 0, bytes.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[])   String text byte[] bytes [VARIABLES] byte[]  bytes  data  unicodeName  String  text  boolean  long  nameCRC32  
[BugLab_Variable_Misuse]^this ( text, bytes, 0, this ) ;^72^^^^^70^73^this ( text, bytes, 0, bytes.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[])   String text byte[] bytes [VARIABLES] byte[]  bytes  data  unicodeName  String  text  boolean  long  nameCRC32  
[BugLab_Argument_Swapping]^this ( bytes.length, bytes, 0, text ) ;^72^^^^^70^73^this ( text, bytes, 0, bytes.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[])   String text byte[] bytes [VARIABLES] byte[]  bytes  data  unicodeName  String  text  boolean  long  nameCRC32  
[BugLab_Argument_Swapping]^this ( bytes, text, 0, bytes.length ) ;^72^^^^^70^73^this ( text, bytes, 0, bytes.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[])   String text byte[] bytes [VARIABLES] byte[]  bytes  data  unicodeName  String  text  boolean  long  nameCRC32  
[BugLab_Argument_Swapping]^this ( text, bytes.length, 0, bytes ) ;^72^^^^^70^73^this ( text, bytes, 0, bytes.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[])   String text byte[] bytes [VARIABLES] byte[]  bytes  data  unicodeName  String  text  boolean  long  nameCRC32  
[BugLab_Wrong_Literal]^this ( text, bytes, -1, bytes.length ) ;^72^^^^^70^73^this ( text, bytes, 0, bytes.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] <init> [RETURN_TYPE] String,byte[])   String text byte[] bytes [VARIABLES] byte[]  bytes  data  unicodeName  String  text  boolean  long  nameCRC32  
[BugLab_Variable_Misuse]^if  ( data == null )  {^76^^^^^75^85^if  ( unicodeName == null )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Wrong_Operator]^if  ( unicodeName != null )  {^76^^^^^75^85^if  ( unicodeName == null )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^data = new byte[5 + data.length];^80^^^^^75^85^data = new byte[5 + unicodeName.length];^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^data = new byte[5 + unicodeName];^80^^^^^75^85^data = new byte[5 + unicodeName.length];^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^data = new byte[5 + unicodeName.length.length];^80^^^^^75^85^data = new byte[5 + unicodeName.length];^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Wrong_Literal]^data[1] = 1x11;^82^^^^^75^85^data[0] = 0x01;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^System.arraycopy ( ZipLong.getBytes ( nameCRC32 ) , 0, unicodeName, 1, 4 ) ;^83^^^^^75^85^System.arraycopy ( ZipLong.getBytes ( nameCRC32 ) , 0, data, 1, 4 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^System.arraycopy ( ZipLong.getBytes ( data ) , 0, nameCRC32, 1, 4 ) ;^83^^^^^75^85^System.arraycopy ( ZipLong.getBytes ( nameCRC32 ) , 0, data, 1, 4 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^System.arraycopy ( data, 0, data, 5, unicodeName.length ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^System.arraycopy ( unicodeName, 0, bytes, 5, unicodeName.length ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, unicodeName, 5, unicodeName.length ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^System.arraycopy ( unicodeName, 0, unicodeName.length, 5, data ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^System.arraycopy ( unicodeName.length, 0, data, 5, unicodeName ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Wrong_Literal]^System.arraycopy ( unicodeName, 1, data, 5, unicodeName.length ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Wrong_Literal]^System.arraycopy ( unicodeName, 0, data, 4, unicodeName.length ) ;^84^^^^^75^85^System.arraycopy ( unicodeName, 0, data, 5, unicodeName.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] assembleData [RETURN_TYPE] void   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^return data;^108^^^^^107^109^return unicodeName;^[CLASS] AbstractUnicodeExtraField  [METHOD] getUnicodeName [RETURN_TYPE] byte[]   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^this.unicodeName = data;^115^^^^^114^117^this.unicodeName = unicodeName;^[CLASS] AbstractUnicodeExtraField  [METHOD] setUnicodeName [RETURN_TYPE] void   byte[] unicodeName [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^if  ( unicodeName == null )  {^120^^^^^119^124^if  ( data == null )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryData [RETURN_TYPE] byte[]   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Wrong_Operator]^if  ( data != null )  {^120^^^^^119^124^if  ( data == null )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryData [RETURN_TYPE] byte[]   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^return unicodeName;^123^^^^^119^124^return data;^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryData [RETURN_TYPE] byte[]   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^if  ( unicodeName == null )  {^127^^^^^126^131^if  ( data == null )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryLength [RETURN_TYPE] ZipShort   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Wrong_Operator]^if  ( data != null )  {^127^^^^^126^131^if  ( data == null )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryLength [RETURN_TYPE] ZipShort   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^return new ZipShort ( unicodeName.length ) ;^130^^^^^126^131^return new ZipShort ( data.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryLength [RETURN_TYPE] ZipShort   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^return new ZipShort ( data ) ;^130^^^^^126^131^return new ZipShort ( data.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryLength [RETURN_TYPE] ZipShort   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Argument_Swapping]^return new ZipShort ( data.length.length ) ;^130^^^^^126^131^return new ZipShort ( data.length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] getCentralDirectoryLength [RETURN_TYPE] ZipShort   [VARIABLES] byte[]  bytes  data  unicodeName  long  nameCRC32  boolean  
[BugLab_Variable_Misuse]^if  ( version < 5 )  {^144^^^^^141^160^if  ( length < 5 )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^if  ( length <= 5 )  {^144^^^^^141^160^if  ( length < 5 )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Literal]^if  ( length < 4 )  {^144^^^^^141^160^if  ( length < 5 )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "UniCode path extra data must have at least"  <<  " 5 bytes." ) ;^145^146^^^^141^160^throw new ZipException ( "UniCode path extra data must have at least" + " 5 bytes." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "UniCode path extra data must have at least"  !=  " 5 bytes." ) ;^145^146^^^^141^160^throw new ZipException ( "UniCode path extra data must have at least" + " 5 bytes." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "UniCode path extra data must have at least"   instanceof   " 5 bytes." ) ;^145^146^^^^141^160^throw new ZipException ( "UniCode path extra data must have at least" + " 5 bytes." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "UniCode path extra data must have at least"  |  " 5 bytes." ) ;^145^146^^^^141^160^throw new ZipException ( "UniCode path extra data must have at least" + " 5 bytes." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^int version = unicodeName[offset];^149^^^^^141^160^int version = buffer[offset];^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^if  ( offset != 0x01 )  {^151^^^^^141^160^if  ( version != 0x01 )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^if  ( version == 0x01 )  {^151^^^^^141^160^if  ( version != 0x01 )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Literal]^if  ( version != 0x0version )  {^151^^^^^141^160^if  ( version != 0x01 )  {^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^throw new ZipException ( "Unsupported offset [" + version + "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["  >>  version  >>  "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["  <=  version + "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["  >  version  >  "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["  <<  version + "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["  <  version  <  "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["  !=  version  !=  "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^throw new ZipException ( "Unsupported version ["   instanceof   version + "] for UniCode path extra data." ) ;^152^153^^^^141^160^throw new ZipException ( "Unsupported version [" + version + "] for UniCode path extra data." ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^nameCRC32 = ZipLong.getValue ( unicodeName, offset + 1 ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^nameCRC32 = ZipLong.getValue ( buffer, version + 1 ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Argument_Swapping]^nameCRC32 = ZipLong.getValue ( offset, buffer + 1 ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^nameCRC32 = ZipLong.getValue ( buffer, offset  ||  1 ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Literal]^nameCRC32 = ZipLong.getValue ( buffer, offset + version ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^nameCRC32 = ZipLong.getValue ( buffer, offset  ^  1 ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Literal]^nameCRC32 = ZipLong.getValue ( buffer, offset  ) ;^156^^^^^141^160^nameCRC32 = ZipLong.getValue ( buffer, offset + 1 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^unicodeName = new byte[version - 5];^157^^^^^141^160^unicodeName = new byte[length - 5];^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^unicodeName = new byte[length  <  5];^157^^^^^141^160^unicodeName = new byte[length - 5];^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Literal]^unicodeName = new byte[length - version];^157^^^^^141^160^unicodeName = new byte[length - 5];^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^System.arraycopy ( data, offset + 5, unicodeName, 0, length - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, version + 5, unicodeName, 0, length - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, offset + 5, unicodeName, 0, version - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^System.arraycopy ( buffer, offset + 5, data, 0, length - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Argument_Swapping]^System.arraycopy ( unicodeName, offset + 5, buffer, 0, length - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Argument_Swapping]^System.arraycopy ( buffer, unicodeName + 5, offset, 0, length - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Argument_Swapping]^System.arraycopy ( buffer, length + 5, unicodeName, 0, offset - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Operator]^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length  >>  5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Wrong_Literal]^System.arraycopy ( buffer, offset , unicodeName, 0, length - 5 ) ;^158^^^^^141^160^System.arraycopy ( buffer, offset + 5, unicodeName, 0, length - 5 ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromLocalFileData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  version  
[BugLab_Variable_Misuse]^parseFromLocalFileData ( unicodeName, offset, length ) ;^169^^^^^166^170^parseFromLocalFileData ( buffer, offset, length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromCentralDirectoryData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  
[BugLab_Variable_Misuse]^parseFromLocalFileData ( buffer, length, length ) ;^169^^^^^166^170^parseFromLocalFileData ( buffer, offset, length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromCentralDirectoryData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  
[BugLab_Argument_Swapping]^parseFromLocalFileData ( length, offset, buffer ) ;^169^^^^^166^170^parseFromLocalFileData ( buffer, offset, length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromCentralDirectoryData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  
[BugLab_Argument_Swapping]^parseFromLocalFileData ( buffer, length, offset ) ;^169^^^^^166^170^parseFromLocalFileData ( buffer, offset, length ) ;^[CLASS] AbstractUnicodeExtraField  [METHOD] parseFromCentralDirectoryData [RETURN_TYPE] void   byte[] buffer int offset int length [VARIABLES] byte[]  buffer  bytes  data  unicodeName  boolean  long  nameCRC32  int  length  offset  
