[buglab_swap_variables]^if  ( len + offs > dest.length )  {^147^^^^^139^162^if  ( offs + len > dest.length )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( offs + len > dest.length.length )  {^147^^^^^139^162^if  ( offs + len > dest.length )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( offs + dest.length > len )  {^147^^^^^139^162^if  ( offs + len > dest.length )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^throw new IndexOutOfBoundsException  (" ")   + len ( " + len + " )  > dest ( " + dest.length.length + " ) ." ) ;^148^149^^^^139^162^throw new IndexOutOfBoundsException  (" ")   + len ( " + len + " )  > dest.length ( " + dest.length + " ) ." ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^throw new IndexOutOfBoundsException  (" ")   + dest.length ( " + len + " )  > len ( " + dest.length + " ) ." ) ;^148^149^^^^139^162^throw new IndexOutOfBoundsException  (" ")   + len ( " + len + " )  > dest.length ( " + dest.length + " ) ." ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^throw new IndexOutOfBoundsException  (" ")   + dest ( " + len + " )  > len.length ( " + dest.length + " ) ." ) ;^148^149^^^^139^162^throw new IndexOutOfBoundsException  (" ")   + len ( " + len + " )  > dest.length ( " + dest.length + " ) ." ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int hi = len + offs;^155^^^^^139^162^final int hi = offs + len;^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int b;  ( hi < destOffs )  &&  (  ( b = read0 (  )  )  >= 0 ) ; )  {^157^^^^^139^162^for  ( int b;  ( destOffs < hi )  &&  (  ( b = read0 (  )  )  >= 0 ) ; )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^return  ( offs == destOffs )  ? -1 :  ( destOffs - offs ) ;^161^^^^^139^162^return  ( destOffs == offs )  ? -1 :  ( destOffs - offs ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] read [RETURN_TYPE] int   final byte[] dest final int offs final int len [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^final boolean[] this.data = inUse.inUse;^165^^^^^164^176^final boolean[] inUse = this.data.inUse;^[CLASS] BZip2CompressorInputStream Data  [METHOD] makeMaps [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] this.data = seqToUnseq.seqToUnseq;^166^^^^^164^176^final byte[] seqToUnseq = this.data.seqToUnseq;^[CLASS] BZip2CompressorInputStream Data  [METHOD] makeMaps [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( seqToUnseq[i] ) inUse[nInUseShadow++] =  ( byte )  i;^171^172^^^^164^176^if  ( inUse[i] ) seqToUnseq[nInUseShadow++] =  ( byte )  i;^[CLASS] BZip2CompressorInputStream Data  [METHOD] makeMaps [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( inUsenUse[i] ) seqToUnseq[nInUseShadow++] =  ( byte )  i;^171^172^^^^164^176^if  ( inUse[i] ) seqToUnseq[nInUseShadow++] =  ( byte )  i;^[CLASS] BZip2CompressorInputStream Data  [METHOD] makeMaps [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( expected != magic )  {^243^^^^^240^248^if  ( magic != expected )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] checkMagicChar [RETURN_TYPE] void   char expected String position [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  String  position  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  su_z  boolean[]  inUse  
[buglab_swap_variables]^throw new IOException ( "Stream is not BZip2 formatted: position '" + expected + "' as " + expected + " byte but got '" +  ( char )  magic + "'" ) ;^244^245^246^^^240^248^throw new IOException ( "Stream is not BZip2 formatted: expected '" + expected + "' as " + position + " byte but got '" +  ( char )  magic + "'" ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] checkMagicChar [RETURN_TYPE] void   char expected String position [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  String  position  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( magic4 == 0x17 && magic1 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic0 == 0x50 && magic5 == 0x90 )  {^258^259^^^^243^273^if  ( magic0 == 0x17 && magic1 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic4 == 0x50 && magic5 == 0x90 )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( magic0 == 0x17 && magic4 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic1 == 0x50 && magic5 == 0x90 )  {^258^259^^^^243^273^if  ( magic0 == 0x17 && magic1 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic4 == 0x50 && magic5 == 0x90 )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( magic0 == 0x17 && magic3 == 0x72 && magic2 == 0x45 && magic1 == 0x38 && magic4 == 0x50 && magic5 == 0x90 )  {^258^259^^^^243^273^if  ( magic0 == 0x17 && magic1 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic4 == 0x50 && magic5 == 0x90 )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( magic0 == 0x17 && magic1 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic5 == 0x50 && magic4 == 0x90 )  {^258^259^^^^243^273^if  ( magic0 == 0x17 && magic1 == 0x72 && magic2 == 0x45 && magic3 == 0x38 && magic4 == 0x50 && magic5 == 0x90 )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( magic1 != 0x31 || magic0 != 0x41 || magic2 != 0x59 || magic3 != 0x26 ||^261^262^263^264^^246^276^} else if  ( magic0 != 0x31 || magic1 != 0x41 || magic2 != 0x59 || magic3 != 0x26 ||^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( magic2 != 0x31 || magic1 != 0x41 || magic0 != 0x59 || magic3 != 0x26 ||^261^262^263^264^^246^276^} else if  ( magic0 != 0x31 || magic1 != 0x41 || magic2 != 0x59 || magic3 != 0x26 ||^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( magic0 != 0x31 || magic1 != 0x41 || magic3 != 0x59 || magic2 != 0x26 ||^261^262^263^264^^246^276^} else if  ( magic0 != 0x31 || magic1 != 0x41 || magic2 != 0x59 || magic3 != 0x26 ||^[CLASS] BZip2CompressorInputStream Data  [METHOD] initBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( this.computedBlockCRC != this.storedBlockCRC )  {^294^^^^^290^307^if  ( this.storedBlockCRC != this.computedBlockCRC )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( this.computedCombinedCRC != this.storedCombinedCRC )  {^314^^^^^309^317^if  ( this.storedCombinedCRC != this.computedCombinedCRC )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] complete [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( in != null )  {^321^^^^^319^331^if  ( inShadow != null )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] close [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( inShadowShadow != null )  {^321^^^^^319^331^if  ( inShadow != null )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] close [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( in != System.in )  {^323^^^^^319^331^if  ( inShadow != System.in )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] close [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( inShadowShadow != System.in )  {^323^^^^^319^331^if  ( inShadow != System.in )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] close [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( n < bsLiveShadow )  {^337^^^^^333^355^if  ( bsLiveShadow < n )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsR [RETURN_TYPE] int   final int n [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^346^^^^^333^355^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsR [RETURN_TYPE] int   final int n [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^this.bsLive = n - bsLiveShadow;^353^^^^^333^355^this.bsLive = bsLiveShadow - n;^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsR [RETURN_TYPE] int   final int n [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^return  ( bsLiveShadow >>  ( bsBuffShadow - n )  )  &  (  ( 1 << n )  - 1 ) ;^354^^^^^333^355^return  ( bsBuffShadow >>  ( bsLiveShadow - n )  )  &  (  ( 1 << n )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsR [RETURN_TYPE] int   final int n [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^return  ( bsBuffShadow >>  ( n - bsLiveShadow )  )  &  (  ( 1 << n )  - 1 ) ;^354^^^^^333^355^return  ( bsBuffShadow >>  ( bsLiveShadow - n )  )  &  (  ( 1 << n )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsR [RETURN_TYPE] int   final int n [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^368^^^^^357^375^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsGetBit [RETURN_TYPE] boolean   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^return  (  ( bsLiveShadow >>  ( bsBuffShadow - 1 )  )  & 1 )  != 0;^374^^^^^357^375^return  (  ( bsBuffShadow >>  ( bsLiveShadow - 1 )  )  & 1 )  != 0;^[CLASS] BZip2CompressorInputStream Data  [METHOD] bsGetBit [RETURN_TYPE] boolean   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  magic  n  nInUse  nInUseShadow  offs  origPtr  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( i[j] == length )  {^393^^^^^378^408^if  ( length[j] == i )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = maxLen, pp = 0; i <= minLen; i++ )  {^391^^^^^376^406^for  ( int i = minLen, pp = 0; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i =  pp = 0; i <= maxLen; i++ )  {^391^^^^^376^406^for  ( int i = minLen, pp = 0; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( maxLennt i = minLen, pp = 0; i <= i; i++ )  {^391^^^^^376^406^for  ( int i = minLen, pp = 0; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( jnt i = 0; j < alphaSize; j++ )  {^392^^^^^377^407^for  ( int j = 0; j < alphaSize; j++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( alphaSizent j = 0; j < i; j++ )  {^392^^^^^377^407^for  ( int j = 0; j < alphaSize; j++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int alphaSize = 0; j < j; j++ )  {^392^^^^^377^407^for  ( int j = 0; j < alphaSize; j++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( MAX_CODE_LENnt i = i; --i > 0; )  {^399^^^^^384^414^for  ( int i = MAX_CODE_LEN; --i > 0; )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( alphaSizent i = 0; i < i; i++ )  {^404^^^^^389^419^for  ( int i = 0; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( basent i = 1, b = i[0]; i < MAX_CODE_LEN; i++ )  {^408^^^^^393^423^for  ( int i = 1, b = base[0]; i < MAX_CODE_LEN; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( bnt i = 1, i = base[0]; i < MAX_CODE_LEN; i++ )  {^408^^^^^393^423^for  ( int i = 1, b = base[0]; i < MAX_CODE_LEN; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = 1 = base[0]; i < MAX_CODE_LEN; i++ )  {^408^^^^^393^423^for  ( int i = 1, b = base[0]; i < MAX_CODE_LEN; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = 1, b = MAX_CODE_LEN[0]; i < base; i++ )  {^408^^^^^393^423^for  ( int i = 1, b = base[0]; i < MAX_CODE_LEN; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = maxLen, vec = 0, b = base[i]; i <= minLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i =  vec = 0, b = base[i]; i <= maxLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = base, vec = 0, b = minLen[i]; i <= maxLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = minLen, vec = 0, maxLen = base[i]; i <= b; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = minLen, vec = 0 = base[i]; i <= maxLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( vecnt i = minLen, i = 0, b = base[i]; i <= maxLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = minLen = 0, b = base[i]; i <= maxLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^vec += b - nb;^415^^^^^400^430^vec += nb - b;^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final basent nb = i[i + 1];^414^^^^^399^429^final int nb = base[i + 1];^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( basent i = minLen, vec = 0, b = i[i]; i <= maxLen; i++ )  {^413^^^^^398^428^for  ( int i = minLen, vec = 0, b = base[i]; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( minLennt i = i + 1; i <= maxLen; i++ )  {^421^^^^^406^436^for  ( int i = minLen + 1; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( maxLennt i = minLen + 1; i <= i; i++ )  {^421^^^^^406^436^for  ( int i = minLen + 1; i <= maxLen; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^base[i] =  (  ( base[i - 1] + 1 )  << 1 )  - limit[i];^422^^^^^407^437^base[i] =  (  ( limit[i - 1] + 1 )  << 1 )  - base[i];^[CLASS] BZip2CompressorInputStream Data  [METHOD] hbCreateDecodeTables [RETURN_TYPE] void   final int[] limit final int[] base final int[] perm final char[] length final int minLen final int maxLen final int alphaSize [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  temp_charArray2d  Data  data  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  j  last  len  magic  maxLen  minLen  n  nInUse  nInUseShadow  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  thech  vec  char[]  getAndMoveToFrontDecode_yy  length  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final boolean[] inUse = dataShadow.inUse.inUse;^428^^^^^413^443^final boolean[] inUse = dataShadow.inUse;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final boolean[] inUse = dataShadow;^428^^^^^413^443^final boolean[] inUse = dataShadow.inUse;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] pos = dataShadow.recvDecodingTables_pos.recvDecodingTables_pos;^429^^^^^414^444^final byte[] pos = dataShadow.recvDecodingTables_pos;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] pos = dataShadow;^429^^^^^414^444^final byte[] pos = dataShadow.recvDecodingTables_pos;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] selector = dataShadow.selector.selector;^430^^^^^415^445^final byte[] selector = dataShadow.selector;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] selector = dataShadow;^430^^^^^415^445^final byte[] selector = dataShadow.selector;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] selectorMtf = dataShadow.selectorMtf.selectorMtf;^431^^^^^416^446^final byte[] selectorMtf = dataShadow.selectorMtf;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] selectorMtf = dataShadow;^431^^^^^416^446^final byte[] selectorMtf = dataShadow.selectorMtf;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( i &  ( 1 << inUse16 )  )  != 0 )  {^447^^^^^432^462^if  (  ( inUse16 &  ( 1 << i )  )  != 0 )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( i16 &  ( 1 << inUse )  )  != 0 )  {^447^^^^^432^462^if  (  ( inUse16 &  ( 1 << i )  )  != 0 )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( nSelectorsnt i = 0; i < i; i++ )  {^464^^^^^449^479^for  ( int i = 0; i < nSelectors; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int nGroups = v; --v >= 0; )  {^473^^^^^458^488^for  ( int v = nGroups; --v >= 0; )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final char[][] len = dataShadow.temp_charArray2d.temp_charArray2d;^489^^^^^474^504^final char[][] len = dataShadow.temp_charArray2d;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final char[][] len = dataShadow;^489^^^^^474^504^final char[][] len = dataShadow.temp_charArray2d;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( alphaSizent i = 0; i < i; i++ )  {^495^^^^^480^510^for  ( int i = 0; i < alphaSize; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^createHuffmanDecodingTables ( nGroups, alphaSize ) ;^504^^^^^489^519^createHuffmanDecodingTables ( alphaSize, nGroups ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^createHuffmanDecodingTables (  nGroups ) ;^504^^^^^489^519^createHuffmanDecodingTables ( alphaSize, nGroups ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^createHuffmanDecodingTables ( alphaSize ) ;^504^^^^^489^519^createHuffmanDecodingTables ( alphaSize, nGroups ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] recvDecodingTables [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  tmp  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final char[][] len = dataShadow.temp_charArray2d.temp_charArray2d;^513^^^^^511^536^final char[][] len = dataShadow.temp_charArray2d;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final char[][] len = dataShadow;^513^^^^^511^536^final char[][] len = dataShadow.temp_charArray2d;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[] minLens = dataShadow.minLens.minLens;^514^^^^^511^536^final int[] minLens = dataShadow.minLens;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[] minLens = dataShadow;^514^^^^^511^536^final int[] minLens = dataShadow.minLens;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[][] limit = dataShadow.limit.limit;^515^^^^^511^536^final int[][] limit = dataShadow.limit;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[][] limit = dataShadow;^515^^^^^511^536^final int[][] limit = dataShadow.limit;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[][] base = dataShadow.base.base;^516^^^^^511^536^final int[][] base = dataShadow.base;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[][] base = dataShadow;^516^^^^^511^536^final int[][] base = dataShadow.base;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[][] perm = dataShadow.perm.perm;^517^^^^^511^536^final int[][] perm = dataShadow.perm;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final int[][] perm = dataShadow;^517^^^^^511^536^final int[][] perm = dataShadow.perm;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( maxLen > lent )  {^525^^^^^511^536^if  ( lent > maxLen )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^if  ( minLen < lent )  {^528^^^^^511^536^if  ( lent < minLen )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( int nGroups = 0; t < t; t++ )  {^519^^^^^511^536^for  ( int t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( tnt i = 0; t < nGroups; t++ )  {^519^^^^^511^536^for  ( int t = 0; t < nGroups; t++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^for  ( alphaSizent i = i; --i >= 0; )  {^523^^^^^511^536^for  ( int i = alphaSize; --i >= 0; )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( alphaSize[t], base[t], perm[t], len[t], minLen, maxLen, limit ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( base[t], limit[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t][t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], alphaSize[t], len[t], minLen, maxLen, perm ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t][t], len[t], minLen, maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t], alphaSize[t], minLen, maxLen, len ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t][t], minLen, maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], alphaSize, maxLen, minLen ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t],  maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], maxLen[t], perm[t], len[t], minLen, base, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen,  alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, alphaSize, maxLen ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], perm[t], base[t], len[t], minLen, maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^hbCreateDecodeTables ( limit[t], base[t], len[t], perm[t], minLen, maxLen, alphaSize ) ;^532^533^^^^511^536^hbCreateDecodeTables ( limit[t], base[t], perm[t], len[t], minLen, maxLen, alphaSize ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] createHuffmanDecodingTables [RETURN_TYPE] void   final int alphaSize final int nGroups [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  cftab  limit  minLens  perm  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  hi  i  i16  inUse16  j  last  len  magic  maxLen  minLen  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  offs  origPtr  pp  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  char[]  getAndMoveToFrontDecode_yy  len_t  length  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  boolean[]  inUse  
[buglab_swap_variables]^final byte[] ll8 = dataShadow.ll8.ll8;^544^^^^^529^559^final byte[] ll8 = dataShadow.ll8;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final byte[] ll8 = dataShadow;^544^^^^^529^559^final byte[] ll8 = dataShadow.ll8;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] unzftab = dataShadow.unzftab.unzftab;^545^^^^^530^560^final int[] unzftab = dataShadow.unzftab;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] unzftab = dataShadow;^545^^^^^530^560^final int[] unzftab = dataShadow.unzftab;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final byte[] selector = dataShadow.selector.selector;^546^^^^^531^561^final byte[] selector = dataShadow.selector;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final byte[] selector = dataShadow;^546^^^^^531^561^final byte[] selector = dataShadow.selector;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final byte[] seqToUnseq = dataShadow.seqToUnseq.seqToUnseq;^547^^^^^532^562^final byte[] seqToUnseq = dataShadow.seqToUnseq;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final byte[] seqToUnseq = dataShadow;^547^^^^^532^562^final byte[] seqToUnseq = dataShadow.seqToUnseq;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final char[] yy = dataShadow.getAndMoveToFrontDecode_yy.getAndMoveToFrontDecode_yy;^548^^^^^533^563^final char[] yy = dataShadow.getAndMoveToFrontDecode_yy;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final char[] yy = dataShadow;^548^^^^^533^563^final char[] yy = dataShadow.getAndMoveToFrontDecode_yy;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] minLens = dataShadow.minLens.minLens;^549^^^^^534^564^final int[] minLens = dataShadow.minLens;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] minLens = dataShadow;^549^^^^^534^564^final int[] minLens = dataShadow.minLens;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[][] limit = dataShadow.limit.limit;^550^^^^^535^565^final int[][] limit = dataShadow.limit;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[][] limit = dataShadow;^550^^^^^535^565^final int[][] limit = dataShadow.limit;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[][] base = dataShadow.base.base;^551^^^^^536^566^final int[][] base = dataShadow.base;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[][] base = dataShadow;^551^^^^^536^566^final int[][] base = dataShadow.base;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[][] perm = dataShadow.perm.perm;^552^^^^^537^567^final int[][] perm = dataShadow.perm;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[][] perm = dataShadow;^552^^^^^537^567^final int[][] perm = dataShadow.perm;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^609^^^^^594^624^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^625^^^^^610^640^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( bsLiveShadow << 1 ) |  (  ( bsBuffShadow >> zvec )  & 1 ) ;^634^635^^^^619^649^zvec =  ( zvec << 1 ) |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( zvec << 1 ) |  (  ( bsLiveShadow >> bsBuffShadow )  & 1 ) ;^634^635^^^^619^649^zvec =  ( zvec << 1 ) |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^while  ( zn < bsLiveShadow )  {^689^^^^^674^704^while  ( bsLiveShadow < zn )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^692^^^^^677^707^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^while  ( limit_zt > zvec[zn] )  {^703^^^^^688^718^while  ( zvec > limit_zt[zn] )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^708^^^^^693^723^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( bsLiveShadow << 1 )  |  (  ( bsBuffShadow >> zvec )  & 1 ) ;^716^^^^^701^731^zvec =  ( zvec << 1 )  |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( zvec << 1 )  |  (  ( bsLiveShadow >> bsBuffShadow )  & 1 ) ;^716^^^^^701^731^zvec =  ( zvec << 1 )  |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( bsBuffShadow << 1 )  |  (  ( zvec >> bsLiveShadow )  & 1 ) ;^716^^^^^701^731^zvec =  ( zvec << 1 )  |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( nextSym, 0, yy, 1, yy - 1 ) ;^669^^^^^664^670^System.arraycopy ( yy, 0, yy, 1, nextSym - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy (  0, yy, 1, nextSym - 1 ) ;^669^^^^^664^670^System.arraycopy ( yy, 0, yy, 1, nextSym - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( yy, 0, yy, 1 - 1 ) ;^669^^^^^664^670^System.arraycopy ( yy, 0, yy, 1, nextSym - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( int nextSym = j - 1; j > 0; )  {^665^^^^^650^680^for  ( int j = nextSym - 1; j > 0; )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zvec =  ( zn >>  ( bsLiveShadow - bsBuffShadow )  ) &  (  ( 1 << zn )  - 1 ) ;^699^700^^^^684^714^int zvec =  ( bsBuffShadow >>  ( bsLiveShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zvec =  ( bsBuffShadow >>  ( zn - bsLiveShadow )  ) &  (  ( 1 << zn )  - 1 ) ;^699^700^^^^684^714^int zvec =  ( bsBuffShadow >>  ( bsLiveShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( nextSym, 0, yy, 1, yy - 1 ) ;^669^^^^^654^684^System.arraycopy ( yy, 0, yy, 1, nextSym - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy (  0, yy, 1, nextSym - 1 ) ;^669^^^^^654^684^System.arraycopy ( yy, 0, yy, 1, nextSym - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( yy, 0, yy, 1 - 1 ) ;^669^^^^^654^684^System.arraycopy ( yy, 0, yy, 1, nextSym - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^while  ( zn < bsLiveShadow )  {^606^^^^^591^621^while  ( bsLiveShadow < zn )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  ( RUNAextSym == n )  {^583^^^^^568^598^if  ( nextSym == RUNA )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( n == RUNB )  {^585^^^^^570^600^} else if  ( nextSym == RUNB )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( nextSymextSym == RUNB )  {^585^^^^^570^600^} else if  ( nextSym == RUNB )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( RUNB == nextSym )  {^585^^^^^570^600^} else if  ( nextSym == RUNB )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^} else if  ( RUNBextSym == n )  {^585^^^^^570^600^} else if  ( nextSym == RUNB )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  ( limitLast >= lastShadow )  {^647^^^^^632^662^if  ( lastShadow >= limitLast )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( bsBuffShadow << 1 ) |  (  ( zvec >> bsLiveShadow )  & 1 ) ;^634^635^^^^619^649^zvec =  ( zvec << 1 ) |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  ( n == RUNA )  {^583^^^^^568^598^if  ( nextSym == RUNA )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^nextSym = base_zt[zvec - perm_zt[zn]];^637^^^^^622^652^nextSym = perm_zt[zvec - base_zt[zn]];^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zvec =  ( bsLiveShadow >>  ( bsBuffShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^616^617^^^^601^631^int zvec =  ( bsBuffShadow >>  ( bsLiveShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zvec =  ( bsBuffShadow >>  ( zn - bsLiveShadow )  ) &  (  ( 1 << zn )  - 1 ) ;^616^617^^^^601^631^int zvec =  ( bsBuffShadow >>  ( bsLiveShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zvec =  ( zn >>  ( bsLiveShadow - bsBuffShadow )  ) &  (  ( 1 << zn )  - 1 ) ;^616^617^^^^601^631^int zvec =  ( bsBuffShadow >>  ( bsLiveShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  ( RUNA == nextSym )  {^583^^^^^568^598^if  ( nextSym == RUNA )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^while  ( limit_zt > zvec[zn] )  {^620^^^^^605^635^while  ( zvec > limit_zt[zn] )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  ( nextSymextSym == RUNA )  {^583^^^^^568^598^if  ( nextSym == RUNA )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^nextSym = base_zt[zvec - perm_zt[zn]];^718^^^^^703^733^nextSym = perm_zt[zvec - base_zt[zn]];^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zvec =  ( bsLiveShadow >>  ( bsBuffShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^699^700^^^^684^714^int zvec =  ( bsBuffShadow >>  ( bsLiveShadow - zn )  ) &  (  ( 1 << zn )  - 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( nextSym == RUNB )  ||  ( nextSym == RUNA )  )  {^579^^^^^564^594^if  (  ( nextSym == RUNA )  ||  ( nextSym == RUNB )  )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  byte  ch  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int zt = dataShadow[groupNo] & 0xff;^730^^^^^715^745^final int zt = dataShadow.selector[groupNo] & 0xff;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] limit_zt = dataShadow[zt];^731^^^^^716^746^final int[] limit_zt = dataShadow.limit[zt];^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^int zn = dataShadow[zt];^732^^^^^717^747^int zn = dataShadow.minLens[zt];^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^bsBuffShadow =  ( thech << 8 )  | bsBuffShadow;^743^^^^^728^758^bsBuffShadow =  ( bsBuffShadow << 8 )  | thech;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( bsBuffShadow << 1 )  |  (  ( zvec >> bsLiveShadow )  & 1 ) ;^751^^^^^736^766^zvec =  ( zvec << 1 )  |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^zvec =  ( zvec << 1 )  |  (  ( bsLiveShadow >> bsBuffShadow )  & 1 ) ;^751^^^^^736^766^zvec =  ( zvec << 1 )  |  (  ( bsBuffShadow >> bsLiveShadow )  & 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^return dataShadow.base.perm[zt][zvec - dataShadow[zt][zn]];^757^^^^^742^772^return dataShadow.perm[zt][zvec - dataShadow.base[zt][zn]];^[CLASS] BZip2CompressorInputStream Data  [METHOD] getAndMoveToFrontDecode0 [RETURN_TYPE] int   final int groupNo [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] this.data = cftab.cftab;^765^^^^^750^780^final int[] cftab = this.data.cftab;^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final int[] tt = this.last.initTT ( this.data + 1 ) ;^766^^^^^751^781^final int[] tt = this.data.initTT ( this.last + 1 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^final byte[] this.data = ll8.ll8;^767^^^^^752^782^final byte[] ll8 = this.data.ll8;^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( this.data.unzftab, 0,  1, 256 ) ;^769^^^^^754^784^System.arraycopy ( this.data.unzftab, 0, cftab, 1, 256 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( this.data. 0, cftab, 1, 256 ) ;^769^^^^^754^784^System.arraycopy ( this.data.unzftab, 0, cftab, 1, 256 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^System.arraycopy ( cftab.unzftab, 0, this.data, 1, 256 ) ;^769^^^^^754^784^System.arraycopy ( this.data.unzftab, 0, cftab, 1, 256 ) ;^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( cftabnt i = 1, c = i[0]; i <= 256; i++ )  {^771^^^^^756^786^for  ( int i = 1, c = cftab[0]; i <= 256; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( cnt i = 1, i = cftab[0]; i <= 256; i++ )  {^771^^^^^756^786^for  ( int i = 1, c = cftab[0]; i <= 256; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = 1 = cftab[0]; i <= 256; i++ )  {^771^^^^^756^786^for  ( int i = 1, c = cftab[0]; i <= 256; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( lastShadownt i = 0, i = this.last; i <= lastShadow; i++ )  {^776^^^^^761^791^for  ( int i = 0, lastShadow = this.last; i <= lastShadow; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( int i = 0 = this.last; i <= lastShadow; i++ )  {^776^^^^^761^791^for  ( int i = 0, lastShadow = this.last; i <= lastShadow; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^for  ( this.lastnt i = 0, lastShadow = i; i <= lastShadow; i++ )  {^776^^^^^761^791^for  ( int i = 0, lastShadow = this.last; i <= lastShadow; i++ )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( this.origPtr < 0 )  ||  ( this.origPtr >= tt.length.length )  )  {^780^^^^^765^795^if  (  ( this.origPtr < 0 )  ||  ( this.origPtr >= tt.length )  )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( tt.length < 0 )  ||  ( this.origPtr >= this.origPtr )  )  {^780^^^^^765^795^if  (  ( this.origPtr < 0 )  ||  ( this.origPtr >= tt.length )  )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupBlock [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  ( this.su_chPrev != this.su_ch2 )  {^842^^^^^841^867^if  ( this.su_ch2 != this.su_chPrev )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] setupRandPartB [RETURN_TYPE] void   [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_ch2Shadow  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( length == null )  ||  ( ttShadow.length < ttShadow )  )  {^965^^^^^958^970^if  (  ( ttShadow == null )  ||  ( ttShadow.length < length )  )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] initTT [RETURN_TYPE] int[]   int length [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  ttShadow  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  length  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_ch2Shadow  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( ttShadow == null )  ||  ( length < ttShadow.length )  )  {^965^^^^^958^970^if  (  ( ttShadow == null )  ||  ( ttShadow.length < length )  )  {^[CLASS] BZip2CompressorInputStream Data  [METHOD] initTT [RETURN_TYPE] int[]   int length [VARIABLES] int[][]  base  limit  perm  InputStream  in  inShadow  char[][]  len  temp_charArray2d  Data  data  dataShadow  int[]  base  base_zt  cftab  limit  limit_zt  minLens  perm  perm_zt  tt  ttShadow  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  alphaSize  b  blockSize  blockSize100k  bsBuff  bsBuffShadow  bsLive  bsLiveShadow  c  computedBlockCRC  computedCombinedCRC  curr  currentChar  currentState  destOffs  eob  groupNo  groupPos  hi  i  i16  inUse16  j  last  lastShadow  len  length  limitLast  magic  maxLen  minLen  minLens_zt  n  nGroups  nInUse  nInUseShadow  nSelectors  nb  nextSym  offs  origPtr  pp  retChar  s  storedBlockCRC  storedCombinedCRC  su_ch2  su_ch2Shadow  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  t  thech  v  vec  zn  zt  zvec  char[]  getAndMoveToFrontDecode_yy  len_t  length  yy  byte[]  dest  ll8  pos  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  CRC  crc  char  expected  lent  magic0  magic1  magic2  magic3  magic4  magic5  su_z  tmp  boolean[]  inUse  
[buglab_swap_variables]^if  (  ( length == null )  ||  ( ttShadow.length < ttShadow )  )  {^965^^^^^958^970^if  (  ( ttShadow == null )  ||  ( ttShadow.length < length )  )  {^[CLASS] Data  [METHOD] initTT [RETURN_TYPE] int[]   int length [VARIABLES] byte[]  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  int[][]  base  limit  perm  boolean  char[][]  temp_charArray2d  int[]  cftab  minLens  tt  ttShadow  unzftab  boolean[]  inUse  int  length  char[]  getAndMoveToFrontDecode_yy  
[buglab_swap_variables]^if  (  ( ttShadow == null )  ||  ( length < ttShadow.length )  )  {^965^^^^^958^970^if  (  ( ttShadow == null )  ||  ( ttShadow.length < length )  )  {^[CLASS] Data  [METHOD] initTT [RETURN_TYPE] int[]   int length [VARIABLES] byte[]  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  int[][]  base  limit  perm  boolean  char[][]  temp_charArray2d  int[]  cftab  minLens  tt  ttShadow  unzftab  boolean[]  inUse  int  length  char[]  getAndMoveToFrontDecode_yy  
