[buglab_swap_variables]^return new GammaDistributionImpl ( beta, alpha ) ;^55^^^^^52^56^return new GammaDistributionImpl ( alpha, beta ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createGammaDistribution [RETURN_TYPE] GammaDistribution   double alpha double beta [VARIABLES] boolean  double  alpha  beta  
[buglab_swap_variables]^return new GammaDistributionImpl (  beta ) ;^55^^^^^52^56^return new GammaDistributionImpl ( alpha, beta ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createGammaDistribution [RETURN_TYPE] GammaDistribution   double alpha double beta [VARIABLES] boolean  double  alpha  beta  
[buglab_swap_variables]^return new GammaDistributionImpl ( alpha ) ;^55^^^^^52^56^return new GammaDistributionImpl ( alpha, beta ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createGammaDistribution [RETURN_TYPE] GammaDistribution   double alpha double beta [VARIABLES] boolean  double  alpha  beta  
[buglab_swap_variables]^return new FDistributionImpl ( denominatorDegreesOfFreedom, numeratorDegreesOfFreedom ) ;^78^79^^^^75^80^return new FDistributionImpl ( numeratorDegreesOfFreedom, denominatorDegreesOfFreedom ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createFDistribution [RETURN_TYPE] FDistribution   double numeratorDegreesOfFreedom double denominatorDegreesOfFreedom [VARIABLES] boolean  double  denominatorDegreesOfFreedom  numeratorDegreesOfFreedom  
[buglab_swap_variables]^return new FDistributionImpl (  denominatorDegreesOfFreedom ) ;^78^79^^^^75^80^return new FDistributionImpl ( numeratorDegreesOfFreedom, denominatorDegreesOfFreedom ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createFDistribution [RETURN_TYPE] FDistribution   double numeratorDegreesOfFreedom double denominatorDegreesOfFreedom [VARIABLES] boolean  double  denominatorDegreesOfFreedom  numeratorDegreesOfFreedom  
[buglab_swap_variables]^return new FDistributionImpl ( numeratorDegreesOfFreedom ) ;^78^79^^^^75^80^return new FDistributionImpl ( numeratorDegreesOfFreedom, denominatorDegreesOfFreedom ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createFDistribution [RETURN_TYPE] FDistribution   double numeratorDegreesOfFreedom double denominatorDegreesOfFreedom [VARIABLES] boolean  double  denominatorDegreesOfFreedom  numeratorDegreesOfFreedom  
[buglab_swap_variables]^return new BinomialDistributionImpl ( probabilityOfSuccess, numberOfTrials ) ;^102^103^^^^100^104^return new BinomialDistributionImpl ( numberOfTrials, probabilityOfSuccess ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createBinomialDistribution [RETURN_TYPE] BinomialDistribution   int numberOfTrials double probabilityOfSuccess [VARIABLES] boolean  double  probabilityOfSuccess  int  numberOfTrials  
[buglab_swap_variables]^return new BinomialDistributionImpl (  probabilityOfSuccess ) ;^102^103^^^^100^104^return new BinomialDistributionImpl ( numberOfTrials, probabilityOfSuccess ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createBinomialDistribution [RETURN_TYPE] BinomialDistribution   int numberOfTrials double probabilityOfSuccess [VARIABLES] boolean  double  probabilityOfSuccess  int  numberOfTrials  
[buglab_swap_variables]^return new BinomialDistributionImpl ( numberOfTrials ) ;^102^103^^^^100^104^return new BinomialDistributionImpl ( numberOfTrials, probabilityOfSuccess ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createBinomialDistribution [RETURN_TYPE] BinomialDistribution   int numberOfTrials double probabilityOfSuccess [VARIABLES] boolean  double  probabilityOfSuccess  int  numberOfTrials  
[buglab_swap_variables]^return new HypergeometricDistributionImpl ( numberOfSuccesses, populationSize, sampleSize ) ;^117^118^^^^115^119^return new HypergeometricDistributionImpl ( populationSize, numberOfSuccesses, sampleSize ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createHypergeometricDistribution [RETURN_TYPE] HypergeometricDistribution   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean  int  numberOfSuccesses  populationSize  sampleSize  
[buglab_swap_variables]^return new HypergeometricDistributionImpl (  numberOfSuccesses, sampleSize ) ;^117^118^^^^115^119^return new HypergeometricDistributionImpl ( populationSize, numberOfSuccesses, sampleSize ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createHypergeometricDistribution [RETURN_TYPE] HypergeometricDistribution   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean  int  numberOfSuccesses  populationSize  sampleSize  
[buglab_swap_variables]^return new HypergeometricDistributionImpl ( populationSize,  sampleSize ) ;^117^118^^^^115^119^return new HypergeometricDistributionImpl ( populationSize, numberOfSuccesses, sampleSize ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createHypergeometricDistribution [RETURN_TYPE] HypergeometricDistribution   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean  int  numberOfSuccesses  populationSize  sampleSize  
[buglab_swap_variables]^return new HypergeometricDistributionImpl ( sampleSize, numberOfSuccesses, populationSize ) ;^117^118^^^^115^119^return new HypergeometricDistributionImpl ( populationSize, numberOfSuccesses, sampleSize ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createHypergeometricDistribution [RETURN_TYPE] HypergeometricDistribution   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean  int  numberOfSuccesses  populationSize  sampleSize  
[buglab_swap_variables]^return new HypergeometricDistributionImpl ( populationSize, numberOfSuccesses ) ;^117^118^^^^115^119^return new HypergeometricDistributionImpl ( populationSize, numberOfSuccesses, sampleSize ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createHypergeometricDistribution [RETURN_TYPE] HypergeometricDistribution   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean  int  numberOfSuccesses  populationSize  sampleSize  
[buglab_swap_variables]^return new NormalDistributionImpl ( sd, mean ) ;^130^^^^^129^131^return new NormalDistributionImpl ( mean, sd ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createNormalDistribution [RETURN_TYPE] NormalDistribution   double mean double sd [VARIABLES] boolean  double  mean  sd  
[buglab_swap_variables]^return new NormalDistributionImpl (  sd ) ;^130^^^^^129^131^return new NormalDistributionImpl ( mean, sd ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createNormalDistribution [RETURN_TYPE] NormalDistribution   double mean double sd [VARIABLES] boolean  double  mean  sd  
[buglab_swap_variables]^return new NormalDistributionImpl ( mean ) ;^130^^^^^129^131^return new NormalDistributionImpl ( mean, sd ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createNormalDistribution [RETURN_TYPE] NormalDistribution   double mean double sd [VARIABLES] boolean  double  mean  sd  
[buglab_swap_variables]^return new PascalDistributionImpl ( probabilityOfSuccess, numberOfSuccesses ) ;^166^^^^^165^167^return new PascalDistributionImpl ( numberOfSuccesses, probabilityOfSuccess ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createPascalDistribution [RETURN_TYPE] PascalDistribution   int numberOfSuccesses double probabilityOfSuccess [VARIABLES] boolean  double  probabilityOfSuccess  int  numberOfSuccesses  
[buglab_swap_variables]^return new PascalDistributionImpl (  probabilityOfSuccess ) ;^166^^^^^165^167^return new PascalDistributionImpl ( numberOfSuccesses, probabilityOfSuccess ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createPascalDistribution [RETURN_TYPE] PascalDistribution   int numberOfSuccesses double probabilityOfSuccess [VARIABLES] boolean  double  probabilityOfSuccess  int  numberOfSuccesses  
[buglab_swap_variables]^return new PascalDistributionImpl ( numberOfSuccesses ) ;^166^^^^^165^167^return new PascalDistributionImpl ( numberOfSuccesses, probabilityOfSuccess ) ;^[CLASS] DistributionFactoryImpl  [METHOD] createPascalDistribution [RETURN_TYPE] PascalDistribution   int numberOfSuccesses double probabilityOfSuccess [VARIABLES] boolean  double  probabilityOfSuccess  int  numberOfSuccesses  
