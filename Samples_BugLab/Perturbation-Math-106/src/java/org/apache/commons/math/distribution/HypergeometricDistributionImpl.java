[buglab_swap_variables]^if  ( populationSize > numberOfSuccesses )  {^54^^^^^51^66^if  ( numberOfSuccesses > populationSize )  {^[CLASS] HypergeometricDistributionImpl  [METHOD] <init> [RETURN_TYPE] HypergeometricDistributionImpl(int,int,int)   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  boolean  
[buglab_swap_variables]^if  ( populationSize > sampleSize )  {^59^^^^^51^66^if  ( sampleSize > populationSize )  {^[CLASS] HypergeometricDistributionImpl  [METHOD] <init> [RETURN_TYPE] HypergeometricDistributionImpl(int,int,int)   int populationSize int numberOfSuccesses int sampleSize [VARIABLES] long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  boolean  
[buglab_swap_variables]^int[] domain = getDomain ( k, m, n ) ;^80^^^^^73^90^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain (  m, k ) ;^80^^^^^73^90^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( m, n, k ) ;^80^^^^^73^90^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n,  k ) ;^80^^^^^73^90^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n, m ) ;^80^^^^^73^90^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( m[0], x, 1, n, domain, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], k, 1, n, m, x ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0],  1, n, m, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], x, 1, m, n, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], x, 1,  m, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], x, 1, n,  k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], x, 1, n, k, m ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], x, 1, n, m ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( k[0], x, 1, n, m, domain ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], n, 1, x, m, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( n[0], x, 1, domain, m, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], m, 1, n, x, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( x[0], domain, 1, n, m, k ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[0], x, 1, k, m, n ) ;^86^^^^^73^90^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^getLowerDomain ( m, n, k ) , getUpperDomain ( m, k ) };^102^103^104^^^100^105^getLowerDomain ( n, m, k ) , getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getLowerDomain (  m, k ) , getUpperDomain ( m, k ) };^102^103^104^^^100^105^getLowerDomain ( n, m, k ) , getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getLowerDomain ( n,  k ) , getUpperDomain ( m, k ) };^102^103^104^^^100^105^getLowerDomain ( n, m, k ) , getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getLowerDomain ( n, k, m ) , getUpperDomain ( m, k ) };^102^103^104^^^100^105^getLowerDomain ( n, m, k ) , getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getLowerDomain ( n, m ) , getUpperDomain ( m, k ) };^102^103^104^^^100^105^getLowerDomain ( n, m, k ) , getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getUpperDomain ( k, m ) };^103^104^^^^100^105^getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getUpperDomain (  k ) };^103^104^^^^100^105^getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^getUpperDomain ( m ) };^103^104^^^^100^105^getUpperDomain ( m, k ) };^[CLASS] HypergeometricDistributionImpl  [METHOD] getDomain [RETURN_TYPE] int[]   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.max ( 0, n -  ( m - k )  ) ;^141^^^^^140^142^return Math.max ( 0, m -  ( n - k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getLowerDomain [RETURN_TYPE] int   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.max ( 0 -  ( n - k )  ) ;^141^^^^^140^142^return Math.max ( 0, m -  ( n - k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getLowerDomain [RETURN_TYPE] int   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.max ( 0, m -  ( k - n )  ) ;^141^^^^^140^142^return Math.max ( 0, m -  ( n - k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getLowerDomain [RETURN_TYPE] int   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.max ( 0, k -  ( n - m )  ) ;^141^^^^^140^142^return Math.max ( 0, m -  ( n - k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getLowerDomain [RETURN_TYPE] int   int n int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.min ( m, k ) ;^176^^^^^175^177^return Math.min ( k, m ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getUpperDomain [RETURN_TYPE] int   int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.min (  m ) ;^176^^^^^175^177^return Math.min ( k, m ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getUpperDomain [RETURN_TYPE] int   int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.min ( k ) ;^176^^^^^175^177^return Math.min ( k, m ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] getUpperDomain [RETURN_TYPE] int   int m int k [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^int[] domain = getDomain ( m, n, k ) ;^192^^^^^185^200^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain (  m, k ) ;^192^^^^^185^200^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n,  k ) ;^192^^^^^185^200^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n, k, m ) ;^192^^^^^185^200^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n, m ) ;^192^^^^^185^200^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( m, n, k, x ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability (  m, k, x ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( n, x, k, m ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( n,  k, x ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( n, k, m, x ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( n, m,  x ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( x, m, k, n ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( n, m, k ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( n, m, x, k ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^ret = probability ( k, m, n, x ) ;^196^^^^^185^200^ret = probability ( n, m, k, x ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  double  ret  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( x, m )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog (  x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( m )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( m, n )  + MathUtils.binomialCoefficientLog ( x - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog (  k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( m, k )  + MathUtils.binomialCoefficientLog ( n - m, x - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^return Math.exp ( MathUtils.binomialCoefficientLog ( k, x )  + MathUtils.binomialCoefficientLog ( n - m, m - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^213^214^215^^^212^216^return Math.exp ( MathUtils.binomialCoefficientLog ( m, x )  + MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( k - m, n - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^214^215^^^^212^216^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog (  k )  ) ;^214^215^^^^212^216^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( n - k, m - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^214^215^^^^212^216^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( n -  k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^214^215^^^^212^216^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( n - m - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^214^215^^^^212^216^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( n - x, k - m )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^214^215^^^^212^216^MathUtils.binomialCoefficientLog ( n - m, k - x )  - MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( k, n )  ) ;^215^^^^^212^216^MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog (  k )  ) ;^215^^^^^212^216^MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^MathUtils.binomialCoefficientLog ( n )  ) ;^215^^^^^212^216^MathUtils.binomialCoefficientLog ( n, k )  ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int n int m int k int x [VARIABLES] long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  boolean  
[buglab_swap_variables]^int[] domain = getDomain ( k, m, n ) ;^270^^^^^263^280^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain (  m, k ) ;^270^^^^^263^280^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n, k, m ) ;^270^^^^^263^280^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n,  k ) ;^270^^^^^263^280^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( n, m ) ;^270^^^^^263^280^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^int[] domain = getDomain ( m, n, k ) ;^270^^^^^263^280^int[] domain = getDomain ( n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^if  ( domain < x[0] )  {^271^^^^^263^280^if  ( x < domain[0] )  {^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^} else if ( domain > x[1] )  {^273^^^^^263^280^} else if ( x > domain[1] )  {^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( m[1], x, -1, n, domain, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], k, -1, n, m, x ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1],  -1, n, m, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], n, -1, x, m, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], x, -1,  m, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], m, -1, n, x, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], x, -1, n,  k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], x, -1, n, k, m ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], x, -1, n, m ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( k[1], x, -1, n, m, domain ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( x[1], domain, -1, n, m, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], x, -1, k, m, n ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( n[1], x, -1, domain, m, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^ret = innerCumulativeProbability ( domain[1], x, -1, m, n, k ) ;^276^^^^^263^280^ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] upperCumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] int[]  domain  boolean  long  serialVersionUID  int  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  double  ret  
[buglab_swap_variables]^double ret = probability ( m, n, k, x0 ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability (  m, k, x0 ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( n,  k, x0 ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( n, k, m, x0 ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( n, m,  x0 ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( n, x0, k, m ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( n, m, k ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( k, m, n, x0 ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^double ret = probability ( x0, m, k, n ) ;^298^^^^^295^304^double ret = probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^while  ( x1 != x0 )  {^299^^^^^295^304^while  ( x0 != x1 )  {^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( x0, m, k, n ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability (  m, k, x0 ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( m, n, k, x0 ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( n,  k, x0 ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( n, k, m, x0 ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( n, m,  x0 ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( n, m, x0, k ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( n, m, k ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( n, x0, k, m ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
[buglab_swap_variables]^ret += probability ( k, m, n, x0 ) ;^301^^^^^295^304^ret += probability ( n, m, k, x0 ) ;^[CLASS] HypergeometricDistributionImpl  [METHOD] innerCumulativeProbability [RETURN_TYPE] double   int x0 int x1 int dx int n int m int k [VARIABLES] boolean  long  serialVersionUID  int  dx  k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  x0  x1  double  ret  
