[BugLab_Variable_Misuse]^rDiag = rowew double[n];^66^^^^^51^81^rDiag = new double[n];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^if  ( qr[minor][minor] > 0 )  xNormSqr = -a;^86^^^^^71^101^if  ( qr[minor][minor] > 0 )  a = -a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^if  ( qr[minor][minor] == 0 )  a = -a;^86^^^^^71^101^if  ( qr[minor][minor] > 0 )  a = -a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^if  ( qr[minor][minor] > 1 )  a = -a;^86^^^^^71^101^if  ( qr[minor][minor] > 0 )  a = -a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^if  ( xNormSqr != 0.0 )  {^89^^^^^74^104^if  ( a != 0.0 )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^if  ( a == 0.0 )  {^89^^^^^74^104^if  ( a != 0.0 )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int col = row+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int col = minor+1; col < row; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int col = m+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int minor = col+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int col = ninor+1; col < m; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  <<  ( int col = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int col = minor+1; col <= n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int n = minor; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = ninor; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int minor = row; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int m = rowinor; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int row = minor; row <= m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha - -= qr[row][col]*qr[row][minor];^116^^^^^101^131^alpha -= qr[row][col]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha += qr[row][col]*qr[row][minor];^116^^^^^101^131^alpha -= qr[row][col]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = n; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int n = minor; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = ninor; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int minor = row; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int m = rowinor; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int row = minorinor; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int row = minor; row <= m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[row][col] + -= alpha*qr[row][minor];^122^^^^^107^137^qr[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[row][col] = alpha*qr[row][minor];^122^^^^^107^137^qr[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha / -= qr[row][col]*qr[row][minor];^116^^^^^101^131^alpha -= qr[row][col]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha = qr[row][col]*qr[row][minor];^116^^^^^101^131^alpha -= qr[row][col]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^alpha /= xNormSqr*qr[minor][minor];^118^^^^^103^133^alpha /= a*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha - /= a*qr[minor][minor];^118^^^^^103^133^alpha /= a*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^qr[row][col] -= xNormSqr*qr[row][minor];^122^^^^^107^137^qr[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[row][col] - -= alpha*qr[row][minor];^122^^^^^107^137^qr[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = n; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int row = m; row < minor; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^qr[minor][minor] -= xNormSqr;^99^^^^^84^114^qr[minor][minor] -= a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[minor][minor] = a;^99^^^^^84^114^qr[minor][minor] -= a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha / /= a*qr[minor][minor];^118^^^^^103^133^alpha /= a*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[row][col] / -= alpha*qr[row][minor];^122^^^^^107^137^qr[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  >>  ( int col = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = 0; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int rowinor = 0; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int minor = 0; minor < Math.min ( m, row ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int minorinor = 0; m < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int ninor = 0; minor < Math.min ( m, m ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int minor = 0; minor > Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int minor = 0; minor <= Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  &&  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  >=  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^for  ( int minor = 1; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^for  ( int minor = col; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^if  ( a[minor][minor] > 0 )  qr = -a;^86^^^^^71^101^if  ( qr[minor][minor] > 0 )  a = -a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^if  ( qr[minor][minor] >= 0 )  a = -a;^86^^^^^71^101^if  ( qr[minor][minor] > 0 )  a = -a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^if  ( a <= 0.0 )  {^89^^^^^74^104^if  ( a != 0.0 )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int col = rowinor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int n = minor+1; col < col; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  >=  ( int col = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int minor = minor; row < m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[row][col] += alpha*qr[row][minor];^122^^^^^107^137^qr[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha + /= a*qr[minor][minor];^118^^^^^103^133^alpha /= a*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double alpha = 1;^114^^^^^99^129^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int row = m; row < minor; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int row = minorinor; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int row = minor; row == m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int row = minor; row == m; row++ )  {^121^^^^^106^136^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^qr[minor][minor] += a;^99^^^^^84^114^qr[minor][minor] -= a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  &  ( int col = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^for  ( int col = minor+0; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = n; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int minor = minor; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int row = ninor; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int minor = row; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int m = rowinor; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int row = minor; row <= m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  <<  ( int row = minor; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^xNormSqr / += qr[row][minor]*qr[row][minor];^83^^^^^68^98^xNormSqr += qr[row][minor]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int col = n+1; col < minor; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  <  ( int col = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int col = minor+1; col > n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double alpha = -1;^114^^^^^99^129^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int row = minor; row > m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^xNormSqr - += qr[row][minor]*qr[row][minor];^83^^^^^68^98^xNormSqr += qr[row][minor]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^rDiag[minor] = xNormSqr;^87^^^^^72^102^rDiag[minor] = a;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double xNormSqr = -1;^81^^^^^66^96^double xNormSqr = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^double a = Math.sqrt ( alpha ) ;^85^^^^^70^100^double a = Math.sqrt ( xNormSqr ) ;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^for  ( int col = minor+2; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double alpha = minor;^114^^^^^99^129^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int n = minor; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  >=  ( int row = minor; row < m; row++ )  {^82^^^^^67^97^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int n = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Argument_Swapping]^for  ( int col = minorinor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for  ( int col = minor+1; col == n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^for  ( int col = minor+n; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^for  ( int minor = minor; row < m; row++ )  {^115^^^^^100^130^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double alpha = n;^114^^^^^99^129^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^alpha + -= qr[row][col]*qr[row][minor];^116^^^^^101^131^alpha -= qr[row][col]*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^for  ( int minor = n; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^58^88^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double xNormSqr = 1;^81^^^^^66^96^double xNormSqr = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Operator]^for   instanceof   ( int col = minor+1; col < n; col++ )  {^113^^^^^98^128^for  ( int col = minor+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Wrong_Literal]^double alpha = row;^114^^^^^99^129^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] <init> [RETURN_TYPE] RealMatrix)   RealMatrix matrix [VARIABLES] double[][]  qr  boolean  double[]  rDiag  RealMatrix  matrix  int  col  m  minor  n  row  double  a  alpha  xNormSqr  
[BugLab_Variable_Misuse]^RealMatrixImpl ret = new RealMatrixImpl ( row,n ) ;^135^^^^^132^146^RealMatrixImpl ret = new RealMatrixImpl ( m,n ) ;^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^RealMatrixImpl ret = rowew RealMatrixImpl ( m,n ) ;^135^^^^^132^146^RealMatrixImpl ret = new RealMatrixImpl ( m,n ) ;^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Argument_Swapping]^RealMatrixImpl ret = mew RealMatrixImpl ( n,n ) ;^135^^^^^132^146^RealMatrixImpl ret = new RealMatrixImpl ( m,n ) ;^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^RealMatrixImpl ret = minorew RealMatrixImpl ( m,n ) ;^135^^^^^132^146^RealMatrixImpl ret = new RealMatrixImpl ( m,n ) ;^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int minor = Math.min ( m,n ) -1; row >= 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int row = Math.miminor ( m,n ) -1; row >= 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for  ( int row = Math.min ( m,n ) -1; row > 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Literal]^for  ( int row = Math.min ( m,n ) -2; row >= 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Literal]^for  ( int row = Math.min ( m,n ) -1; row >= minor; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int col = n+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int row = row+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int col = qrow+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int col = row+1; col < row; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Argument_Swapping]^for  ( int col = n+1; col < row; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Argument_Swapping]^for  ( int n = row+1; col < col; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for   instanceof   ( int col = row+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for  ( int col = row+1; col > n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^r[row][row] = qrDiag[row];^140^^^^^132^146^r[row][row] = rDiag[row];^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Argument_Swapping]^r[row][row] = r[row];^140^^^^^132^146^r[row][row] = rDiag[row];^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^r[row][col] = r[row][col];^142^^^^^132^146^r[row][col] = qr[row][col];^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for  <<  ( int col = row+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Literal]^for  ( int col = row+minor; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for  >=  ( int col = row+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for  ( int col = row+1; col <= n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Literal]^for  ( int col = row+n; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Argument_Swapping]^r[row][row] = rDiagDiag[row];^140^^^^^132^146^r[row][row] = rDiag[row];^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int row = Math.min ( n,n ) -1; row >= 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Literal]^for  ( int row = Math.min ( m,n ) -minor; row >= 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Operator]^for  ==  ( int col = row+1; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Wrong_Literal]^for  ( int col = row+2; col < n; col++ )  {^141^^^^^132^146^for  ( int col = row+1; col < n; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^for  ( int row = Math.min ( row,n ) -1; row >= 0; row-- )  {^139^^^^^132^146^for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getR [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  
[BugLab_Variable_Misuse]^RealMatrixImpl ret = new RealMatrixImpl ( n,m ) ;^154^^^^^139^169^RealMatrixImpl ret = new RealMatrixImpl ( m,m ) ;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int row = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int rowinor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int minor = m-1; minor >= Math.mirow ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int m = minor-1; minor >= Math.min ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int minor = m-1; minor > Math.min ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^for  ( int minor = m-2; minor >= Math.min ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^Q[minor][minor]=col;^163^^^^^148^178^Q[minor][minor]=1;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^for  ( int minor = m-row; minor >= Math.min ( m,n ) ; minor-- )  {^162^^^^^147^177^for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^if  ( r[minor][minor] != 0.0 )  {^168^^^^^153^183^if  ( qr[minor][minor] != 0.0 )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^if  ( qr[minor][minor] == 0.0 )  {^168^^^^^153^183^if  ( qr[minor][minor] != 0.0 )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int col = row; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int row = minor; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int col = rowinor; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int minor = col; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int col = minor; col <= m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int col = minor; col > m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int n = minor; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int row = ninor; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int row = m; row < minor; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int m = rowinor; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int row = minor; row <= m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^alpha -= r[row][col] * qr[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^alpha -= Q[row][col] * r[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^alpha -= qr[row][col] * Q[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha - -= Q[row][col] * qr[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha = Q[row][col] * qr[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int row = n; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int n = minor; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int row = ninor; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int row = minorinor; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int row = minor; row <= m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^Q[row][col] - -= alpha*qr[row][minor];^177^^^^^162^192^Q[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^Q[row][col] = alpha*qr[row][minor];^177^^^^^162^192^Q[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha - /= rDiag[minor]*qr[minor][minor];^174^^^^^159^189^alpha /= rDiag[minor]*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^Q[row][col] / -= alpha*qr[row][minor];^177^^^^^162^192^Q[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^double alpha = row;^170^^^^^155^185^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int row = n; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int row = minor; row == m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int minor = row; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int row = minor; row > m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha / -= Q[row][col] * qr[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha / /= rDiag[minor]*qr[minor][minor];^174^^^^^159^189^alpha /= rDiag[minor]*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^Q[row][col] += alpha*qr[row][minor];^177^^^^^162^192^Q[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int n = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int rowinor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int minor = Math.mirow ( m,n ) -1; minor >= 0; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int m = Math.min ( minor,n ) -1; minor >= 0; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int minor = Math.min ( m,n ) -1; minor > 0; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^for  ( int minor = Math.min ( m,n ) -2; minor >= 0; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^for  ( int minor = Math.min ( m,n ) -1; minor >= col; minor-- ) {^166^^^^^151^181^for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int col = m; col < minor; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int m = colinor; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int col = minorinor; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int minor = row; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int row = minorinor; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int row = minor; row > m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha += Q[row][col] * qr[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int minor = minor; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int row = m; row < minor; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha + -= Q[row][col] * qr[row][minor];^172^^^^^157^187^alpha -= Q[row][col] * qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^alpha + /= rDiag[minor]*qr[minor][minor];^174^^^^^159^189^alpha /= rDiag[minor]*qr[minor][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^Q[row][col] + -= alpha*qr[row][minor];^177^^^^^162^192^Q[row][col] -= alpha*qr[row][minor];^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^double alpha = minor;^170^^^^^155^185^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^double alpha = -1;^170^^^^^155^185^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int n = minor; col < m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int col = minor; col == m; col++ )  {^169^^^^^154^184^for  ( int col = minor; col < m; col++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Variable_Misuse]^for  ( int minor = minor; row < m; row++ )  {^171^^^^^156^186^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Operator]^for  ( int row = minor; row == m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Argument_Swapping]^for  ( int m = rowinor; row < m; row++ )  {^176^^^^^161^191^for  ( int row = minor; row < m; row++ )  {^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^Q[minor][minor] = row;^167^^^^^152^182^Q[minor][minor] = 1;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^double alpha = m;^170^^^^^155^185^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^double alpha = 1;^170^^^^^155^185^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^Q[minor][minor] = minor;^167^^^^^152^182^Q[minor][minor] = 1;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
[BugLab_Wrong_Literal]^double alpha = n;^170^^^^^155^185^double alpha = 0;^[CLASS] QRDecompositionImpl  [METHOD] getQ [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  Q  qr  r  RealMatrixImpl  ret  boolean  double[]  rDiag  int  col  m  minor  n  row  double  alpha  
