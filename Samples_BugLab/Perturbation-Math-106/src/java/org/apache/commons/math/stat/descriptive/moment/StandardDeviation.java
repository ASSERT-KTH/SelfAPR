[buglab_swap_variables]^variance = new Variance ( m2, isBiasCorrected ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[buglab_swap_variables]^variance = new Variance (  m2 ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[buglab_swap_variables]^variance = new Variance ( isBiasCorrected ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[buglab_swap_variables]^return Math.sqrt ( values.evaluate ( variance )  ) ;^137^^^^^136^138^return Math.sqrt ( variance.evaluate ( values )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  
[buglab_swap_variables]^return Math.sqrt ( values.evaluate ( variance, begin, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate (  begin, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( begin, values, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values,  length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values, length, begin )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values, begin )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( length.evaluate ( values, begin, variance )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( length, begin, values )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( length, mean, begin, values )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate (  mean, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( mean, values, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values,  begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values, mean, length, begin )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values, mean,  length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values, mean, begin )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( length.evaluate ( values, mean, begin, variance )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( values.evaluate ( variance, mean, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values, begin, mean, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( mean.evaluate ( values, variance, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[buglab_swap_variables]^return Math.sqrt ( values.evaluate ( variance, mean )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate (  mean )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( mean, values )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[buglab_swap_variables]^return Math.sqrt ( variance.evaluate ( values )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[buglab_swap_variables]^return Math.sqrt ( mean.evaluate ( values, variance )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
