[BugLab_Variable_Misuse]^return solve ( initial, max ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^return solve ( min, initial ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^return solve ( max, min ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifyInterval ( y0, max ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^verifyInterval ( min, y0 ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^verifyInterval ( max, min ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double x0 = y2;^94^^^^^79^109^double x0 = min;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double x1 = y2;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double y0 = f.value ( y2 ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double y0 = x0.value ( f ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double y1 = f.value ( y0 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double y1 = x1.value ( f ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double y1 = f.value ( x2 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y2 * y1 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 * y2 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( y1 * y0 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( y0 * y1 == 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( y0 + y1 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( yi * y1 >= i )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y0 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y2 + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + x2 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y2 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y0 + "," + max + "]" + "  Values: [" + min + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + max + "," + min + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y0 + "]" + "  Values: [" + max + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y1 + "]" + "  Values: [" + y0 + "," + max + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  |  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "   instanceof   Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  >>  "  Endpoints: ["  >>  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  >  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y2 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y2 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y1 + "," + max + "]" + "  Values: [" + y0 + "," + min + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y1 + "," + y0 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ^  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  &  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  &&  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <<  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  <=  "  Endpoints: ["  <=  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ==  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >>  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  <<  "  Endpoints: ["  <<  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  |  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y1 + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  &&  "  Endpoints: ["  &&  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  <=  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double x2 = y2;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double y2 = x1;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double oldDelta = y0 - x1;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double oldDelta = x2 - y2;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double oldDelta = x1 - x2;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double oldDelta = x2  ^  x1;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^int i = 1;^110^^^^^95^125^int i = 0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i > maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i == maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i <= maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x2 )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.abs ( y2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( y1 )  < Math.abs ( y2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y2 )  <= Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = y2;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = y0;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = x2;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = y2;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = x2;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = x1;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y0 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( functionValueAccuracy )  <= y1 )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y1 )  < functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y0, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x1 ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y0 )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( y2 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( oldDelta )  < Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( oldDelta )  < Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( oldDelta )  <= Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if + ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y2, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x1 ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y1 )  > Math.abs ( x2 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( y0 )  > Math.abs ( y1 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y1 )  < Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y1 )  >= Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( Math.abs ( y0 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( delta / y1 > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( oldDelta / delta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta / oldDelta >= 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta * oldDelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( delta / oldDelta > 0 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * x2;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = 0.5 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( y2 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - y2 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - x1 )  /  ( 1 - y1 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - x1 )  /  ( 1 - y0 / x1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( y1 - x1 )  /  ( 1 - y0 / x0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( x0 - y1 )  /  ( 1 - y0 / x1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( x0 - x1 )  /  ( 1 - y1 / y0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  -  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0  |  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1  ^  y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 - y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y2;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta - = 0.5 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * x2;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = 0.5 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y1 / oldDelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( delta / y2 > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( oldDelta / delta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta / oldDelta == 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta - oldDelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( delta / oldDelta > i )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y0;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta - = 0.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( x1 > 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( y1 > 0 )  ==  ( x2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 > 0 )  !=  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 == 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 > 0 )  ==  ( y2 >= 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  (  ( y1 > i )  ==  ( y2 > i )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y2;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = x2;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = y2;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y1;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = y1;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = y1;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( y2 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - y2 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - x1 )  /  ( 1 - y1 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - x1 )  /  ( 1 - y0 / x2 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( y1 - x1 )  /  ( 1 - y0 / x0 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( x0 - y1 )  /  ( 1 - y0 / x1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( x0 - y0 )  /  ( 1 - x1 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  *  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0  ^  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1  ^  y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 + y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^delta =  ( x0 - xi )  /  ( i - y0 / yi ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y2;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta + = 0.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = y1;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = x1;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + y0;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x1 = delta + x1;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( y2 ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^y1 = x1.value ( f ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y1;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = y1 - x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x2 - y2;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^oldDelta = x1 - x2;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^oldDelta = x2  <  x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^return null;^127^^^^^112^142^return result;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y1 )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y2, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^Math.max ( relativeAccuracy * Math.abs ( y1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^Math.max + ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^Math.max ( relativeAccuracy * Math.abs ( x2 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y2, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x1 ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y1 )  > Math.abs ( x1 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.abs ( x2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = y1;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = y0;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = y0;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = y2;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y1 )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( y0 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , null )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( x1 )  < Math.max ( relativeAccuracy * Math.abs ( oldDelta ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if - ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^return this;^127^^^^^124^128^return result;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( x2, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( Math.abs ( yi )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 / oldDelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta + oldDelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( delta / oldDelta > i )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y1;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( y0 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - x1 )  /  ( 1 - y0 / y0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( x0 - y0 )  /  ( 1 - x1 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( y0 - x1 )  /  ( 1 - x0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  *  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0  <=  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1  &&  y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 + y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^delta =  ( x0 - x0 )  /  ( 0 - y0 / y0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y2;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta - = 0.5 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y2 / oldDelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta / oldDelta >= 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( delta / oldDelta > 0 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = 0.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( x2 > 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( y1 > 0 )  ==  ( y0 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 > 0 )  >  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 >= 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = x2;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = y1;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = x2;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y0;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = x2;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta + = 0.5 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( y0 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta =  ( x0 - x1 )  /  ( 1 - y2 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( y0 - x1 )  /  ( 1 - x0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta =  ( x0 - x1 )  /  ( 1 - y1 / y0 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  -  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0  &&  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1  !=  y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 - y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = y2;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = y1 + delta;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + y2;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = x1;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = y0 - x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x2 - y1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^oldDelta = x2  >=  x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^return 0;^122^^^^^107^137^return result;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y0 )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x1 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x2 )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^Math.max ( relativeAccuracy * Math.abs ( y2 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^Math.max / ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y1, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x2 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( y0 ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
