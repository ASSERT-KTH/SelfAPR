[buglab_swap_variables]^return regularizedBeta ( DEFAULT_EPSILON, a, b, x, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta (  a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, b, a, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x,  b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, DEFAULT_EPSILON, b, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, b,  Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( a, x, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( b, a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( epsilon, a, b, x, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta (  a, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, b, a, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x,  b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a,  epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, epsilon, b, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, b,  Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( b, a, x, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( a, x, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, epsilon, b, a, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[buglab_swap_variables]^return regularizedBeta ( b, a, x, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta (  a, b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, DEFAULT_EPSILON, b, a, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x,  b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, b, a, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a,  DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, maxIterations, DEFAULT_EPSILON, b ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, b, DEFAULT_EPSILON ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, DEFAULT_EPSILON, b, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, a, b,  maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( a, x, b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( x, maxIterations, b, DEFAULT_EPSILON, a ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^return regularizedBeta ( DEFAULT_EPSILON, a, b, x, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[buglab_swap_variables]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^} else if  ( b >  ( a + 1.0 )  /  ( a + x + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^} else if  ( a >  ( x + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( m *  ( x - m )  * b )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( b * Math.log ( x )  )  +  ( a * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( b )  )  +  ( x * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( epsilon * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( epsilon )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( maxIterations * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, b )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( fraction * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / a.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( epsilon * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( maxIterations * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( b )  - logBeta ( a, a, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, maxIterations, epsilon, b )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, epsilon, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( maxIterations )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / x.evaluate ( fraction, epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( maxIterations, epsilon, x ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( epsilon, x, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( x,  maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / maxIterations.evaluate ( x, epsilon, fraction ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( x, epsilon ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - a, b, x, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 -  b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, a, b, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x,  a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, epsilon, a, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, b,  epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, epsilon, a, b, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a,  maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, maxIterations, epsilon, a ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - epsilon, b, a, x, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - maxIterations, b, a, epsilon, x ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - b, x, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( m *  ( x - m )  * b )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( x * Math.log ( a )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( maxIterations )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, x )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( maxIterations * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, b )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( epsilon * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, fraction )  )  * 1.0 / maxIterations.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( fraction * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / b.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, maxIterations, epsilon ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( b * Math.log ( x )  )  +  ( a * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( b )  )  +  ( x * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( epsilon )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, maxIterations, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( b )  - logBeta ( a, a, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, epsilon, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, b, maxIterations, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( maxIterations )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / epsilon.evaluate ( x, fraction, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( epsilon, x, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( x,  maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( maxIterations, epsilon, x ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( x, epsilon ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, fraction )  )  * 1.0 / maxIterations.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, fraction, maxIterations )  )  * 1.0 / epsilon.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( x * Math.log ( a )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( maxIterations )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, x )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, b, maxIterations, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / epsilon.evaluate ( x, fraction, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / fraction.evaluate ( x, maxIterations, epsilon ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = 1.0 - regularizedBeta ( 1.0 - x, maxIterations, a, epsilon, b ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( epsilon * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( a * Math.log ( fraction )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / x.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = Math.exp (  ( maxIterations * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( epsilon )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^Math.log ( a )  - logBeta ( a, maxIterations, epsilon, b )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^1.0 / x.evaluate ( fraction, epsilon, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[buglab_swap_variables]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^ret =  ( m *  ( x - m )  * b )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[buglab_swap_variables]^return logBeta ( DEFAULT_EPSILON, b, a, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[buglab_swap_variables]^return logBeta (  b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[buglab_swap_variables]^return logBeta ( a, DEFAULT_EPSILON, b, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[buglab_swap_variables]^return logBeta ( a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[buglab_swap_variables]^return logBeta ( a, b,  Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[buglab_swap_variables]^ret = Gamma.logGamma ( b )  + Gamma.logGamma ( a )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[buglab_swap_variables]^Gamma.logGamma ( b + a ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[buglab_swap_variables]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[buglab_swap_variables]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
