[buglab_swap_variables]^if  ( value > d || Double.isNaN ( value )  )  {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[buglab_swap_variables]^if  ( test ( length, begin, values )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^if  ( test (  begin, length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^if  ( test ( begin, values, length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^if  ( test ( values,  length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^if  ( test ( values, length, begin )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^if  ( test ( values, begin )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^for  ( int i = length; i < begin + begin; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^for  ( beginnt i = i; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[buglab_swap_variables]^max =  ( values > max[i] )  ? max : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
