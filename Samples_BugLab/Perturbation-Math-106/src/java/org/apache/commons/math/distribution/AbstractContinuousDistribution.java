[buglab_swap_variables]^return cumulativeProbability ( p )  - x;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^throw new FunctionEvaluationException ( ex, "Error computing cdf", x ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^throw new FunctionEvaluationException (  "Error computing cdf", ex ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^throw new FunctionEvaluationException ( x, "Error computing cdf" ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^if  ( Math.abs ( lowerBound.value ( rootFindingFunction )  )  < 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^if  ( Math.abs ( upperBound.value ( rootFindingFunction )  )  < 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( p, getInitialDomain ( rootFindingFunction ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket (  getInitialDomain ( p ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( lowerBound ) , p, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , upperBound, lowerBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) ,  upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( upperBound ) , lowerBound, p ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^bracket = UnivariateRealSolverUtils.bracket ( upperBound, getInitialDomain ( p ) , lowerBound, rootFindingFunction ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^double root = UnivariateRealSolverUtils.solve ( bracket, rootFindingFunction[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^double root = UnivariateRealSolverUtils.solve (  bracket[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[buglab_swap_variables]^return cumulativeProbability ( p )  - x;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[buglab_swap_variables]^throw new FunctionEvaluationException ( ex, "Error computing cdf", x ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[buglab_swap_variables]^throw new FunctionEvaluationException (  "Error computing cdf", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[buglab_swap_variables]^throw new FunctionEvaluationException ( x, "Error computing cdf" ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[buglab_swap_variables]^return cumulativeProbability ( p )  - x;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[buglab_swap_variables]^throw new FunctionEvaluationException ( ex, "Error computing cdf", x ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[buglab_swap_variables]^throw new FunctionEvaluationException (  "Error computing cdf", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[buglab_swap_variables]^throw new FunctionEvaluationException ( x, "Error computing cdf" ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
