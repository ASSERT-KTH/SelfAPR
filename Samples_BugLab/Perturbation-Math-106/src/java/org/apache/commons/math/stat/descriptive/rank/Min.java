[BugLab_Argument_Swapping]^if  ( value < d || Double.isNaN ( value )  )  {^62^^^^^61^66^if  ( d < value || Double.isNaN ( value )  )  {^[CLASS] Min  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( d < value && Double.isNaN ( value )  )  {^62^^^^^61^66^if  ( d < value || Double.isNaN ( value )  )  {^[CLASS] Min  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( d <= value || Double.isNaN ( value )  )  {^62^^^^^61^66^if  ( d < value || Double.isNaN ( value )  )  {^[CLASS] Min  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^value = value;^63^^^^^61^66^value = d;^[CLASS] Min  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( d < d || Double.isNaN ( value )  )  {^62^^^^^61^66^if  ( d < value || Double.isNaN ( value )  )  {^[CLASS] Min  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^n = -1;^73^^^^^71^74^n = 0;^[CLASS] Min  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return d;^80^^^^^79^81^return value;^[CLASS] Min  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return serialVersionUID;^87^^^^^86^88^return n;^[CLASS] Min  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( test ( values, begin, begin )  )  {^114^^^^^112^123^if  ( test ( values, begin, length )  )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( length, begin, values )  )  {^114^^^^^112^123^if  ( test ( values, begin, length )  )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( values, length, begin )  )  {^114^^^^^112^123^if  ( test ( values, begin, length )  )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^min =  ( values < min[i] )  ? min : values[i];^118^^^^^112^123^min =  ( min < values[i] )  ? min : values[i];^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^min =  ( min <= values[i] )  ? min : values[i];^118^^^^^112^123^min =  ( min < values[i] )  ? min : values[i];^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = length; i < begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = begin; i < begin + begin; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( beginnt i = i; i < begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  <=  ( int i = begin; i < begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^min =  ( value < values[i] )  ? min : values[i];^118^^^^^112^123^min =  ( min < values[i] )  ? min : values[i];^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i > begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  <<  ( int i = begin; i < begin + length; i++ )  {^116^^^^^112^123^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( test ( values, begin, i )  )  {^114^^^^^112^123^if  ( test ( values, begin, length )  )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( begin, values, length )  )  {^114^^^^^112^123^if  ( test ( values, begin, length )  )  {^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^return value;^122^^^^^112^123^return min;^[CLASS] Min  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  min  value  long  n  serialVersionUID  int  begin  i  length  
