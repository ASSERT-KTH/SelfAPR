[BugLab_Wrong_Literal]^int bytesOut = randInt;^86^^^^^85^99^int bytesOut = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^while  ( i < bytes.length )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^while  ( bytesOut < i )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Argument_Swapping]^while  ( bytes.lengthOut < bytes )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^while  ( bytesOut == bytes.length )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^if  (  bytesOut > 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^if  (  i >= 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^if  (  i > i )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^randInt = i >> 8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  <<  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^if  ( randInt == bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^if  ( bytesOut == randInt )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Argument_Swapping]^if  ( bytes.length == bytesOut )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Argument_Swapping]^if  ( bytes.lengthOut == bytes )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^if  ( bytesOut <= bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Variable_Misuse]^for  ( randIntnt i = 0; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^for  ( int i = i; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  &  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^randInt = randInt >> 9;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Argument_Swapping]^if  ( bytes == bytesOut.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^if  ( bytesOut >= bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  ==  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^randInt = randInt >> randInt;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  |  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^if  (  i == 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^if  (  i > 1 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  &&  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Argument_Swapping]^if  ( bytesOutOut == bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^if  ( bytesOut > bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < bytesOut; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  >=  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^randInt = randInt  <  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[BugLab_Wrong_Operator]^return - ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^116^^^^^115^117^return  ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] double  cachedNormalDeviate  boolean  
[BugLab_Variable_Misuse]^if  ( result <= 0  )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Wrong_Operator]^if  ( n < 0  )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Wrong_Literal]^if  ( n <= result  )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Wrong_Operator]^int result =  ( int )   ( nextDouble (  )  + n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Argument_Swapping]^return n < result ? result : n - 1;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Wrong_Operator]^return result <= n ? result : n - 1;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Wrong_Operator]^return result < n ? result : n   instanceof   1;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Wrong_Literal]^return result < n ? result : n ;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[BugLab_Variable_Misuse]^return  ( long )   ( nextDouble (  )  * Long.1 ) ;^158^^^^^157^159^return  ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] double  cachedNormalDeviate  boolean  
[BugLab_Wrong_Operator]^return / ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^158^^^^^157^159^return  ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] double  cachedNormalDeviate  boolean  
[BugLab_Wrong_Operator]^return nextDouble (  )  < 0.5;^176^^^^^175^177^return nextDouble (  )  <= 0.5;^[CLASS] AbstractRandomGenerator  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] double  cachedNormalDeviate  boolean  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( v2 )  )  {^232^^^^^231^250^if  ( !Double.isNaN ( cachedNormalDeviate )  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^if  ( !Double.isv2 ( cachedNormalDeviate )  )  {^232^^^^^231^250^if  ( !Double.isNaN ( cachedNormalDeviate )  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^return v2;^235^^^^^231^250^return dev;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^double dev = v2;^233^^^^^231^250^double dev = cachedNormalDeviate;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^double s = 2;^239^^^^^231^250^double s = 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^while  ( v2 >=1  )  {^240^^^^^231^250^while  ( s >=1  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v1 = 2 * nextDouble (  )   <  1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v1 = 2 - nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^v1 = 2 * nextDouble (  )  ;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v2 = 2 * nextDouble (  )   &  1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v2 = 2 / nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^v3 = 3 * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^v2 = 2 * nextDouble (  )  ;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^s = s * v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^s = v1 * v1 + s * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Argument_Swapping]^s = v2 * v1 + v1 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s = v1 + v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s + = v1 * v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v1 = 2 * nextDouble (  )   !=  1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v1 = 2 / nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v2 = 2 * nextDouble (  )   ==  1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^v2 = 2 - nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^v1 = 1 * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s = v1 / v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s - = v1 * v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^if  ( s == 0 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^if  ( s != 1 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^s = Math.sqrt ( -2 * Math.log ( v2 )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s = Math.sqrt ( -2 * Math.log ( s )  + s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s + = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^s = Math.sqrt ( -2 * Math.log ( v1 )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s = Math.sqrt ( -2 * Math.log ( s )  - s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^s - = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Literal]^s = Math.sqrt ( -1 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^cachedNormalDeviate = v2 * v1;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Argument_Swapping]^cachedNormalDeviate = s * v2;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^cachedNormalDeviate - = v2 * s;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^return v2 * s;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Variable_Misuse]^return v1 * v2;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Argument_Swapping]^return s * v1;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[BugLab_Wrong_Operator]^return / v1 * s;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
