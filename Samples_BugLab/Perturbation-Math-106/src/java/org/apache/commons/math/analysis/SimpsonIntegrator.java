[buglab_swap_variables]^verifyInterval ( max, min ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^verifyInterval (  max ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^verifyInterval ( min ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^s =  ( 4 * min.stage ( qtrap, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^s =  ( 4 * qtrap.stage (  max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^s =  ( 4 * qtrap.stage ( max, min, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^s =  ( 4 * qtrap.stage ( min,  1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^s =  ( 4 * max.stage ( min, qtrap, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^oldt = min.stage ( qtrap, max, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^oldt = qtrap.stage (  max, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^oldt = qtrap.stage ( max, min, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^oldt = qtrap.stage ( min,  0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^oldt = max.stage ( min, qtrap, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^if  ( minimalIterationCount >= i )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^if  ( Math.abs ( olds - s )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^setResult ( i, s ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^setResult (  i ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^setResult ( s ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^if  ( Math.abs ( s - relativeAccuracy )  <= Math.abs ( olds * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = i.stage ( min, max, qtrap ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = qtrap.stage ( max, min, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = qtrap.stage (  max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = max.stage ( min, qtrap, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = qtrap.stage ( min,  i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = qtrap.stage ( i, max, min ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = qtrap.stage ( min, max ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^s =  ( 4 * oldt - t )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = min.stage ( qtrap, max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t = qtrap.stage ( min, i, max ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
