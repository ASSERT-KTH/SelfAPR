[BugLab_Variable_Misuse]^if  ( parity <= 0 || columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Argument_Swapping]^if  ( columnDimension <= 0 || rowDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Wrong_Operator]^if  ( rowDimension <= 0 && columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Wrong_Operator]^if  ( rowDimension < 0 || columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Wrong_Operator]^if  ( rowDimension <= 0 || columnDimension > 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Wrong_Literal]^if  ( rowDimension <= -1 || columnDimension <= -1 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Wrong_Literal]^if  ( rowDimension <=  || columnDimension <=  )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Variable_Misuse]^this.copyIn ( lu ) ;^107^^^^^106^109^this.copyIn ( d ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[BugLab_Variable_Misuse]^int nRows = rowDimension;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Argument_Swapping]^int nRows = v.length.length;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Argument_Swapping]^int nRows = v;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Literal]^data = new double[nRows][rowDimension];^122^^^^^120^126^data = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Variable_Misuse]^for  ( int parity = 0; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < rowDimension; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = row; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Literal]^data[row][-1] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Literal]^data[row][1] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  == m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  >= m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int parity = 0; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < rowDimension; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  >>  ( int row = 0; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = columnDimension; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowDimension; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ==  ( int col = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = rowCount; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] + m.getEntry ( rowDimension, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = row[row][col] + m.getEntry ( data, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col] + m.getEntry ( col, row ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col] + row.getEntry ( m, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = m[row][col] + data.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col] + col.getEntry ( row, m ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] + m.getEntry ( row, rowDimension ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = parity; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] + m.getEntry ( row, rowCount ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  >  ( int col = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] + m.getEntry ( rowCount, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] + m.getEntry ( row, row ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( lu ) ;^157^^^^^144^158^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  == m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  == m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < rowDimension; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int rowCount = 0; row < row; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = nRows; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] - m.getEntry ( rowDimension, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] - m.getEntry ( row, rowDimension ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col] - m.getEntry ( col, row ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = col[row][col] - m.getEntry ( row, data ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = m[row][col] - data.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^outData[row][col] = data[row][col]  !=  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col] - row.getEntry ( m, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col] - col.getEntry ( row, m ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = outData[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^outData[row][col] = data[row][col]  &&  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = row; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^outData[row][col] = data[row][col]  ||  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] - m.getEntry ( parity, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] - m.getEntry ( row, rowCount ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col] - m.getEntry ( rowCount, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^outData[row][col] = data[row][col]  &  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = rowCount; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( lu ) ;^180^^^^^167^181^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < rowDimension; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int rowCount = 0; row < row; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  &&  ( int row = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowDimension; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ==  ( int col = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = row; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = TOO_SMALLata[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = dataata[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  <  ( int col = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = col; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = outData[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = row; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = columnCount; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( lu ) ;^198^^^^^189^199^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int parity = 0; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < parity; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int rowCount = 0; row < row; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = ; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = rowCount; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowDimension; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = row; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = TOO_SMALLata[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^outData[row][col] - = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = columnDimension; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = dataata[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^outData[row][col] + = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^outData[row][col] = d[row][col] * data;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = parity; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( lu ) ;^215^^^^^206^216^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  <= m.getRowDimension (  )  )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^double sum = row;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( rowCountnt row = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( nRowsnt row = 0; row < i; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( rownt i = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  |  ( int row = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = rowCount; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = i; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < parity; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( rowCountnt col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( nColsnt col = 0; col < i; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  &  ( int col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = 1; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( parity, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( i, rowDimension ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += outData[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^sum += data[row][i] * m.getEntry ( col, i ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^sum += m[row][i] * data.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^sum + += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( row, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( i, row ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^sum += data[row][i] * col.getEntry ( i, m ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^sum += data[row][i] * i.getEntry ( m, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^outData[row][col] = d;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = columnCount; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rowDimension; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^for  ( nSumnt i = 0; i < i; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  <  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = columnDimension; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( nSum, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^sum += col[row][i] * m.getEntry ( i, data ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( i, rowCount ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^sum += i[row][i] * m.getEntry ( data, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = nSum; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = parity; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( i, parity ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < row; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( paritynt col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  &&  ( int col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = columnDimension; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( rownt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^sum / += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^sum = -1;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( rowDimension, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = nRows; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += data[row][i] * m.getEntry ( rowCount, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int i = nSum; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( lu ) ;^243^^^^^225^244^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return outData;^276^^^^^275^277^return data;^[CLASS] RealMatrixImpl  [METHOD] getDataRef [RETURN_TYPE] double[][]   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int parity = 0; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  >  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = rowCount; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  |  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = i; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^sum += Math.abs ( outData[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^maxColSum = Math.max ( d, sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^maxColSum = Math.max ( maxColSum, d ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Argument_Swapping]^maxColSum = Math.max ( sum, maxColSum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = nRows; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Operator]^for  ^  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = rowDimension; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int col = nSum; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^double sum = ;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^return sum;^292^^^^^283^293^return maxColSum;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > parity || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || row < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > row || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > row || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > subMatrixData.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( data[0].length < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > data.length || endRow > endRow || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > endRow || endRow > startColumn || data.length < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( endColumn < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > startRow || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > endRow || endRow > data[0].length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > data || endRow > endRow.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > data[0].length || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow < 0 && startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow <= 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow < endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow >= data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn <= 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn >= endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn >= data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  ( startRow < endRow || startRow > endRow || endRow > data.length || startColumn < endRow || startColumn > endColumn || endColumn > data[endRow].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  ( startRow < nSum || startRow > endRow || endRow > data.length || startColumn < nSum || startColumn > endColumn || endColumn > data[nSum].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  ( startRow < -1 || startRow > endRow || endRow > data.length || startColumn < -1 || startColumn > endColumn || endColumn > data[-1].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startRow - startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - rowDimension+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, row - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startRow - endRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, startColumn - endColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startColumn - startRow+1, endColumn - endRow+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow  <  startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow  >=  startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+2, endColumn - startColumn+2 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+startRow, endColumn - startColumn+startRow ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - rowCount+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, parity - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - row+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startColumn+1, endColumn - startRow+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow   instanceof   startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow  |  startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+rowDimension, endColumn - startColumn+rowDimension ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+parity, endColumn - startColumn+parity ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = rowCount; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rowCountnt i = startRow; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = startRow; i <= parity; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int i = endRow; i <= startRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = startRow; i == endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = row; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = startColumn; j <= startRow; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startRownt j = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( startColumnnt j = i; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int endColumn = startColumn; j <= j; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( endColumnnt j = startColumn; j <= i; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = startColumn; j < endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[rowDimension - startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - nSum][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][parity - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - nRows] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - startColumn] = outData[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i  >=  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i   instanceof   startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[row - startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - row][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - rowCount] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^subMatrixData[i - data][j - startColumn] = startRow[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i  &&  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i  ^  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = parity; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = rowDimension; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int startRow = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = startColumn; j <= rowCount; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rownt j = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[parity - startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - nRows][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][startRow - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i  <=  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][nSum - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - parity] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^subMatrixData[i - startRow][j - data] = startColumn[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i  ==  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^subMatrixData[i  >>  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( permutation.length * selectedColumns.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( selectedRows.length * permutation.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( startColumn * selectedColumns.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( selectedRows.length * rowDimension == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( selectedColumns.length * selectedRows.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( selectedRows.length * selectedColumns.length >= 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( selectedRows.length / selectedColumns.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, permutation.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( parity, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, startRow ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length.length, selectedRows ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length, selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startRownt i = 0; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < selectedColumns.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < selectedRows.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rowCountnt j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < rowDimension; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int selectedColumns = 0; j < j.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int selectedColumns.length = 0; j < j; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = rowDimension; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i][j] = outData[selectedRows[i]][selectedColumns[j]];^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = nRows; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int startRow = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startColumnnt j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < startRow; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = ; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rownt j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int j = 0; j < selectedColumns; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^subMatrixData[i][j] = subMatrixData[selectedRows[i]][selectedColumns[j]];^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = j; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  ( parity < 0 )  ||  ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  (  ( column < 0 )  ||  ( row < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row < 0 )  &&  ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row <= 0 )  ||  ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row < 0 )  ||  ( column <= 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^int nRows = subMatrixData.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^int nRows = nSum;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^int nRows = subMatrix.length.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^int nRows = subMatrix;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( r == 0 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( nRows != 0 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  ( nRows == endRow )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^int nCols = outData[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^int nCols = subMatrix[0].length[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^int nCols = subMatrix[-1].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( row == 0 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( nCols >= 0 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( subMatrixData[r].length != nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( subMatrix[r].length != parity )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( subMatrix[r].length != subMatrix[r].length )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( subMatrix[r].length <= nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int r = 1; r < parity; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int r = 1; r > nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( nCols[r].length != subMatrix )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( subMatrix[r].length == nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int r = 2; r < nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( subMatrixData == null )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( data != null )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  ( row > 0 ) || ( parity > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  (  ( column > 0 ) || ( row > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row > 0 ) && ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row >= 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row > 0 ) || ( column >= 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  ( row > -1 ) || ( column > -1 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  ( row > startColumn ) || ( column > startColumn )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix, 0, subMatrixData, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix, 0, data, 0, nRows ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix.length, 0, data, 0, subMatrix ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, subMatrix, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix, endColumn, data, endColumn, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix, -1, data, -1, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  ( parity > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  ( row > 0 ) || ( column == 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  ( row > 1 ) || ( column > 1 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix, 0, subMatrix.length, 0, data ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix, columnDimension, data, columnDimension, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  (  ( startRow + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  (  ( nRows + parity )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( parity + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + row > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  (  (  ( row + nRows )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  (  (  ( nRows + nCols )  > this.getRowDimension (  )  )  || ( row + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( column + nCols > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  && ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  < this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  (  ( nRows  ^  row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column >= this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols  >>  column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = parity; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + parity], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, subMatrixData[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( column[i], 0, data[row + i], subMatrix, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix[i], 0, data[row + column], i, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( data[i], 0, subMatrix[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix[i], nCols, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + rowCount], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[parity + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + i], r, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, startRow ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix[i], 0, column[row + i], data, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix[i], 0, nCols[row + i], column, data ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix[i], j, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  startColumn, 0 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  row, endColumn )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  parity, 0 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  row, parity )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( data[row], 0, subMatrixData[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( data[row], 0, out[0], 0, parity ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( data[row], 0, ncols[0], 0, out ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^System.arraycopy ( out[row], 0, data[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], row, out[row], row, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], j, out[j], j, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], , out[], , ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( subMatrix ) ;^439^^^^^432^440^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  0, nSum )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  i, column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  0, r )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  endColumn, column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^double[][] out = new double[nRows][columnCount];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int parity = 0; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^out[row][0] = subMatrixData[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^out[row][1] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = r; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( outData ) ;^459^^^^^450^460^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  nRows, 0  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  row,   )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  row, parity  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( data[row], 0, out, 0, nSum ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], , out, , ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], 1, out, 1, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate ( 0, nSum )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; row < nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^out[row] = subMatrixData[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^out[row] = subMatrix[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = columnDimension; row < nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( ncols,column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( nSum,column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( row,r )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return subMatrix[row][column];^524^^^^^519^525^return data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl out = new RealMatrixImpl ( ncols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl out = new RealMatrixImpl ( nCols, row ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^RealMatrixImpl out = new RealMatrixImpl ( nRows, nCols ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl out = new RealMatrixImpl ( nSum, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < ncols; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = parity; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < r; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = r; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^outData[col][row] = subMatrix[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = parity; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int parity = 0; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < startColumn; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^outData[col][row] = subMatrixData[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = i; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( nSumsSingular (  )  )  {^564^^^^^560^573^if  ( isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^det *= outData[i][i];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^det *= subMatrixData[i][i];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^double det = startRow;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = nCols; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startRownt i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return maxColSum;^571^^^^^560^573^return det;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^double det = row;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = r; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^return  ( this.getColumnDimension (  )  != this.getRowDimension (  )  ) ;^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( subMatrix == null )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( lu != null )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^return true;^594^^^^^585^596^return false;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^return true;^589^^^^^585^596^return false;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^return false;^591^^^^^585^596^return true;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return nSum;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return subMatrixData.length;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^return data;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^return data.length.length;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^return data[0].length[0].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^return data[-1].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^double trace = subMatrixData[0][0];^620^^^^^616^625^double trace = data[0][0];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^double trace = data[-1][-1];^620^^^^^616^625^double trace = data[0][0];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 1; i == this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ==  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = col; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^trace += subMatrix[i][i];^622^^^^^616^625^trace += data[i][i];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^trace += outData[i][i];^622^^^^^616^625^trace += data[i][i];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = 2; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( out.length != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( parity != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( v.length.length != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( v != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( v.length <= this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < startRow; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startColumnnt row = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  !=  ( int row = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = rowDimension; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = ncols; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nColsnt i = 0; i < i; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = r; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += data[row][i] * out[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += subMatrixData[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^sum - += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^sum + += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < r; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ==  ( int i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^sum += v[row][i] * data[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += outData[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^out[row] = trace;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^double sum = ;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = ; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return v;^646^^^^^632^647^return out;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( out.length != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( v.length != ncols )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( rowCount != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( v.length.length != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( nRows != v.length )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( v != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( v.length == nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rnt col = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nColsnt col = 0; col < i; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  &  ( int col = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = r; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = nCols; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rnt i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < r; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nRowsnt i = 0; i < i; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = i; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += data[i][col] * out[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += subMatrixData[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^sum + += data[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^sum += v[i][col] * data[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^sum - += data[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^out[col] = trace;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^double sum = ncols;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += outData[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^sum += subMatrix[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = ncols; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^double sum = startRow;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return v;^668^^^^^654^669^return out;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( b.length != ncols )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( b.length.length != nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( nRows.length != b )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^if  ( nRows != b.length )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( b.length == nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrix outMatrix = new RealMatrixImpl ( b ) ;^687^^^^^682^694^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = ; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^out[row] = subMatrixData[row][0];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^out[row] = solution[row][-1];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^return b;^693^^^^^682^694^return out;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^if  ( b.getRowDimension (  )  == this.getRowDimension (  )  )  {^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nRowB = 0; row < nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < parity; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < ncols; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; col < col; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], rowCount ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( selectedRows[row], col ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^bp[row][col] = permutation.getEntry ( b[row], col ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], nRows ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^bp[row][col] = col.getEntry ( permutation[row], b ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^bp[row][col] = b.getEntry ( col[row], permutation ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = parity; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < nSum; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = r; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], parity ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], rowDimension ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowCount; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nSumnt col = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nCol = 0; col < col; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nColnt col = 0; col < i; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  >=  ( int col = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = col; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = r + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nRowsnt i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = col + 1; i < nSum; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( colnt i = i + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  &&  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = col + 1; i <= nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = col ; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < r; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; j < j; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = rowCount; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= subMatrixData[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * subMatrixData[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^bp[i][j] -= lu[col][j] * bp[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] / -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] = bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= outData[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] + -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = rowDimension; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < nSum; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nSumnt j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * solution[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] += bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * subMatrix[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] - -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = ncols + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ||  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = col + nSum; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = nCol; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nColnt i = col + 1; i < i; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int i = nCol + 1; i < col; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  >=  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = col + 1; i > nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < parity; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rnt j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= subMatrix[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * outData[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = nRows; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int r = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < ncols; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( paritynt j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nColBnt j = 0; j < i; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = nRowB; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = 1; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = parity + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  |  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = col + j; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int col = r - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int parity = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startRownt col = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( colnt i = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = nCol  ||  1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = nCol - 1; col > 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = nCol  <  1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = nCol ; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = nCol - 1; col >= 1; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = nCol - 1; col >= row; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int col = nCol - 1; col >= columnDimension; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < ncols; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; j < j; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[col][j] /= subMatrixData[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int i = nSum; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < ncols; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( startRownt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = ; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= solution[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * subMatrixData[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^bp[i][j] -= lu[col][j] * bp[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] / -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] = bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= subMatrixData[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * solution[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] - -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = nColB; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < rowCount; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( ncolsnt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; j < j; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] + -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^bp[i][j] += bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < nSum; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = columnCount; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[col][j] /= solution[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; i < i; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( int row = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( nSumnt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Argument_Swapping]^for  ( nColBnt j = 0; j < i; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Literal]^for  ( int j = ncols; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^for  ( rownt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= bp[col][j] * outData[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^bp[i][j] -= subMatrix[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Wrong_Operator]^for  ( int col = nCol  &  1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl outMat = new RealMatrixImpl ( solution ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^RealMatrixImpl outMat = new RealMatrixImpl ( outData ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[BugLab_Variable_Misuse]^if  ( nSum != nCols )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( nRows != row )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( nCols != nRows )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( nRows == nCols )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nRowB; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[row] = nRowB;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[row] = nRows;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^parity = startRow;^787^^^^^772^802^parity = 1;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( trace )  > largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( sum )  > sum )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( Math.abs ( largest )  > sum )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( Math.abs ( sum )  >= largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^largest = Math.abs ( trace ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^max = ncols;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^largest = Math.abs ( maxColSum ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( solution[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( lu[max][col] )  < trace )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( Math.abs ( lu[max][col] )  <= TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( nRows != col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( max != nRows )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( max == col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nRowsnt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[max][i] = subMatrixData[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[col][i] = maxColSum;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^tmp = solution[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[max][i] = outData[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[col][i] = trace;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[max] = selectedRows[col];^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[col] = nSum;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^double tmp = nCol;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^int temp = selectedRows[max];^834^^^^^819^849^int temp = permutation[max];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int parity = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < nSum; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( rownt col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( nColsnt col = 0; col < i; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  &&  ( int col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = 1; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = row; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = nSum; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( sum )  > tmp )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( Math.abs ( sum )  == largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( outData[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( startRow != col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( max != r )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( col != max )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < startColumn; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^tmp = outData[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[max][i] = subMatrix[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[col] = nRows;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^nRows = -parity;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^double tmp = 1;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < ncols; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( startColumnnt row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int col = 0; row < row; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( colnt row = 0; row < i; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( rownt i = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = endRow; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nSum; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( rownt i = 0; i < i; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum -= subMatrixData[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum + -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum += lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = subMatrixData[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum -= outData[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum / -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] = trace;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nRowsnt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nRows; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum - -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum = lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = nSum; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nSum = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = col; row < ncols; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( rowCountnt row = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( rownt i = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int nRows = col; row < row; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( nRowsnt row = col; row < i; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = col; row <= nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nRowsnt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nSum; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; i < i; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = startColumn; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum -= solution[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum - -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum += lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = outData[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum -= subMatrixData[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum + -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] = trace;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^max = nSum;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = r; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^largest = Math.abs ( tmp ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum -= outData[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nSum; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( nColsnt i = 0; i < i; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = columnCount; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = ncols + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nSum = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = col + 1; row < parity; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int row = nRows + 1; row < col; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int nRows = col + 1; row < row; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ==  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = col + 1; row <= nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = col + ; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] /= outData[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = solution[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] = maxColSum;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum -= subMatrix[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^sum = lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] = tmp;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^max = rowDimension;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^tmp = subMatrixData[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[col] = rowCount;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = startColumn; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^int max = nSum;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = ncols; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = nColB; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = r + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  |  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = col ; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( subMatrix[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nRowsnt row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( rownt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rowCount; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = temp; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = outData[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = col; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nRows = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nRowsnt row = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int col = row; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int row = nRows; row < col; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = col; row > nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( tmp )  > largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^max = temp;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = solution[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^max = r;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = max; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = startRow; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = startColumn + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int parity = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int col = row + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  <=  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = col + column; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] /= subMatrixData[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = subMatrix[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[row][col] = tmp;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^sum = subMatrixData[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^lu[max][i] = solution[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^permutation[col] = rowDimension;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^nRowB = -parity;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^double sum = nSum;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = rowDimension; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = rowCount; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = nRows; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^double tmp = endColumn;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = nSum + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  &  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( maxColSum )  > largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Math.abs ( subMatrixData[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( subMatrix != null )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( data == null )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( row > 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( res > 0 ) i.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( i >= 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( i > -1 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( ncols > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( res > 0 ) j.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( j >= 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( j > j ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nSum; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < subMatrixData.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( data.lengthnt i = 0; i < i; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( nRows > 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( i == 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( row > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( j > 1 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( startColumnnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < outData[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int data = 0; j < j[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( data[0].lengthnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = temp; j < data[temp].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < data[-1].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( nRows > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( j >  ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^res.append ( subMatrix[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^res.append ( outData[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int parity = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( nSumnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < subMatrixData[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int data[0].length = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( datant j = 0; j < i[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int j = 0; j < data[0].length[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = i; j < data[i].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( nSum > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = startRow; j < data[startRow].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^res.append ( subMatrixData[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( rowCount > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( j > nCols ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < row; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < outData.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = parity; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = nCols; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( nSum > 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( j > -1 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( ncolsnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < data[1].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = col; j < data[col].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < subMatrix[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int j = ; j < data[].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( parity > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( object != this  )  {^881^^^^^880^902^if  ( object == this  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return false;^882^^^^^880^902^return true;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( object instanceof RealMatrixImpl != false )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( object  &  RealMatrixImpl == false )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^if  ( object instanceof RealMatrixImpl == true )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return true;^885^^^^^880^902^return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( m.getColumnDimension (  )  != nSum || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != row )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( nCols.getColumnDimension (  )  != m || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( m.getColumnDimension (  )  != nRows || m.getRowDimension (  )  != nCols )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( m.getColumnDimension (  )  != nCols && m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( m.getColumnDimension (  )  > nCols || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  >= nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return true;^891^^^^^880^902^return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( ncols, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, temp )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( solution[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( col, row )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( col.getEntry ( row, m )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( Double.doubleToLongBits ( row[row][col] )  != Double.doubleToLongBits ( m.getEntry ( data, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( Double.doubleToLongBits ( data[row][col] )  <= Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return true;^897^^^^^880^902^return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = row; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = columnCount; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, r )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( subMatrixData[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( Double.doubleToLongBits ( m[row][col] )  != Double.doubleToLongBits ( data.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( Double.doubleToLongBits ( data[row][col] )  >= Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( temp, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, nSum )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( Double.doubleToLongBits ( data[row][col] )  == Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^if  ( Double.doubleToLongBits ( col[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, data )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( nRowB, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( row, ncols )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^Double.doubleToLongBits ( row.getEntry ( m, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^Double.doubleToLongBits ( m.getEntry ( col, row )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( nSum, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( row, nRows )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = nCols; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, nRows )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( outData[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( nRows, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^Double.doubleToLongBits ( col.getEntry ( row, m )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < ncols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( nSum, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, ncols )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = nRowB; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( Double.doubleToLongBits ( subMatrix[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( row, parity )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^Double.doubleToLongBits ( m.getEntry ( row, nSum )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return false;^901^^^^^880^902^return true;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^int ret = 6;^910^^^^^909^922^int ret = 7;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = nRowB * 31 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 + rowCount;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = nRows * 31 + ret;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret - 31 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 30 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = nRows * 31 + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 + nRows;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = nCols * 31 + ret;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret / 31 + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * r + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nRowB = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for   instanceof   ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  >>  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ==  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  !=  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < parity; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ^  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ||  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  &&  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  <<  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = nRows * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( rowDimension+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( nRows+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( solution[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = row * 31 +  ( 11 *  ( ret+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = ret * 31 +  ( 11 *  ( col+1 )  + 17 *  ( row+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( data+1 )  )  * MathUtils.hash ( col[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = ret * 31 +  ( 11 *  ( data+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( row[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  >>  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret - 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret / = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  ^  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  >  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret + = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  <=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 30 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( nSum *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  7 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + rowCount *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^MathUtils.hash ( solution[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = nRowB * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( parity+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( subMatrix[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = col * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ret+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^ret = data * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( ret[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  ||  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret - = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  !=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  >=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 32 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )   *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = nRowB; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int ret = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < nSum; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  >  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ==  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  <=  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  <  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = columnDimension; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( nSum+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( nSum+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  |  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret / 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  ==  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * ncols +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 3nSum +  ( nSumnSum *  ( row+nSum )  + nSum7 *  ( col+nSum )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + ncols *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 3i +  ( ii *  ( row+i )  + i7 *  ( col+i )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^MathUtils.hash ( subMatrixData[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( nRows+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( startRow+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^ret = ret * 31 +  <  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( i *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + endRow *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^ret = ret * 3ncols +  ( ncolsncols *  ( row+ncols )  + ncols7 *  ( col+ncols )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int row = startRow; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int col = ; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^MathUtils.hash ( outData[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return MatrixUtils.createRealIdentityMatrix ( nSum ) ;^935^^^^^934^936^return MatrixUtils.createRealIdentityMatrix ( dimension ) ;^[CLASS] RealMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^if  ( solution == null )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^if  ( lu != null )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( solution ) ;^969^^^^^965^970^return new RealMatrixImpl ( lu ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return new RealMatrixImpl ( subMatrixData ) ;^969^^^^^965^970^return new RealMatrixImpl ( lu ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^System.arraycopy ( permutation, 0, selectedRows, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^System.arraycopy ( selectedRows, 0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^System.arraycopy ( permutation, 0, out, 0, nRowB ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^System.arraycopy ( permutation, 0, permutation.length, 0, out ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^System.arraycopy ( out, 0, permutation, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^System.arraycopy ( permutation, nCol, out, nCol, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return selectedRows;^987^^^^^984^988^return out;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^for  ( nRowsnt i = 0; i < i; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = i; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^for  ( int i = ; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^System.arraycopy ( data[i], 0, solution[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^System.arraycopy ( out[i], 0, data[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^System.arraycopy ( data[i], col, out[i], col, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^System.arraycopy ( data[i], , out[i], , data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return outData;^1004^^^^^997^1005^return out;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^setSubMatrix ( subMatrixData,0,0 ) ;^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^setSubMatrix ( in,dimension,dimension ) ;^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^setSubMatrix ( in,nRowB,nRowB ) ;^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return ! ( parity < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return ! ( row < 0 || row > startColumn - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return ! ( row < 0 || row > nRows - 1 || nSum < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Variable_Misuse]^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nSum -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^return ! ( col < 0 || row > nRows - 1 || row < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^return ! ( row < 0 || row > col - 1 || nRows < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Argument_Swapping]^return ! ( nCols < 0 || row > nRows - 1 || col < 0 || col > row -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row < 0 && row > nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row == 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row == nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row > nRows   instanceof   1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row > nRows - 1 || col == 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row >= nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row > nRows  <=  1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return ! ( row < 0 || row > nRows  || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[BugLab_Wrong_Literal]^return ! ( row < i || row > nRows - 1 || col < i || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
