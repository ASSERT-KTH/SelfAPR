[buglab_swap_variables]^if  ( columnDimension <= 0 || rowDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[buglab_swap_variables]^int nRows = v.length.length;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[buglab_swap_variables]^int nRows = v;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[buglab_swap_variables]^for  ( int rowCount = 0; row < row; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] + m.getEntry ( col, row ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] + m.getEntry (  col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] + m.getEntry ( row ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] + col.getEntry ( row, m ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] + row.getEntry ( m, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = row[row][col] + m.getEntry ( data, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = m[row][col] + data.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( int rowCount = 0; row < row; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = row[row][col] - m.getEntry ( data, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] - m.getEntry (  col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] - m.getEntry ( col, row ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] - m.getEntry ( row ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = m[row][col] - data.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] - row.getEntry ( m, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = data[row][col] - col.getEntry ( row, m ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = col[row][col] - m.getEntry ( row, data ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = dataata[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = dataata[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^outData[row][col] = d[row][col] * data;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( rownt i = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( nRowsnt row = 0; row < i; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( colnt i = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( nColsnt col = 0; col < i; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += data[row][i] * m.getEntry (  col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += data[row][i] * col.getEntry ( i, m ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += data[row][i] * m.getEntry ( col, i ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += data[row][i] * m.getEntry ( i ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += m[row][i] * data.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += data[row][i] * i.getEntry ( m, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^for  ( nSumnt i = 0; i < i; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += col[row][i] * m.getEntry ( i, data ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^sum += i[row][i] * m.getEntry ( data, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^maxColSum = Math.max ( sum, maxColSum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^maxColSum = Math.max (  sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^maxColSum = Math.max ( maxColSum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[buglab_swap_variables]^if  ( data.length < 0 || startRow > endRow || endRow > startRow || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > data.length || endRow > endRow || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > startColumn || endRow > data.length || endRow < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( endColumn < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > startRow || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( data < 0 || startRow > endRow || endRow > startRow.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || data[0].length < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endColumn - startRow+1, endRow - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startRow - endRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - endColumn+1, startRow - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1 - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, startColumn - endColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startColumn - startRow+1, endColumn - endRow+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( endRownt i = startRow; i <= i; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int j = endColumn; j <= startColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int startColumn = j; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( endColumnnt j = startColumn; j <= i; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^subMatrixData[i - startRow][j - data] = startColumn[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( startColumnnt j = i; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( jnt i = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^subMatrixData[i - startColumn][j - startRow] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( selectedColumns.length * selectedRows.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( selectedColumns.length.length * selectedRows == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length.length, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length, selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns, selectedRows.length.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl (  selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length.length, selectedRows ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int selectedColumns.length = 0; j < j; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( jnt i = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( selectedColumns.lengthnt j = 0; j < i; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( selectedRows.lengthnt i = 0; i < i; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  (  ( column < 0 )  ||  ( row < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^int nRows = subMatrix.length.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^int nRows = subMatrix;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^int nCols = subMatrix[0].length[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( subMatrix[r].length[r].length != nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( nCols[r].length != subMatrix )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  (  ( column > 0 ) || ( row > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data, 0, subMatrix, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy (  0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix, 0,  0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix, 0, subMatrix.length, 0, data ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix, 0, data, 0 ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix.length, 0, data, 0, subMatrix ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  (  (  ( row + nRows )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  (  (  ( nRows + nCols )  > this.getRowDimension (  )  )  || ( row + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( column + nCols > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( i[i], 0, data[row + subMatrix], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + nCols], column, i ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + i],  nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + i], nCols, column ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + i], column ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[i], 0, subMatrix[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( column[i], 0, data[row + i], subMatrix, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, column[row + i], data, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, ncols[0], 0, out ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[row], 0[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, out[0], 0 ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( out[row], 0, data[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, ncols, 0, out ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[row], 0,  0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, out, 0 ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^System.arraycopy ( out[row], 0, data, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( !isValidCoordinate ( column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl out = new RealMatrixImpl ( nRows, nCols ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl out = new RealMatrixImpl (  nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^RealMatrixImpl out = new RealMatrixImpl ( nCols ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^return data;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^return data.length.length;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^return data[0].length[0].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( v.length.length != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( v != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nRowsnt row = 0; row < i; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nColsnt i = 0; i < i; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^sum += v[row][i] * data[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( v.length.length != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( nRows != v.length )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nColsnt col = 0; col < i; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^sum += v[i][col] * data[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( b.length.length != nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( nRows != b.length )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nRowB = 0; row < row; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nColB = 0; col < col; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^bp[row][col] = b.getEntry ( permutation[row] ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^bp[row][col] = col.getEntry ( permutation[row], b ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^bp[row][col] = permutation.getEntry ( b[row], col ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^bp[row][col] = b.getEntry ( col[row], permutation ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nCol = 0; col < col; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( colnt i = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int i = nCol + 1; i < col; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( jnt i = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^bp[i][j] -= lu[col][j] * bp[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nColBnt j = 0; j < i; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nColB = 0; j < j; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nCol = col - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( colnt i = 0; i < i; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^bp[i][j] -= lu[col][j] * bp[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( nColBnt j = 0; j < i; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( jnt i = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^for  ( int nColB = 0; j < j; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[buglab_swap_variables]^if  ( nCols != nRows )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Math.abs ( largest )  > sum )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Math.abs ( TOO_SMALL[max][col] )  < lu )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( col != max )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( nColsnt i = 0; i < i; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( colnt i = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( nColsnt col = 0; col < i; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int col = 0; row < row; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int row = nRows; row < col; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( rownt i = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( colnt i = 0; i < i; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int col = row + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( rownt i = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( colnt row = 0; row < i; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( rownt i = 0; i < i; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( colnt row = i; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int col = row; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int nRows = col + 1; row < row; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( res > 0 ) i.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( res > 0 ) j.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( jnt i = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( data[0].lengthnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int j = 0; j < data[0].length[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int data[0].length = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( datant j = 0; j < i[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( nRows.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != m )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( m.getColumnDimension (  )  != nRows || m.getRowDimension (  )  != nCols )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( col, row )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry (  col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( col[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, data )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( m[row][col] )  != Double.doubleToLongBits ( data.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( row.getEntry ( m, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( row[row][col] )  != Double.doubleToLongBits ( m.getEntry ( data, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^Double.doubleToLongBits ( col.getEntry ( row, m )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^Double.doubleToLongBits ( m.getEntry ( col, row )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^Double.doubleToLongBits ( m.getEntry (  col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^Double.doubleToLongBits ( m.getEntry ( row )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^Double.doubleToLongBits ( row.getEntry ( m, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( col.getEntry ( row, m )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = nRows * 31 + ret;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = nCols * 31 + ret;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = col * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ret+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = ret * 31 +  ( 11 *  ( col+1 )  + 17 *  ( row+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = ret * 31 +  ( 11 *  ( data+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( row[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = row * 31 +  ( 11 *  ( ret+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( data+1 )  )  * MathUtils.hash ( col[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^ret = data * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( ret[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( out, 0, permutation, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( permutation, 0,  0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( permutation.length, 0, out, 0, permutation ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy (  0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( permutation, 0, out, 0 ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( out[i], 0, data[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( data[i], 0[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^System.arraycopy ( data[i], 0, out[i], 0[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^return ! ( nCols < 0 || row > nRows - 1 || col < 0 || col > row -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^return ! ( row < 0 || row > nCols - 1 || col < 0 || col > nRows -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[buglab_swap_variables]^return ! ( row < 0 || row > nRows - 1 || nCols < 0 || col > col -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
