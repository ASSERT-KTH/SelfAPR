[BugLab_Wrong_Operator]^if  ( sumOfLogs.getN (  )  >= 0 )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^if  ( sumOfLogs.getN (  )  > -1 )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return Math.exp ( sumOfLogs.getResult (  )  +  ( double )  sumOfLogs.getN (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.exp ( sumOfLogs.evaluate ( values, length, length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Variable_Misuse]^return Math.exp ( sumOfLogs.evaluate ( values, begin, begin )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Argument_Swapping]^return Math.exp ( sumOfLogs.evaluate ( values, length, begin )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Argument_Swapping]^return Math.exp ( length.evaluate ( values, begin, sumOfLogs )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Wrong_Operator]^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  *  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Argument_Swapping]^return Math.exp ( sumOfLogs.evaluate ( length, begin, values )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Argument_Swapping]^return Math.exp ( values.evaluate ( sumOfLogs, begin, length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Wrong_Operator]^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  -  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Argument_Swapping]^sumOfLogs.evaluate ( begin, values, length )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[BugLab_Argument_Swapping]^sumOfLogs.evaluate ( values, length, begin )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
