[BugLab_Argument_Swapping]^return solve ( max, min, UnivariateRealSolverUtils.midpoint ( min, max )  ) ;^61^^^^^59^62^return solve ( min, max, UnivariateRealSolverUtils.midpoint ( min, max )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  
[BugLab_Variable_Misuse]^verifySequence ( x1, startValue, max ) ;^80^^^^^76^100^verifySequence ( min, startValue, max ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^verifySequence ( min, x1, max ) ;^80^^^^^76^100^verifySequence ( min, startValue, max ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^verifySequence ( min, startValue, x1 ) ;^80^^^^^76^100^verifySequence ( min, startValue, max ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^verifySequence ( startValue, min, max ) ;^80^^^^^76^100^verifySequence ( min, startValue, max ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^verifySequence ( min, max, startValue ) ;^80^^^^^76^100^verifySequence ( min, startValue, max ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Literal]^int i = i;^85^^^^^76^100^int i = 0;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^while  ( i <= maximalIterationCount )  {^86^^^^^76^100^while  ( i < maximalIterationCount )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( startValue - x0 )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x1 - startValue )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( x0 - x1 )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( x1 - absoluteAccuracy )  <= x0 )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x1 - x0 )  < absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x1  <<  x0 )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^return startValue;^91^^^^^76^100^return x1;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x1 ) ;^90^^^^^76^100^setResult ( x1, i ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^x1 = startValue -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^x1 = f -  ( x0.value ( x0 )  / derivative.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^x1 = derivative -  ( f.value ( x0 )  / x0.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^x1 = x0  >=   ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^x1 = x0 -  ( f.value ( x0 )  + derivative.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^x0 = startValue;^94^^^^^76^100^x0 = x1;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^x1 = x1 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x1  <  x0 )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^setResult ( x0, i ) ;^90^^^^^76^100^setResult ( x1, i ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( absoluteAccuracy - x0 )  <= x1 )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x1  !=  x0 )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^return x0;^91^^^^^76^100^return x1;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Argument_Swapping]^x1 = x0 -  ( derivative.value ( x0 )  / f.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^x1 = x0  ==   ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^87^^^^^76^100^x1 = x0 -  ( f.value ( x0 )  / derivative.value ( x0 )  ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^x0 = x0;^94^^^^^76^100^x0 = x1;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x1  >>  x0 )  <= absoluteAccuracy )  {^88^^^^^76^100^if  ( Math.abs ( x1 - x0 )  <= absoluteAccuracy )  {^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Variable_Misuse]^setResult ( startValue, i ) ;^90^^^^^76^100^setResult ( x1, i ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^throw new ConvergenceException ( "Maximum number of iterations exceeded "  <<  i ) ;^98^99^^^^76^100^throw new ConvergenceException ( "Maximum number of iterations exceeded " + i ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
[BugLab_Wrong_Operator]^throw new ConvergenceException ( "Maximum number of iterations exceeded "  ==  i ) ;^98^99^^^^76^100^throw new ConvergenceException ( "Maximum number of iterations exceeded " + i ) ;^[CLASS] NewtonSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double startValue [VARIABLES] UnivariateRealFunction  derivative  boolean  long  serialVersionUID  double  max  min  startValue  x0  x1  int  i  
