[buglab_swap_variables]^for  ( int dimension = 0; row < row; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[buglab_swap_variables]^for  ( int d = 0; row < rowimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[buglab_swap_variables]^d[row][col] = col == row ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[buglab_swap_variables]^for  ( int d = 0; col < colimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[buglab_swap_variables]^int nCols = rowData.length.length;^120^^^^^119^124^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^int nCols = rowData;^120^^^^^119^124^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( data, 0, rowData[0], 0, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy (  0, data[0], 0, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^int nCols = rowData.length.length;^136^^^^^135^140^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^int nCols = rowData;^136^^^^^135^140^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( nCols, 0, data[0], 0, rowData ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy (  0, data[0], 0, nCols ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[buglab_swap_variables]^int nCols = rowData.length.length;^152^^^^^151^156^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^int nCols = rowData;^152^^^^^151^156^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^System.arraycopy ( data, 0, rowData[0], 0, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^System.arraycopy (  0, data[0], 0, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^System.arraycopy ( nCols, 0, data[0], 0, rowData ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[buglab_swap_variables]^int nCols = rowData.length.length;^168^^^^^167^172^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^int nCols = rowData;^168^^^^^167^172^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^System.arraycopy ( data, 0, rowData[0], 0, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^System.arraycopy (  0, data[0], 0, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[buglab_swap_variables]^int nRows = columnData.length.length;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[buglab_swap_variables]^int nRows = columnData;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[buglab_swap_variables]^int nRows = columnData.length.length;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[buglab_swap_variables]^int nRows = columnData;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[buglab_swap_variables]^int nRows = columnData.length.length;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[buglab_swap_variables]^int nRows = columnData;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[buglab_swap_variables]^int nRows = columnData.length.length;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[buglab_swap_variables]^int nRows = columnData;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[buglab_swap_variables]^for  ( int dimension = 0; row < row; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^for  ( int col = 0; col < dimensionimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^d[row][col] = col == row ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^d[row][col] = row == BigMatrixImpl.ZERO ? BigMatrixImpl.ONE : col;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^d[row][col] = row == col ? BigMatrixImpl.ZERO : BigMatrixImpl.ONE;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^for  ( int d = 0; col < colimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^d[row][col] = BigMatrixImpl.ZERO == col ? BigMatrixImpl.ONE : row;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[buglab_swap_variables]^d[row][col] = row == BigMatrixImpl.ONE ? col : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
