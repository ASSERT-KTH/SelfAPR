[BugLab_Variable_Misuse]^setNumberOfTrials ( numberOfTrials ) ;^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^setProbabilityOfSuccess ( probabilityOfSuccess ) ;^51^^^^^48^52^setProbabilityOfSuccess ( p ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^return trials;^59^^^^^58^60^return numberOfTrials;^[CLASS] BinomialDistributionImpl  [METHOD] getNumberOfTrials [RETURN_TYPE] int   [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^return p;^67^^^^^66^68^return probabilityOfSuccess;^[CLASS] BinomialDistributionImpl  [METHOD] getProbabilityOfSuccess [RETURN_TYPE] double   [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^if  ( numberOfTrials < 0 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Wrong_Operator]^if  ( trials > 0 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Wrong_Literal]^if  ( trials < -1 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^numberOfTrials = numberOfTrials;^80^^^^^76^81^numberOfTrials = trials;^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^if  ( probabilityOfSuccess < 0.0 || p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Wrong_Operator]^if  ( p < 0.0 && p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Wrong_Operator]^if  ( p <= 0.0 || p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Wrong_Operator]^if  ( p < 0.0 || p == 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Wrong_Literal]^return -trials;^105^^^^^104^106^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] int   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[BugLab_Variable_Misuse]^if  ( trials < 0 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^if  ( x <= 0 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Literal]^if  ( x < 1 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^} else if  ( trials >= getNumberOfTrials (  )  )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^} else if  ( x > getNumberOfTrials (  )  )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , trials + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0  !=  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  >>  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (   instanceof   ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   >=  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0  <<  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  &  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0  >>  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , trials + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  <=  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   &  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0  ^  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  >=  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ^  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   ||  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0  >  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  <  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = 1.0  &&  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  |  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   >  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^return probabilityOfSuccess;^140^^^^^127^141^return ret;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^if  ( trials < 0 || x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^if  ( x < 0 && x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^if  ( x <= 0 || x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^if  ( x < 0 || x == getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Literal]^if  ( x < x || x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , trials )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret + = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0  >=  getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0  <<  getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - trials ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^Math.pow ( 1.0  <  getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )   &  x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret / = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret - = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0  >>  getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^Math.pow ( 1.0  <<  getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )   <=  x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^return probabilityOfSuccess;^160^^^^^149^161^return ret;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^if  ( ret == 0 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^if  ( p != 0 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Literal]^if  ( p == -1 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Literal]^return -0;^179^^^^^176^187^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Literal]^return -trials;^179^^^^^176^187^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Variable_Misuse]^if  ( ret == 1 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Operator]^if  ( p < 1 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[BugLab_Wrong_Literal]^if  ( p == trials )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
