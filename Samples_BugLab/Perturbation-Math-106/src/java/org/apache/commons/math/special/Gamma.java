[buglab_swap_variables]^sum = i +  ( lanczos[i] /  ( x + sum )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^sum = sum +  ( i[i] /  ( x + lanczos )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^sum = x +  ( lanczos[i] /  ( sum + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^sum = lanczos +  ( sum[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^sum = lanczos + sum[0];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^ret =  (  ( tmp + .5 )  * Math.log ( x )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^ret =  (  ( x + .5 )  * Math.log ( sum )  )  - tmp + HALF_LOG_2_PI + Math.log ( tmp / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + sum + Math.log ( HALF_LOG_2_PI / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^double tmp = g + x + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^HALF_LOG_2_PI + Math.log ( x / sum ) ;^99^^^^^83^103^HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^ret =  (  ( HALF_LOG_2_PI + .5 )  * Math.log ( tmp )  )  - tmp + x + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^ret =  (  ( x + .5 )  * Math.log ( HALF_LOG_2_PI )  )  - tmp + tmp + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[buglab_swap_variables]^return regularizedGammaP ( DEFAULT_EPSILON, x, a, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaP (  x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaP ( a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaP ( a, x,  Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaP ( x, a, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^while  ( Math.abs ( epsilon )  > an && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( epsilonn )  > a && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( nn )  > epsilon && a < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( an )  > epsilon && maxIterations < n )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = n *  ( x /  ( a + an )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = an *  ( n /  ( a + x )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = ann *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = nn *  ( x /  ( a + a )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^sum = an + sum;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( an )  > n && epsilon < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( maxIterations )  > epsilon && n < an )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = xn *  ( a /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( n )  > epsilon && an < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( nn )  > epsilon && a < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( maxIterationsn )  > epsilon && n < a )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = a *  ( x /  ( an + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = xn *  ( a /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = ann *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = nn *  ( x /  ( a + a )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^sum = an + sum;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * x;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = x *  ( an /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = an *  ( n /  ( a + x )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * a;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( epsilon, x, a, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ (  x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( a, epsilon, x, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( a,  epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( a, x,  maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( a, x, maxIterations, epsilon ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( a, x, epsilon ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( x, a, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( a, maxIterations, epsilon, x ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * x;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * a;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * x;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^} else if  ( x >= 1.0 && a > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( a )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( epsilonn )  > a && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaQ ( maxIterations, x, epsilon, a ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^if  ( maxIterations >= n )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = a *  ( x /  ( an + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( n )  > epsilon && an < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( an )  > maxIterations && n < epsilon )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( ann )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = x *  ( an /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( ann )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^an = n *  ( x /  ( a + an )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * a;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^while  ( Math.abs ( an )  > n && epsilon < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^if  ( maxIterations >= n )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[buglab_swap_variables]^return regularizedGammaQ ( x, a, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaQ (  x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaQ ( a, DEFAULT_EPSILON, x, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaQ ( a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaQ ( a, x,  Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^return regularizedGammaQ ( DEFAULT_EPSILON, x, a, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[buglab_swap_variables]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^} else if  ( a < x || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / epsilon.evaluate ( x, cf, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( epsilon, x, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate (  epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( x,  maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( x, maxIterations, epsilon ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( x, epsilon ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * x;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return a *  ( n - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / maxIterations.evaluate ( x, epsilon, cf ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( epsilon, x, a, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP (  x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( x, a, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( a,  epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( a, x,  maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( maxIterations, x, epsilon, a ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( a, x, epsilon ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( a, epsilon, x, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( a, maxIterations, epsilon, x ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / epsilon.evaluate ( x, cf, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( epsilon, x, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate (  epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( x,  maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( maxIterations, epsilon, x ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( x, epsilon ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * x;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * a;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return a *  ( n - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 - regularizedGammaP ( a, x, maxIterations, epsilon ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / maxIterations.evaluate ( x, epsilon, cf ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( maxIterations, epsilon, x ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * a;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * x )  + 1.0 )  - a + n;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / x.evaluate ( cf, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / x.evaluate ( cf, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * x )  + 1.0 )  - a + n;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^ret = 1.0 / cf.evaluate ( x, maxIterations, epsilon ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[buglab_swap_variables]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[buglab_swap_variables]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[buglab_swap_variables]^return a *  ( n - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[buglab_swap_variables]^return  (  ( 2.0 * x )  + 1.0 )  - a + n;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[buglab_swap_variables]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[buglab_swap_variables]^return a *  ( n - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
