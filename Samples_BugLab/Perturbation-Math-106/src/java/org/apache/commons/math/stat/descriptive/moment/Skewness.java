[BugLab_Wrong_Literal]^incMoment = false;^59^^^^^58^61^incMoment = true;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] Skewness()   [VARIABLES] boolean  incMoment  ThirdMoment  moment  long  serialVersionUID  
[BugLab_Wrong_Literal]^incMoment = true;^68^^^^^67^70^incMoment = false;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] ThirdMoment)   ThirdMoment m3 [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.moment = moment;^69^^^^^67^70^this.moment = m3;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] ThirdMoment)   ThirdMoment m3 [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( moment.n == 3 )  {^90^^^^^88^101^if  ( moment.n < 3 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^double variance = moment.m2 +  ( double )   ( moment.n - 1 ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^double variance = moment.m2 /  ( double )   ( moment.n  ||  1 ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Literal]^double variance = moment.m2 /  ( double )   ( moment.n -  ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^if  ( variance <= 10E-20 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Literal]^if  ( variance < null0E-20 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 * moment.m3 )  * (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 + moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return / ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return + ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  <  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  |  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Literal]^return   ( n0 * moment.m3 )  / (  ( n0 -  )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Variable_Misuse]^double n0 =  ( double )  m3.getN (  ) ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 * moment.m3 )  + (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 / moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  >>  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  !=  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Literal]^return   ( n0 * moment.m3 )  / (  ( n0  )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Wrong_Literal]^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -1 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Variable_Misuse]^(  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( n0 )  * variance ) ;^99^^^^^88^101^(  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[BugLab_Variable_Misuse]^return m3.getN (  ) ;^107^^^^^106^108^return moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( test ( values, length, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( test ( values, begin, i )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( values, length, begin )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^if  ( test ( values, begin, length )  || length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^if  ( test ( values, begin, length )  && length < 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^if  ( test ( values, begin, length )  && length > length  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^if  ( test ( values, begin, length )  && length > begin  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = length; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = begin; i < begin + begin; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( beginnt i = i; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  !=  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ^  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  &  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum += Math.pow (  ( values[i] - n0 ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^accum += Math.pow (  ( m[i] - values ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]   instanceof   m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum2 +=  ( values[i] - stdDev ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  >=  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  !=  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = length; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = begin; i < begin + begin; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( int i = length; i < begin + begin; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( beginnt i = i; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  >>  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ||  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum3 += Math.pow ( values[i] - n0, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^accum3 += Math.pow ( m[i] - values, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  >>  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum3 += Math.pow ( values[i] - stdDev, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  <  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  &&  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum2 +=  ( values[i] - n0 ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  <=  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  !=  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^skew =  ( skew /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^skew =  ( accum3 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * n0;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew / =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew =  ( n0 *  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew =  ( n0 /  (  ( n0  ==  1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0   instanceof   2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^skew =  ( n0 /  (  ( n0  )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0  )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double m = mean.evaluate ( values, length, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double m = begin.evaluate ( values, mean, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double m = mean.evaluate ( length, begin, values ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double m = mean.evaluate ( begin, values, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double m = mean.evaluate ( values, length, begin ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double stdDev = Math.sqrt (  ( skew -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( skew, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  i )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double stdDev = Math.sqrt (  ( accum2 -  ( Math.pow ( accum, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( length, 2 )  /  (  ( double )  accum2 )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  +  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum  >>   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  -  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  !=  1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accumbegin, begin )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double n0 = i;^165^^^^^150^180^double n0 = length;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double m = mean.evaluate ( values, begin, i ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum += Math.pow (  ( values[i] - stdDev ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  ^  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double stdDev = Math.sqrt (  ( stdDev -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( stdDev, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum  &   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  *  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  &  1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accumi, i )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum1, 1 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  ==  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum3 /= Math.pow ( skew, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( int i = length; i < begin + begin; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i > begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  |  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  >  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  <<  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^accum2 +=  ( m[i] - values ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  <  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  |  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  >  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ==  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  &  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  ^  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  >=  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum2 +=  ( values[i] - skew ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  |  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum3 += Math.pow ( values[i] - skew, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum3 += Math.pow ( values[i]  &&  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^accum3 /= Math.pow ( m, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^skew =  ( stdDev /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * stdDev;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew =  ( n0 +  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew - =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew =  ( n0 /  (  ( n0  |  1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0  <  2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^skew =  ( n0 /  (  ( n0 - i )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - i )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum   instanceof    ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  ||  1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accumlength, length )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - i )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( test ( values, i, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( begin, values, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^double m = mean.evaluate ( values, i, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  >  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Argument_Swapping]^double stdDev = Math.sqrt (  ( length -  ( Math.pow ( accum2, 2 )  /  (  ( double )  accum )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Wrong_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum3, 3 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[BugLab_Variable_Misuse]^return m;^170^^^^^155^185^return skew;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
