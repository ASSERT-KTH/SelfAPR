[BugLab_Wrong_Literal]^protected boolean incMoment = false;^63^^^^^58^68^protected boolean incMoment = true;^[CLASS] Variance   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean isBiasCorrected = false;^70^^^^^65^75^private boolean isBiasCorrected = true;^[CLASS] Variance   [VARIABLES] 
[BugLab_Wrong_Literal]^incMoment = true;^87^^^^^86^89^incMoment = false;^[CLASS] Variance  [METHOD] <init> [RETURN_TYPE] SecondMoment)   SecondMoment m2 [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^this.moment = moment;^88^^^^^86^89^this.moment = m2;^[CLASS] Variance  [METHOD] <init> [RETURN_TYPE] SecondMoment)   SecondMoment m2 [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^this.isBiasCorrected = incMoment;^101^^^^^99^102^this.isBiasCorrected = isBiasCorrected;^[CLASS] Variance  [METHOD] <init> [RETURN_TYPE] Variance(boolean)   boolean isBiasCorrected [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Literal]^incMoment = true;^114^^^^^113^117^incMoment = false;^[CLASS] Variance  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^this.moment = moment;^115^^^^^113^117^this.moment = m2;^[CLASS] Variance  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^this.isBiasCorrected = incMoment;^116^^^^^113^117^this.isBiasCorrected = isBiasCorrected;^[CLASS] Variance  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^if  ( isBiasCorrected )  {^123^^^^^122^126^if  ( incMoment )  {^[CLASS] Variance  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  double  d  
[BugLab_Wrong_Operator]^if  ( moment.n != 0 )  {^132^^^^^131^143^if  ( moment.n == 0 )  {^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Literal]^if  ( moment.n == -1 )  {^132^^^^^131^143^if  ( moment.n == 0 )  {^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^} else if  ( moment.n <= 1 )  {^134^^^^^131^143^} else if  ( moment.n == 1 )  {^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 -  (  ( double )  moment.n ) ;^140^^^^^131^143^return moment.m2 /  (  ( double )  moment.n ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 -  (  ( double )  moment.n - 1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  &  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 +  (  ( double )  moment.n - 1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  <=  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 *  (  ( double )  moment.n ) ;^140^^^^^131^143^return moment.m2 /  (  ( double )  moment.n ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  <  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 *  (  ( double )  moment.n - 1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  >  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^} else if  ( moment.n != 1 )  {^134^^^^^131^143^} else if  ( moment.n == 1 )  {^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Literal]^} else if  ( moment.n == 0 )  {^134^^^^^131^143^} else if  ( moment.n == 1 )  {^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  !=  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  ^  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 +  (  ( double )  moment.n ) ;^140^^^^^131^143^return moment.m2 /  (  ( double )  moment.n ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^return moment.m2 /  (  ( double )  moment.n  >>  1d ) ;^138^^^^^131^143^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[CLASS] Variance  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^return m2.getN (  ) ;^149^^^^^148^150^return moment.getN (  ) ;^[CLASS] Variance  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^if  ( isBiasCorrected )  {^156^^^^^155^159^if  ( incMoment )  {^[CLASS] Variance  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Operator]^if  ( values != null )  {^178^^^^^177^182^if  ( values == null )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Argument_Swapping]^return evaluate ( values.length, 0, values ) ;^181^^^^^177^182^return evaluate ( values, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^return evaluate ( values, 0, this ) ;^181^^^^^177^182^return evaluate ( values, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Wrong_Literal]^return evaluate ( values, -1, values.length ) ;^181^^^^^177^182^return evaluate ( values, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^if  ( test ( values, length, length )  )  {^208^^^^^204^219^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^if  ( test ( values, begin, begin )  )  {^208^^^^^204^219^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^if  ( test ( values, length, begin )  )  {^208^^^^^204^219^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^if  ( begin == 1 )  {^210^^^^^204^219^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Operator]^if  ( length != 1 )  {^210^^^^^204^219^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Literal]^if  ( length == 0 )  {^210^^^^^204^219^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Literal]^if  ( length == begin )  {^210^^^^^204^219^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Operator]^} else if  ( length == 1 )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Literal]^} else if  ( length > begin )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^var = evaluate ( values, var, begin, length ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^var = evaluate ( values, m, length, length ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^var = evaluate ( values, m, begin, begin ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^var = evaluate ( m, values, begin, length ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^var = evaluate ( values, length, begin, m ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^var = evaluate ( values, m, length, begin ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^double m = mean.evaluate ( values, length, length ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^double m = mean.evaluate ( values, begin, begin ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^double m = begin.evaluate ( values, mean, length ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^double m = values.evaluate ( mean, begin, length ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^double m = mean.evaluate ( begin, values, length ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^double m = length.evaluate ( values, begin, mean ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^double m = mean.evaluate ( values, length, begin ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^var = evaluate ( begin, m, values, length ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^var = evaluate ( values, begin, m, length ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^var = evaluate ( length, m, begin, values ) ;^215^^^^^204^219^var = evaluate ( values, m, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^double m = mean.evaluate ( length, begin, values ) ;^214^^^^^204^219^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^} else if  ( begin > 1 )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Operator]^} else if  ( length < 1 )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Literal]^} else if  ( length > 2 )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Operator]^if  ( length >= 1 )  {^210^^^^^204^219^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Literal]^if  ( length ==  )  {^210^^^^^204^219^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Operator]^} else if  ( length >= 1 )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Wrong_Literal]^} else if  ( length >  )  {^212^^^^^204^219^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Argument_Swapping]^if  ( test ( begin, values, length )  )  {^208^^^^^204^219^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^return m;^218^^^^^204^219^return var;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  
[BugLab_Variable_Misuse]^if  ( test ( values, length, length )  )  {^252^^^^^247^272^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( test ( values, begin, i )  )  {^252^^^^^247^272^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( i == 1 )  {^253^^^^^247^272^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^if  ( length > 1 )  {^253^^^^^247^272^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^if  ( length == 2 )  {^253^^^^^247^272^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^} else if  ( i > 1 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^} else lengthf  ( length > 1 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^} else if  ( length >= 1 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^} else if  ( length >  )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^} else if  ( length > begin )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( incMoment )  {^262^^^^^247^272^if  ( isBiasCorrected )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^var =  ( var -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^var =  ( accum2 -  ( Math.pow ( accum, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  *  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  |   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  -  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^var =  ( accum -  ( Math.pow ( var, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accumbegin, begin )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^var =  ( accum -  ( Math.pow ( var, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  i )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^var =  ( accum2 -  ( Math.pow ( accum, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^var =  ( accum -  ( Math.pow ( length, 2 )  /  (  ( double )  accum2 )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  -  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  ^   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  +  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  >  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - length ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum3, 3 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = length; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^for  ( int i = begin; i < begin + begin; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( int i = length; i < begin + begin; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i == begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  >=  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  !=  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  &&  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^accum += Math.pow (  ( values[i] - var ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^accum += Math.pow (  ( mean[i] - values ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  >>  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^accum2 +=  ( values[i] - var ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^accum2 +=  ( mean[i] - values ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  >  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  !=  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  <=  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^var =  ( var -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  !=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  &  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accumlength, length )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - i ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  +  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum   instanceof    ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accumlength, length )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  ^  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accumbegin, begin )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum3, 3 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  ^   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum1, 1 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^var =  ( length -  ( Math.pow ( accum2, 2 )  /  (  ( double )  accum )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum   instanceof    ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  *  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  <  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum1, 1 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  <=  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ^  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  >  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]   instanceof   mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  ==  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]   instanceof   mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  ==  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  |  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  <   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  &  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^} else lengthf  ( i > 1 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^} else if  ( length > 0 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^} else if  ( length > 2 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  <=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  >=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  <=  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( beginnt i = i; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i > begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ==  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  &&  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  >=  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  >=  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  >  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  <=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  >=  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  |   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  ^  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  <<  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  >>  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  <  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  &&  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  >   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  &&  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  >>   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum,  )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^if  ( length != 1 )  {^253^^^^^247^272^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^if  ( length == 0 )  {^253^^^^^247^272^if  ( length == 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^} else if  ( length < 1 )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  ||   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accumi, i )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  ||   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - begin ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for  <  ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  ||  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  >>  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  ==   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  !=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  <<  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  ^  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  &   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  !=  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  >=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^} else if  ( length > length )  {^255^^^^^247^272^} else if  ( length > 1 )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum += Math.pow (  ( values[i]  |  mean ) , 2.0 ) ;^259^^^^^247^272^accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  <  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  &&   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^266^267^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum  &&   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Literal]^var =  ( accum -  ( Math.pow ( accumi, i )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = begin; i < begin + length; i++ )  {^258^^^^^247^272^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^accum2 +=  ( values[i]  <=  mean ) ;^260^^^^^247^272^accum2 +=  ( values[i] - mean ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Wrong_Operator]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  ==  1 ) ;^263^264^^^^247^272^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^if  ( test ( values, i, length )  )  {^252^^^^^247^272^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( length, begin, values )  )  {^252^^^^^247^272^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Argument_Swapping]^if  ( test ( values, length, begin )  )  {^252^^^^^247^272^if  ( test ( values, begin, length )  )  {^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^return mean;^271^^^^^247^272^return var;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  mean  var  int  begin  i  length  
[BugLab_Variable_Misuse]^return evaluate ( values, mean, 0, this ) ;^300^^^^^299^301^return evaluate ( values, mean, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  mean  
[BugLab_Argument_Swapping]^return evaluate ( values.length, mean, 0, values ) ;^300^^^^^299^301^return evaluate ( values, mean, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  mean  
[BugLab_Argument_Swapping]^return evaluate ( values, values.length, 0, mean ) ;^300^^^^^299^301^return evaluate ( values, mean, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  mean  
[BugLab_Wrong_Literal]^return evaluate ( values, mean, 1, values.length ) ;^300^^^^^299^301^return evaluate ( values, mean, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  mean  
[BugLab_Argument_Swapping]^return evaluate ( mean, values, 0, values.length ) ;^300^^^^^299^301^return evaluate ( values, mean, 0, values.length ) ;^[CLASS] Variance  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  incMoment  isBiasCorrected  double[]  values  long  serialVersionUID  SecondMoment  m2  moment  double  mean  
[BugLab_Variable_Misuse]^return incMoment;^307^^^^^306^308^return isBiasCorrected;^[CLASS] Variance  [METHOD] isBiasCorrected [RETURN_TYPE] boolean   [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
[BugLab_Variable_Misuse]^this.isBiasCorrected = incMoment;^314^^^^^313^315^this.isBiasCorrected = isBiasCorrected;^[CLASS] Variance  [METHOD] setBiasCorrected [RETURN_TYPE] void   boolean isBiasCorrected [VARIABLES] boolean  incMoment  isBiasCorrected  long  serialVersionUID  SecondMoment  m2  moment  
