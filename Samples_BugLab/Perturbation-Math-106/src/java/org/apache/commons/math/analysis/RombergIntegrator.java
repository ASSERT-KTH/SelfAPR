[buglab_swap_variables]^verifyInterval ( max, min ) ;^68^^^^^53^83^verifyInterval ( min, max ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^verifyInterval (  max ) ;^68^^^^^53^83^verifyInterval ( min, max ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^verifyInterval ( min ) ;^68^^^^^53^83^verifyInterval ( min, max ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[0][0] = qtrap.stage (  max, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[0][0] = qtrap.stage ( max, min, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[0][0] = qtrap.stage ( min,  0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[0][0] = max.stage ( min, qtrap, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^if  ( Math.abs ( olds - s )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^setResult ( i, s ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^setResult (  i ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^setResult ( s ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^if  ( Math.abs ( s - relativeAccuracy )  <= Math.abs ( olds * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][j] = r[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / t;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = qtrap.stage ( min, max ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = i.stage ( min, max, qtrap ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = qtrap.stage ( max, min, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = qtrap.stage (  max, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = qtrap.stage ( min,  i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^if  ( Math.abs ( relativeAccuracy - olds )  <= Math.abs ( s * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^for  ( i = 1; j <= j; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = qtrap.stage ( min, i, max ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = max.stage ( min, qtrap, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = min.stage ( qtrap, max, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[buglab_swap_variables]^t[i][0] = qtrap.stage ( i, max, min ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
