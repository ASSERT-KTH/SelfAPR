[BugLab_Wrong_Literal]^super ( f, 33 ) ;^44^^^^^43^45^super ( f, 32 ) ;^[CLASS] RombergIntegrator  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[BugLab_Wrong_Literal]^int i = 1, j, m = maximalIterationCount ;^62^^^^^47^77^int i = 1, j, m = maximalIterationCount + 1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^verifyInterval ( min, s ) ;^68^^^^^53^83^verifyInterval ( min, max ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^verifyInterval ( max, min ) ;^68^^^^^53^83^verifyInterval ( min, max ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[0][0] = qtrap.stage ( s, max, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[0][0] = qtrap.stage ( min, s, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[0][0] = max.stage ( min, qtrap, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[0][0] = qtrap.stage ( max, min, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[1][1] = qtrap.stage ( min, max, 1 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[-1][-1] = qtrap.stage ( min, max, -1 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[j][j] = qtrap.stage ( min, max, j ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[0][0] = min.stage ( qtrap, max, 0 ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[m][m] = qtrap.stage ( min, max, m ) ;^72^^^^^57^87^t[0][0] = qtrap.stage ( min, max, 0 ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^olds = t[m][m];^73^^^^^58^88^olds = t[0][0];^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^olds = t[1][1];^73^^^^^58^88^olds = t[0][0];^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^while  ( m <= maximalIterationCount )  {^74^^^^^59^89^while  ( i <= maximalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^while  ( i <= simalIterationCount )  {^74^^^^^59^89^while  ( i <= maximalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^while  ( maximalIterationCount <= i )  {^74^^^^^59^89^while  ( i <= maximalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^while  ( i < maximalIterationCount )  {^74^^^^^59^89^while  ( i <= maximalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^while  ( i == maximalIterationCount )  {^74^^^^^59^89^while  ( i <= maximalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( m >= minimalIterationCount )  {^82^^^^^67^97^if  ( i >= minimalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( i < minimalIterationCount )  {^82^^^^^67^97^if  ( i >= minimalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( Math.abs ( r - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( Math.abs ( s - r )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^if  ( Math.abs ( olds - s )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^if  ( Math.abs ( s - relativeAccuracy )  <= Math.abs ( olds * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s - olds )  == Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s   instanceof   olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy - olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^setResult ( r, i ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^setResult ( s, m ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^setResult ( i, s ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s  >=  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy + olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s - olds )  < Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s  <=  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^return null;^85^^^^^70^100^return result;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^for  ( m = 1; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^fos  ( j = 1; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^for  ( j = 1; j < i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^for  <<  ( j = 1; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^for  ( j = m; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^for  ( j = 2; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^r =  ( 1L <<  ( 2 * m )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^r =  ( 1L  &   ( 2 * j )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^r =  ( 1L <<  ( 2 - j )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^r =  ( 1L <<  ( m * j )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / olds;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][j] = r[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / t;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  <=  ( t[i][j-1] - t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  ^  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  * r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  &&  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  >  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[i][j] = t[i][j-i] +  ( t[i][j-i] - t[i-i][j-i] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[i][j] = t[i][j-j] +  ( t[i][j-j] - t[i-j][j-j] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[i][j] = t[i][j-2] +  ( t[i][j-2] - t[i-2][j-2] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[i][j] = t[i][j-0] +  ( t[i][j-0] - t[i-0][j-0] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][0] = qtrap.stage ( min, max, m ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][0] = qtrap.stage ( s, max, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][0] = qtrap.stage ( min, s, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][0] = i.stage ( min, max, qtrap ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][0] = qtrap.stage ( max, min, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][0] = max.stage ( min, qtrap, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[i][i] = qtrap.stage ( min, max, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / s;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ||  ( t[i][j-1] - t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  |  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  - r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  <  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  &  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]   instanceof   t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^olds = r;^88^^^^^73^103^olds = s;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^return this;^85^^^^^70^100^return result;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][0] = qtrap.stage ( i, max, min ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s  !=  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( Math.abs ( s - s )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( Math.abs ( s - olds )  <= Math.abs ( 4 * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^setResult ( olds, i ) ;^84^^^^^69^99^setResult ( s, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( i >= null )  {^82^^^^^67^97^if  ( i >= minimalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^if  ( minimalIterationCount >= i )  {^82^^^^^67^97^if  ( i >= minimalIterationCount )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^if  ( Math.abs ( s - olds )  <= Math.abs ( this * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s - olds )  > Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s  &&  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^if  ( Math.abs ( relativeAccuracy - olds )  <= Math.abs ( s * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( Math.abs ( s  |  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^68^98^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^return 2;^85^^^^^70^100^return result;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^for  ( j = 1; j <= m; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^for  |  ( j = 1; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^for  ( j = i; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^for  ( j = 0; j <= i; j++ )  {^76^^^^^61^91^for  ( j = 1; j <= i; j++ )  {^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^r =  ( 1L  <   ( 2 * j )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^r =  ( 1L <<  ( 2 + j )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^r =  ( 1L <<  ( j * j )  )  -1;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^r =  ( 0L <<  ( 2 * j )  )  -0;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  >>  ( t[i][j-1] - t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  ==  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^t[i][j] = t[i][j-m] +  ( t[i][j-m] - t[i-m][j-m] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][0] = qtrap.stage ( min, r, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][0] = qtrap.stage ( min, i, max ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Argument_Swapping]^t[i][0] = min.stage ( qtrap, max, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Literal]^r =  ( iL <<  ( 2 * j )  )  -i;^78^^^^^63^93^r =  ( 1L <<  ( 2 * j )  )  -1;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ^  ( t[i][j-1] - t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  >>  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^t[i][j] = t[i][j-1] +  ( t[i][j-1]  !=  t[i-1][j-1] )  / r;^79^^^^^64^94^t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Variable_Misuse]^t[i][0] = qtrap.stage ( r, max, i ) ;^75^^^^^60^90^t[i][0] = qtrap.stage ( min, max, i ) ;^[CLASS] RombergIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] double[][]  t  boolean  long  serialVersionUID  double  max  min  olds  r  s  int  i  j  m  TrapezoidIntegrator  qtrap  
[BugLab_Wrong_Operator]^if  ( maximalIterationCount >= 32 )  {^102^^^^^99^107^if  ( maximalIterationCount > 32 )  {^[CLASS] RombergIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: "  !=  maximalIterationCount ) ;^103^104^105^^^99^107^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: " + maximalIterationCount ) ;^[CLASS] RombergIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: "  &  maximalIterationCount ) ;^103^104^105^^^99^107^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: " + maximalIterationCount ) ;^[CLASS] RombergIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: "  <=  maximalIterationCount ) ;^103^104^105^^^99^107^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: " + maximalIterationCount ) ;^[CLASS] RombergIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: "  <<  maximalIterationCount ) ;^103^104^105^^^99^107^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 32] range: " + maximalIterationCount ) ;^[CLASS] RombergIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
