[buglab_swap_variables]^if  ( Math.abs ( value - a0 )  < epsilon )  {^79^^^^^64^94^if  ( Math.abs ( a0 - value )  < epsilon )  {^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^if  ( Math.abs ( a0 - epsilon )  < value )  {^79^^^^^64^94^if  ( Math.abs ( a0 - value )  < epsilon )  {^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^if  ( n < maxIterations && Math.abs ( epsilon - value )  > convergent )  {^103^^^^^88^118^if  ( n < maxIterations && Math.abs ( convergent - value )  > epsilon )  {^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^p2 =  ( p0 * p1 )  + a1;^99^^^^^84^114^p2 =  ( a1 * p1 )  + p0;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^p2 =  ( p1 * a1 )  + p0;^99^^^^^84^114^p2 =  ( a1 * p1 )  + p0;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^q2 =  ( q1 * a1 )  + q0;^100^^^^^85^115^q2 =  ( a1 * q1 )  + q0;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^q2 =  ( q0 * q1 )  + a1;^100^^^^^85^115^q2 =  ( a1 * q1 )  + q0;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^double r1 = 1.0 /  ( a0 - r0 ) ;^97^^^^^82^112^double r1 = 1.0 /  ( r0 - a0 ) ;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^if  ( n < maxIterations && Math.abs ( value - convergent )  > epsilon )  {^103^^^^^88^118^if  ( n < maxIterations && Math.abs ( convergent - value )  > epsilon )  {^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^if  ( maxIterations >= n )  {^115^^^^^100^130^if  ( n >= maxIterations )  {^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)   double value double epsilon int maxIterations [VARIABLES] Fraction  ONE  ZERO  boolean  stop  long  serialVersionUID  int  a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  double  convergent  epsilon  r0  r1  value  
[buglab_swap_variables]^if  ( den == Integer.MIN_VALUE || num == Integer.MIN_VALUE )  {^138^139^^^^132^148^if  ( num == Integer.MIN_VALUE || den == Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int num int den [VARIABLES] Fraction  ONE  ZERO  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  
[buglab_swap_variables]^if  ( second < first )  {^178^^^^^170^186^if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  ONE  ZERO  other  ret  Object  object  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  double  first  second  
[buglab_swap_variables]^} else if  ( second > first )  {^180^^^^^170^186^} else if  ( first > second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  ONE  ZERO  other  ret  Object  object  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  double  first  second  
[buglab_swap_variables]^ret =  ( numerator == rhs.numerator.numerator )  && ( denominator == rhs.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( rhs.numerator == numerator )  && ( denominator == rhs.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( numerator == denominator )  && ( rhs.numerator == rhs.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( denominator == rhs.numerator )  && ( numerator == rhs.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( numerator == rhs.denominator )  && ( denominator == rhs.numerator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( rhs == numerator.numerator )  && ( denominator == rhs.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( rhs.denominator == rhs.numerator )  && ( denominator == numerator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( numerator == denominator.numerator )  && ( rhs == rhs.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( numerator == rhs.numerator )  && ( rhs.denominator == denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( numerator == rhs.denominator.numerator )  && ( denominator == rhs ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^ret =  ( numerator == rhs )  && ( denominator == rhs.numerator.denominator ) ;^218^219^^^^206^227^ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  Object  other  boolean  ret  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  ClassCastException  ex  
[buglab_swap_variables]^return new Fraction ( - denominator ) ;^288^^^^^284^289^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  
[buglab_swap_variables]^return new Fraction ( -numerator ) ;^288^^^^^284^289^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  
[buglab_swap_variables]^return new Fraction ( numerator, denominator ) ;^296^^^^^295^297^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] reciprocal [RETURN_TYPE] Fraction   [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  
[buglab_swap_variables]^return new Fraction (  numerator ) ;^296^^^^^295^297^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] reciprocal [RETURN_TYPE] Fraction   [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  
[buglab_swap_variables]^return new Fraction ( denominator ) ;^296^^^^^295^297^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] reciprocal [RETURN_TYPE] Fraction   [VARIABLES] Fraction  ONE  ZERO  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  
[buglab_swap_variables]^return fraction ? isAdd : fraction.negate (  ) ;^343^^^^^328^358^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( fraction.numerator.numerator == 0 )  {^345^^^^^330^360^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( fraction == 0 )  {^345^^^^^330^360^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( fraction, denominator.denominator ) ;^350^^^^^335^365^int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( denominator.denominator ) ;^350^^^^^335^365^int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( fraction.denominator, denominator ) ;^350^^^^^335^365^int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd (  fraction.denominator ) ;^350^^^^^335^365^int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( denominator, fraction ) ;^350^^^^^335^365^int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( denominator ) ;^350^^^^^335^365^int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( fraction ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, isAdd.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( fraction.denominator, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, uvp )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck (  upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, fraction.denominator )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, upv )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( denominator, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( uvp, fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck (  fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( upv, uvp )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, denominator )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( upv, fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( fraction, denominator.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( fraction.denominator, denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator.denominator ) ;^353^^^^^338^368^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int uvp = MathUtils.mulAndCheck ( numerator.denominator ) ;^353^^^^^338^368^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int uvp = MathUtils.mulAndCheck ( fraction.denominator, numerator ) ;^353^^^^^338^368^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int uvp = MathUtils.mulAndCheck (  fraction.denominator ) ;^353^^^^^338^368^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int uvp = MathUtils.mulAndCheck ( numerator ) ;^353^^^^^338^368^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int upv = MathUtils.mulAndCheck ( fraction.numerator.numerator, denominator ) ;^354^^^^^339^369^int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int upv = MathUtils.mulAndCheck ( fraction, denominator ) ;^354^^^^^339^369^int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int upv = MathUtils.mulAndCheck (  denominator ) ;^354^^^^^339^369^int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int upv = MathUtils.mulAndCheck ( denominator, fraction.numerator ) ;^354^^^^^339^369^int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int upv = MathUtils.mulAndCheck ( fraction.numerator ) ;^354^^^^^339^369^int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int upv = MathUtils.mulAndCheck ( denominator.numerator, fraction ) ;^354^^^^^339^369^int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( isAdd ? MathUtils.addAndCheck ( upv, uvp )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^356^357^358^^^341^371^( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( isAdd ? MathUtils.addAndCheck (  upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^356^357^358^^^341^371^( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( isAdd ? MathUtils.addAndCheck ( uvp )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^356^357^358^^^341^371^( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.subAndCheck ( upv, uvp ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^357^358^^^^342^372^MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.subAndCheck (  upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^357^358^^^^342^372^MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.subAndCheck ( uvp ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^357^358^^^^342^372^MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( fraction, denominator.denominator )  ) ;^358^^^^^343^373^MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator.denominator )  ) ;^358^^^^^343^373^MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( fraction.denominator, denominator )  ) ;^358^^^^^343^373^MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck (  fraction.denominator )  ) ;^358^^^^^343^373^MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator )  ) ;^358^^^^^343^373^MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( uvp ? MathUtils.addAndCheck ( isAdd, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^340^370^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int uvp = MathUtils.mulAndCheck ( fraction, numerator.denominator ) ;^353^^^^^338^368^int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator, fraction.denominator.denominator )  ) ;^358^^^^^343^373^MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger uvp = BigInteger.valueOf ( fraction ) .multiply ( BigInteger.valueOf ( numerator.denominator/d1 )  ) ;^363^364^^^^348^378^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction/d1 )  ) ;^363^364^^^^348^378^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator.denominator/d1 )  ) ;^363^364^^^^348^378^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger uvp = BigInteger.valueOf ( fraction.denominator ) .multiply ( BigInteger.valueOf ( numerator/d1 )  ) ;^363^364^^^^348^378^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^.multiply ( BigInteger.valueOf ( fraction.denominator.denominator/d1 )  ) ;^364^^^^^349^379^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger upv = BigInteger.valueOf ( denominator ) .multiply ( BigInteger.valueOf ( fraction.numerator/d1 )  ) ;^365^366^^^^350^380^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger upv = BigInteger.valueOf ( fraction.numerator.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^365^366^^^^350^380^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger upv = BigInteger.valueOf ( fraction ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^365^366^^^^350^380^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger t = uvp ? isAdd.add ( upv )  : uvp.subtract ( upv ) ;^367^^^^^352^382^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger t = isAdd ? upv.add ( uvp )  : uvp.subtract ( upv ) ;^367^^^^^352^382^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1modd1 = t.mod ( BigInteger.valueOf ( t )  ) .intValue (  ) ;^370^^^^^355^385^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 =  ( d1==0 ) ?d1:MathUtils.gcd ( tmodd1, tmodd1 ) ;^371^^^^^356^386^int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd (  d1 ) ;^371^^^^^356^386^int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd ( tmod d1 ) ;^371^^^^^356^386^int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^BigInteger w = d2.divide ( BigInteger.valueOf ( t )  ) ;^374^^^^^359^389^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction  ( denominator.intValue (  ) , MathUtils.mulAndCheck ( w/d1, fraction.denominator/d2 )  ) ;^379^380^381^^^364^394^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/ fraction.denominator/d2 )  ) ;^379^380^381^^^364^394^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1.denominator/d2 )  ) ;^379^380^381^^^364^394^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1/d2 )  ) ;^379^380^381^^^364^394^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator/ fraction.denominator/d2 )  ) ;^380^381^^^^365^395^MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( fraction/d1, denominator.denominator/d2 )  ) ;^380^381^^^^365^395^MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator/d1.denominator/d2 )  ) ;^380^381^^^^365^395^MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator/d1/d2 )  ) ;^380^381^^^^365^395^MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  isAdd  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( fraction == 0 || numerator.numerator == 0 )  {^398^^^^^394^408^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( fraction.numerator == 0 || numerator == 0 )  {^398^^^^^394^408^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( numerator, fraction.denominator.denominator ) ;^403^^^^^394^408^int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( numerator.denominator ) ;^403^^^^^394^408^int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( fraction.denominator, numerator ) ;^403^^^^^394^408^int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd (  fraction.denominator ) ;^403^^^^^394^408^int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( numerator ) ;^403^^^^^394^408^int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d1 = MathUtils.gcd ( numerator, fraction ) ;^403^^^^^394^408^int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 = MathUtils.gcd ( fraction.numerator.numerator, denominator ) ;^404^^^^^394^408^int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 = MathUtils.gcd ( denominator, fraction.numerator ) ;^404^^^^^394^408^int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 = MathUtils.gcd (  denominator ) ;^404^^^^^394^408^int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 = MathUtils.gcd ( fraction.numerator ) ;^404^^^^^394^408^int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 = MathUtils.gcd ( denominator.numerator, fraction ) ;^404^^^^^394^408^int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d2 = MathUtils.gcd ( fraction, denominator ) ;^404^^^^^394^408^int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/ fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( fraction/d1, numerator.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/ fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( fraction.denominator/d2, denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return getReducedFraction ( MathUtils.mulAndCheck ( fraction.numerator/d1, numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( MathUtils.mulAndCheck ( numerator/ fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^406^407^^^^394^408^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^406^407^^^^394^408^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( MathUtils.mulAndCheck ( numerator/d1.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^406^407^^^^394^408^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/ fraction.denominator/d1 )  ) ;^406^407^^^^394^408^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( MathUtils.mulAndCheck ( fraction.numerator/d1, numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^406^407^^^^394^408^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^( MathUtils.mulAndCheck ( numerator/d1/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^406^407^^^^394^408^( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator/ fraction.denominator/d1 )  ) ;^407^^^^^394^408^MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( fraction/d2, denominator.denominator/d1 )  ) ;^407^^^^^394^408^MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator/d2.denominator/d1 )  ) ;^407^^^^^394^408^MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^MathUtils.mulAndCheck ( denominator/d2/d1 )  ) ;^407^^^^^394^408^MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiply [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( fraction.numerator.numerator == 0 )  {^424^^^^^420^428^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divide [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( fraction == 0 )  {^424^^^^^420^428^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divide [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( numerator==Integer.MIN_VALUE &&  ( denominator&1 ) ==0 )  {^449^^^^^441^465^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^if  ( denominator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^453^454^^^^441^465^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int gcd = MathUtils.gcd ( denominator, numerator ) ;^461^^^^^441^465^int gcd = MathUtils.gcd ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int gcd = MathUtils.gcd (  denominator ) ;^461^^^^^441^465^int gcd = MathUtils.gcd ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int gcd = MathUtils.gcd ( numerator ) ;^461^^^^^441^465^int gcd = MathUtils.gcd ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( denominator, numerator ) ;^464^^^^^441^465^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction (  denominator ) ;^464^^^^^441^465^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^return new Fraction ( numerator ) ;^464^^^^^441^465^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d = MathUtils.gcd ( denominator, numerator ) ;^473^^^^^471^484^int d = MathUtils.gcd ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] void   [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d = MathUtils.gcd (  denominator ) ;^473^^^^^471^484^int d = MathUtils.gcd ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] void   [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
[buglab_swap_variables]^int d = MathUtils.gcd ( numerator ) ;^473^^^^^471^484^int d = MathUtils.gcd ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] void   [VARIABLES] Fraction  ONE  ZERO  fraction  other  ret  rhs  boolean  long  serialVersionUID  int  a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp  
