[buglab_swap_variables]^verifyInputArray ( c, a ) ;^72^^^^^69^78^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^verifyInputArray (  c ) ;^72^^^^^69^78^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^verifyInputArray ( a ) ;^72^^^^^69^78^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( this.a, 0, a, 0, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy (  0, this.a, 0, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( a, 0,  0, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( a.length, 0, this.a, 0, a ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( a, 0, this.a, 0 ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( this.c, 0, c, 0, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy (  0, this.c, 0, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c, 0, c.length, 0, this.c ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c, 0,  0, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c.length, 0, this.c, 0, c ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c, 0, this.c, 0 ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^return evaluate ( a, z, c ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[buglab_swap_variables]^return evaluate ( a, c ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[buglab_swap_variables]^return evaluate ( c, a, z ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[buglab_swap_variables]^return evaluate (  c, z ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[buglab_swap_variables]^return evaluate ( a,  z ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[buglab_swap_variables]^return evaluate ( z, c, a ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[buglab_swap_variables]^return c;^98^^^^^97^99^return c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] degree [RETURN_TYPE] int   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^return c.length.length;^98^^^^^97^99^return c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] degree [RETURN_TYPE] int   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( out, 0, a, 0, a.length ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( a, 0,  0, a.length ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy (  0, out, 0, a.length ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( a, 0, a.length, 0, out ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( a, 0, out, 0 ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( out, 0, c, 0, c.length ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c, 0,  0, c.length ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy (  0, out, 0, c.length ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c.length, 0, out, 0, c ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( c, 0, out, 0 ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( coefficients, 0, coefficients.length, 0, out ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( coefficients, 0,  0, coefficients.length ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( coefficients.length, 0, out, 0, coefficients ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy (  0, out, 0, coefficients.length ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^System.arraycopy ( coefficients, 0, out, 0 ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^verifyInputArray ( c, a ) ;^158^^^^^155^167^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^verifyInputArray (  c ) ;^158^^^^^155^167^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^verifyInputArray ( a ) ;^158^^^^^155^167^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^int n = c.length.length;^160^^^^^155^167^int n = c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^int n = c;^160^^^^^155^167^int n = c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^for  ( nnt i = i-1; i >= 0; i-- )  {^162^^^^^155^167^for  ( int i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^value = c[i] +  ( z - a[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^value = a[i] +  ( value - c[i] )  * z;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^value = a[i] +  ( c - z[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^value = value[i] +  ( z - c[i] )  * a;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[buglab_swap_variables]^for  ( n = 0; i <= i; i++ )  {^177^^^^^173^190^for  ( i = 0; i <= n; i++ )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^for  ( n = i-1; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^for  ( n = j-i; j > 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^coefficients[j] = c[j-1] - coefficients[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^coefficients[j] = coefficientsoefficients[j-1] - c[i] * c[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^coefficients[0] = coefficients[i] - c[i] * a[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^coefficients[0] = c[i] - a[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^coefficients[0] = a[i] - coefficients[i] * c[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[buglab_swap_variables]^if  ( c.length < 1 || a.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^if  ( c < 1 || a.length.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^if  ( a < 1 || c.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^if  ( c.length != a.length + 1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[buglab_swap_variables]^if  ( c != a.length.length + 1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
