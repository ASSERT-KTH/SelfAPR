[BugLab_Variable_Misuse]^verifyInputArray ( coefficients, c ) ;^72^^^^^69^78^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^verifyInputArray ( a, coefficients ) ;^72^^^^^69^78^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^verifyInputArray ( c, a ) ;^72^^^^^69^78^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.coefficients = new double[a.length];^73^^^^^69^78^this.a = new double[a.length];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.coefficients = new double[c.length];^74^^^^^69^78^this.c = new double[c.length];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( coefficients, 0, this.a, 0, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( a, 0, coefficients, 0, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( this.a, 0, a, 0, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( a.length, 0, this.a, 0, a ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Wrong_Literal]^System.arraycopy ( a, 1, this.a, 1, a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Wrong_Literal]^System.arraycopy ( a, , this.a, , a.length ) ;^75^^^^^69^78^System.arraycopy ( a, 0, this.a, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( coefficients, 0, this.c, 0, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( c, 0, coefficients, 0, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( c, 0, this.c, 0, 0 ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( this.c, 0, c, 0, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( c, 0, c.length, 0, this.c ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Wrong_Literal]^System.arraycopy ( c, 1, this.c, 1, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Wrong_Literal]^System.arraycopy ( c, -1, this.c, -1, c.length ) ;^76^^^^^69^78^System.arraycopy ( c, 0, this.c, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Wrong_Literal]^coefficientsComputed = true;^77^^^^^69^78^coefficientsComputed = false;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] <init> [RETURN_TYPE] PolynomialFunctionNewtonForm(double[],double[])   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^return evaluate ( coefficients, c, z ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[BugLab_Variable_Misuse]^return evaluate ( a, coefficients, z ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[BugLab_Argument_Swapping]^return evaluate ( a, z, c ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[BugLab_Argument_Swapping]^return evaluate ( z, c, a ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[BugLab_Argument_Swapping]^return evaluate ( c, a, z ) ;^89^^^^^88^90^return evaluate ( a, c, z ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] value [RETURN_TYPE] double   double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  double  z  
[BugLab_Variable_Misuse]^return coefficients.length;^98^^^^^97^99^return c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] degree [RETURN_TYPE] int   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^return c;^98^^^^^97^99^return c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] degree [RETURN_TYPE] int   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Argument_Swapping]^return c.length.length;^98^^^^^97^99^return c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] degree [RETURN_TYPE] int   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( a, 0, coefficients, 0, a.length ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( coefficients, 0, out, 0, a.length ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( out, 0, a, 0, a.length ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( a.length, 0, out, 0, a ) ;^110^^^^^108^112^System.arraycopy ( a, 0, out, 0, a.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^return coefficients;^111^^^^^108^112^return out;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getNewtonCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( c, 0, coefficients, 0, c.length ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( out, 0, out, 0, c.length ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( c, 0, c.length, 0, out ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( out, 0, c, 0, c.length ) ;^123^^^^^121^125^System.arraycopy ( c, 0, out, 0, c.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^return coefficients;^124^^^^^121^125^return out;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCenters [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( coefficients, 0, c, 0, coefficients.length ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^System.arraycopy ( out, 0, out, 0, coefficients.length ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( out, 0, coefficients, 0, coefficients.length ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^System.arraycopy ( coefficients, 0, coefficients.length, 0, out ) ;^139^^^^^134^141^System.arraycopy ( coefficients, 0, out, 0, coefficients.length ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^return coefficients;^140^^^^^134^141^return out;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] getCoefficients [RETURN_TYPE] double[]   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^verifyInputArray ( out, c ) ;^158^^^^^155^167^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^verifyInputArray ( c, a ) ;^158^^^^^155^167^verifyInputArray ( a, c ) ;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^int n = out.length;^160^^^^^155^167^int n = c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^int n = i;^160^^^^^155^167^int n = c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^int n = c.length.length;^160^^^^^155^167^int n = c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^int n = c;^160^^^^^155^167^int n = c.length;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^double value = out[n];^161^^^^^155^167^double value = a[n];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^for  ( nnt i = n-1; i >= 0; i-- )  {^162^^^^^155^167^for  ( int i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^for  ( nnt i = i-1; i >= 0; i-- )  {^162^^^^^155^167^for  ( int i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^for  ( int i = n-1; i > 0; i-- )  {^162^^^^^155^167^for  ( int i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^value = out[i] +  ( z - c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^value = a[i] +  ( value - c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^value = a[i] +  ( z - out[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^value = a[i] +  ( z - c[i] )  * z;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^value = a[i] +  ( c - z[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^value = c[i] +  ( z - a[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Argument_Swapping]^value = a[i] +  ( value - c[i] )  * z;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^value = a[i] +  <  ( z - c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^value - = a[i] +  ( z - c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^value = a[i] +  ( z  <=  c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^value = a[i] +  >  ( z - c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^value + = a[i] +  ( z - c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Operator]^value = a[i] +  ( z  <<  c[i] )  * value;^163^^^^^155^167^value = a[i] +  ( z - c[i] )  * value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Wrong_Literal]^for  ( int i = n-; i >= 0; i-- )  {^162^^^^^155^167^for  ( int i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^return z;^166^^^^^155^167^return value;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] evaluate [RETURN_TYPE] double   double[] a double[] c double z [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  double  value  z  int  i  n  
[BugLab_Variable_Misuse]^coefficients = jew double[n+1];^176^^^^^173^190^coefficients = new double[n+1];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients = new double[n+j];^176^^^^^173^190^coefficients = new double[n+1];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( j = 0; i <= n; i++ )  {^177^^^^^173^190^for  ( i = 0; i <= n; i++ )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( i = 0; i <= j; i++ )  {^177^^^^^173^190^for  ( i = 0; i <= n; i++ )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^for  ( i = 0; i < n; i++ )  {^177^^^^^173^190^for  ( i = 0; i <= n; i++ )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = -1; i <= n; i++ )  {^177^^^^^173^190^for  ( i = 0; i <= n; i++ )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = j; i <= n; i++ )  {^177^^^^^173^190^for  ( i = 0; i <= n; i++ )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^coefficients[0] = out[n];^181^^^^^173^190^coefficients[0] = a[n];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[i] = a[n];^181^^^^^173^190^coefficients[0] = a[n];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( i = i-1; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( n = n-1; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^for  ( n = i-1; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^for  ( i = n-1; i > 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = n-2; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = n-1; i >= j; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = n-1; i >= i; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = n-j; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( i = n-1; i >= n; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( j = j-i; j > 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( i = n-i; j > 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^for  ( n = j-i; j > 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^for  ( j = n-i; j >= 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^coefficients[j] = outoefficients[j-1] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^coefficients[j] = c[j-1] - coefficients[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^coefficients[j] = coefficientsoefficients[j-1] - c[i] * c[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] = coefficients[j-1]  &  c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] = coefficients[j-1]  <=  c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] + = coefficients[j-1] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[j] = coefficients[j-] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^coefficients[j] = out[j-1] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] = coefficients[j-1]  >=  c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[j] = coefficients[j-n] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^coefficients[0] = a[i] - c[i] * out[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^coefficients[0] = out[i] - c[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^coefficients[0] = a[i] - out[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^coefficients[0] = a[i] - coefficients[i] * c[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^coefficients[0] = coefficients[i] - c[i] * a[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Argument_Swapping]^coefficients[0] = c[i] - a[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[0] = a[i]  <=  c[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[0] / = a[i] - c[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[j] = a[i] - c[i] * coefficients[j];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( j = i-i; j > 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^for  ( j = n-i; j == 0; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^for  ( j = n-i; j > 1; j-- )  {^183^^^^^173^190^for  ( j = n-i; j > 0; j-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] = coefficients[j-1]  |  c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] / = coefficients[j-1] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[j] = coefficients[j-i] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^for  ( i = j-1; i >= 0; i-- )  {^182^^^^^173^190^for  ( i = n-1; i >= 0; i-- )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] = coefficients[j-1]   instanceof   c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[j] = coefficients[j-1]  <<  c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[j] = coefficients[j-2] - c[i] * coefficients[j];^184^^^^^173^190^coefficients[j] = coefficients[j-1] - c[i] * coefficients[j];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Operator]^coefficients[0] = a[i]  >  c[i] * coefficients[0];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficients[n] = a[i] - c[i] * coefficients[n];^186^^^^^173^190^coefficients[0] = a[i] - c[i] * coefficients[0];^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Wrong_Literal]^coefficientsComputed = false;^189^^^^^173^190^coefficientsComputed = true;^[CLASS] PolynomialFunctionNewtonForm  [METHOD] computeCoefficients [RETURN_TYPE] void   [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  int  i  j  n  
[BugLab_Variable_Misuse]^if  ( a.length < 1 || out.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( c.length < 1 || a.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a.length < 1 && c.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a.length == 1 || c.length < 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a.length < 1 || c.length <= 1 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( a.length < 2 || c.length < 2 )  {^205^^^^^202^213^if  ( a.length < 1 || c.length < 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( out.length != c.length + 1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( a.length != out.length + 1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( c.length != a.length + 1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a.length >= c.length + 1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( a.length != c.length  >=  1 )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
[BugLab_Wrong_Literal]^if  ( a.length != c.length  )  {^209^^^^^202^213^if  ( a.length != c.length + 1 )  {^[CLASS] PolynomialFunctionNewtonForm  [METHOD] verifyInputArray [RETURN_TYPE] void   double[] a double[] c [VARIABLES] boolean  coefficientsComputed  double[]  a  c  coefficients  out  long  serialVersionUID  
