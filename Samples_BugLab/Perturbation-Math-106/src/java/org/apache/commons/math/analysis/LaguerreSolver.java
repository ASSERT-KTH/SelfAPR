[BugLab_Wrong_Literal]^super ( f, 99, 1E-6 ) ;^51^^^^^48^57^super ( f, 100, 1E-6 ) ;^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( f  >  PolynomialFunction )  {^52^^^^^48^57^if  ( f instanceof PolynomialFunction )  {^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( p.value ( max )  == 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^if  ( min.value ( p )  == 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Wrong_Operator]^if  ( p.value ( min )  <= 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^if  ( p.value ( min )  == 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^if  ( max.value ( p )  == 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Wrong_Operator]^if  ( p.value ( max )  >= 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^if  ( p.value ( min )  == 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^if  ( initial.value ( p )  == 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Wrong_Operator]^if  ( p.value ( initial )  != 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^verifyBracketing ( min, min, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^verifyBracketing ( p, max, min ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^verifyBracketing ( max, min, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^verifyBracketing ( min, p, max ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^verifySequence ( initial, initial, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^verifySequence ( min, min, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^verifySequence ( min, initial, initial ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^verifySequence ( initial, min, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^verifySequence ( min, max, initial ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^verifySequence ( max, initial, min ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^if  ( isBracketing ( max, initial, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^if  ( isBracketing ( min, max, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^if  ( isBracketing ( initial, min, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^if  ( isBracketing ( p, initial, min )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^return solve ( min, max ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^return solve ( initial, min ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^return solve ( max, initial ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^return solve ( max, initial ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^return solve ( min, max ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^return solve ( initial, min ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^if  ( isBracketing ( min, min, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Argument_Swapping]^if  ( isBracketing ( min, p, initial )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[BugLab_Variable_Misuse]^if  ( p.value ( max )  == 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( min.value ( p )  == 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^if  ( p.value ( min )  >= 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^if  ( p.value ( min )  == 0.0 )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( max.value ( p )  == 0.0 )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^if  ( p.value ( max )  > 0.0 )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^verifyBracketing ( max, min, p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^verifyBracketing ( min, p, max ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rootoefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^for  ( coefficientsnt i = 0; i < i.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < coefficients.lengthoefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < coefficients; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= coefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^c[i] = new Complex ( coefficientsoefficients[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^c[i] = new Complex ( c[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^c[i] = new Complex ( rootoefficients[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < coefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^Complex initial = new Complex ( 0.5 *  ( max + min ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^Complex + initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^Complex initial = new Complex ( 0.5 *  ( min  !=  max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^Complex initial = new Complex ( 0.5 *  ( min + min ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^Complex initial = new Complex ( 0.5 *  ( min  &&  max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^Complex z = solve ( root, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^Complex z = solve ( initial, c ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^Complex z = solve ( c, z ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^if  ( isRootOK ( min, min, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^if  ( isRootOK ( min, max, initial )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( isRootOK ( max, min, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( isRootOK ( min, z, max )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^setResult ( initial.getReal (  ) , iterationCount ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^setResult ( iterationCount.getReal (  ) , z ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( isRootOK ( z, max, min )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^Complex[] root = solveAll ( c, z ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^Complex[] root = solveAll ( initial, c ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^Complex[] root = solveAll ( root, initial ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^if  ( isRootOK ( min, max, c[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( minsRootOK ( i, max, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( isRootOK ( max, min, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( isRootOK ( min, root, max[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^return 1;^143^^^^^119^149^return result;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^setResult ( c[i].getReal (  ) , iterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^setResult ( iterationCount[i].getReal (  ) , root ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^setResult ( i[i].getReal (  ) , rootterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == root.length; i++ )  {^140^^^^^119^149^for  ( int i = 0; i < root.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Wrong_Literal]^for  ( int i = i; i < root.length; i++ )  {^140^^^^^119^149^for  ( int i = 0; i < root.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Variable_Misuse]^if  ( isRootOK ( min, min, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( rootsRootOK ( min, max, i[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^setResult ( root[i].getReal (  ) , iterationCountterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^if  ( isRootOK ( root, max, min[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^setResult ( root[i].getReal (  ) , i ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( relativeAccuracy * absoluteAccuracy.abs (  ) , z ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( absoluteAccuracy * z.abs (  ) , relativeAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Wrong_Operator]^double tolerance = Math.max ( relativeAccuracy - z.abs (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , null ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( z * relativeAccuracy.abs (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Variable_Misuse]^return  ( isSequence ( max, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Variable_Misuse]^return  ( isSequence ( min, z.getReal (  ) , tolerance )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Variable_Misuse]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= max || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^return  ( isSequence ( max, z.getReal (  ) , min )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^return  ( isSequence ( min, max.getReal (  ) , z )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^return  ( isSequence ( min, z.getReal (  ) , functionValueAccuracy )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= max ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^return  ( isSequence ( tolerance, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= min || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^return  ( isSequence ( functionValueAccuracy, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= min ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Wrong_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  || ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Wrong_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance && z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Wrong_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  < tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Wrong_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  < functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Variable_Misuse]^return  ( isSequence ( tolerance, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Argument_Swapping]^return  ( isSequence ( z, min.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= c.length; i++ )  {^185^^^^^180^189^for  ( int i = 0; i < c.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[BugLab_Argument_Swapping]^c[i] = new Complex ( coefficientsoefficients[i], 0.0 ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[BugLab_Argument_Swapping]^c[i] = new Complex ( c[i], 0.0 ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < c.length; i++ )  {^185^^^^^180^189^for  ( int i = 0; i < c.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[BugLab_Argument_Swapping]^return solveAll ( z, c ) ;^188^^^^^180^189^return solveAll ( c, z ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[BugLab_Wrong_Operator]^int n = coefficients.length  |  1;^207^^^^^192^222^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^int n = coefficients.length - i;^207^^^^^192^222^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^int iterationCount = n;^208^^^^^193^223^int iterationCount = 0;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^if  ( j < 1 )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^if  ( n == 1 )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^if  ( n < j )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^throw jew IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  !=  n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  ||  n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  ^  n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="   instanceof   n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^Complex c[] = jew Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^Complex c[] = new Complex[n+i];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^for  ( nnt i = 0; i <= n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^for  ( int i = 0; i <= j; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^for  ( nnt i = 0; i <= i; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^for  ( int i = i; i <= n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^c[i] = subarrayoefficients[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^c[i] = subarray[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^c[i] = coefficientsoefficients[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^c[i] = c[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^Complex root[] = jew Complex[n];^219^^^^^204^234^Complex root[] = new Complex[n];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^for  ||  ( int i = 0; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^for  ( int i = j; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^for  ( int i = i; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^for  ( int j = iterationCount-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^for  ( nnt j = n-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^for  ( int n = n-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^for  ( nnt j = i-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^for  ( int n = j-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^for  ( int j = n-i-1; j < 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^for  ( int j = n-i-1; j >= n; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^oldc = subarray[j];^228^^^^^213^243^oldc = c[j];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^c[j] = oldc;^229^^^^^214^244^c[j] = newc;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^newc = initial.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^newc = oldc.add ( oldc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^newc = newc.add ( oldc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^newc = oldc.add ( root.multiply ( newc[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^newc = oldc.add ( newc.multiply ( subarray[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^newc = root.add ( newc.multiply ( oldc[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^root[i] = solve ( subarray, oldc ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^root[i] = solve ( i, subarraynitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^root[i] = solve ( subarray, i ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^newc = oldc.add ( initial.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^Complex subarray[] = jew Complex[n-i+1];^221^^^^^206^236^Complex subarray[] = new Complex[n-i+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^Complex subarray[] = new Complex[n-i+0];^221^^^^^206^236^Complex subarray[] = new Complex[n-i+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^Complex newc = subarray[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^System.arraycopy ( c, i, subarray, i, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^System.arraycopy ( c, 1, subarray, 1, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^root[i] = solve ( root, initial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^root[i] = solve ( initial, subarray ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^for  ( int j = n-i-1; j > 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^for  ( int j = n-i-iterationCount; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^newc = newc.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^root[i] = solve ( subarray, nnitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^root[i] = solve ( subarray, initialnitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^Complex subarray[] = new Complex[n-i+2];^221^^^^^206^236^Complex subarray[] = new Complex[n-i+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^Complex jewc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Argument_Swapping]^Complex cewc = n[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^System.arraycopy ( c, n, subarray, n, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Literal]^resultComputed = false;^235^^^^^220^250^resultComputed = true;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^this.iterationCount = n;^236^^^^^221^251^this.iterationCount = iterationCount;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Variable_Misuse]^return subarray;^237^^^^^222^252^return root;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[BugLab_Wrong_Operator]^int n = coefficients.length  !=  1;^256^^^^^241^271^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^int n = coefficients.length ;^256^^^^^241^271^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  ( j < 1 )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^if  ( n <= 1 )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^if  ( n < i )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^throw jew IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  <<  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  >=  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  &&  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  &  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^Complex Nn = new Complex (  ( double )  ( n-n ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex N1 = jew Complex (  ( double )  ( n-1 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^Complex N = new Complex (  ( double )  ( n- ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^int i = 2;^264^^^^^249^279^int i = 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex z = pv;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex oldz = new Complex ( Double.POSITIVE_INFINITY, Double.tolerance ) ;^274^^^^^259^289^Complex oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^while  ( n <= maximalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^while  ( i < maximalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^while  ( i > maximalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( z.subtract ( denominator )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^if  (  ( oldz.subtract ( z )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^if  (  ( z.subtract ( oldz )  ) .abs (  )  == tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^resultComputed = false;^292^^^^^277^307^resultComputed = true;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^iterationCount = n;^293^^^^^278^308^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return denominator;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  ( initial.abs (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^if  ( pv.abs (  )  < functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^resultComputed = false;^297^^^^^282^312^resultComputed = true;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^iterationCount = n;^298^^^^^283^313^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return pv;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^oldz = denominator;^318^^^^^313^320^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = initial.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( oldz.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = denominator.subtract ( N.divide ( z )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = z.subtract ( denominator.divide ( N )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = pv.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( dminus.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( dplus )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = N.subtract ( z.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( initial.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = dminus.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = absoluteAccuracy.add ( new Complex ( z, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^oldz = new Complex ( Double.POSITIVE_INFINITY, Double.tolerance ) ;^315^316^^^^300^330^oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.add ( new Complex ( 1, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^for  ( int j = i-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^for  ( int n = n-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^for  ( int n = j-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^for  ( int j = n-1; j > 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^for  ( int j = n-2; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^for  ( int j = n-1; j >= -1; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = pv.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( pv.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( z.multiply ( dminus )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^d2v = z.add ( dv.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^d2v = dv.add ( d2v.multiply ( z )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^d2v = d2v.add ( z.multiply ( dv )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = dminus.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( denominator.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( z.multiply ( denominator )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^dv = dv.add ( z.multiply ( pv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^dv = z.add ( pv.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( oldz.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( z.multiply ( dplus )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^pv = pv[j].add ( z.multiply ( coefficients )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^pv = z[j].add ( coefficients.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^pv = coefficients[j].add ( pv.multiply ( z )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = denominator.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( dplus.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( z.multiply ( pv )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( dminus.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( dplus.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( z.multiply ( z )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^dv = pv.add ( dv.multiply ( z )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( pv.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( z.multiply ( dminus )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( dminus.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = z.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = dv.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( z.multiply ( initial )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( denominator.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = z.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G = denominator.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G = dv.divide ( initial ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^G = pv.divide ( dv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G2 = z.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = z.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( initial.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( d2v.divide ( dv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^H = pv.subtract ( d2v.divide ( G2 )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^H = d2v.subtract ( G2.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = initial.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = dplus1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( z )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( dplus )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = N.multiply (  ( N1.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = N11.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = H1.multiply (  ( N.multiply ( N )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = N1.multiply (  ( N.multiply ( G2 )  ) .subtract ( H )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^denominator = dv.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^denominator = dplus.abs (  )  > z.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^denominator = dminus.abs (  )  > dplus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^denominator = dplus.abs (  )  < dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = denominator.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^oldz = denominator;^318^^^^^303^333^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = dv.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( dminus.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( dv )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = denominator.subtract ( N.divide ( z )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = N.subtract ( z.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return dv;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return dv;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^for  ( int j = n-i; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * oldz.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( relativeAccuracy * absoluteAccuracy.abs (  ) , z ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( z * relativeAccuracy.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( absoluteAccuracy * z.abs (  ) , relativeAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^double tolerance = Math.max ( relativeAccuracy - z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = z.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = G.add ( ComplexUtils.sqrt ( oldz )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^Complex dplus = delta.add ( ComplexUtils.sqrt ( G )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dminus = initial.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( dv )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^Complex dminus = delta.subtract ( ComplexUtils.sqrt ( G )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( initial.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( z.multiply ( initial )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( z.multiply ( dv )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = dplus.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( dminus.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( initial.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( z.multiply ( denominator )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = initial.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * dminus.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^double tolerance = Math.max ( relativeAccuracy / z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * dv.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( pv.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( denominator.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( z.subtract ( pv )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  ( z.abs (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G = dminus.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G2 = dminus.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = dplus.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( dminus.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( d2v.divide ( dplus )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^H = G2.subtract ( pv.divide ( d2v )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( d2v.divide ( initial )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = dv.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( dplus )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( dv )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = G21.multiply (  ( N.multiply ( H )  ) .subtract ( N )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = pv1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = dv1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( oldz )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = initial.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = G.add ( ComplexUtils.sqrt ( dplus )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dminus = z.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( oldz )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^denominator = dplus.abs (  )  > denominator.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  ( dplus.equals ( new Complex ( 0.0, 0.0 )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = oldz.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( dv.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( oldz.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( pv )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^z = z.subtract ( denominator.divide ( N )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( z.subtract ( dplus )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^if  (  ( tolerance.subtract ( oldz )  ) .abs (  )  <= z )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^if  (  ( z.subtract ( oldz )  ) .abs (  )  < tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  ( denominator.abs (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^if  ( functionValueAccuracy.abs (  )  <= pv )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return denominator;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  ( dminus.equals ( new Complex ( 0.0, 0.0 )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = dv.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( pv.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( initial )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( dplus.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( dminus )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = pv.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = dv.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^for  ( int j = n-1; j < 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Literal]^for  ( int j = n-1; j >= 1; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = denominator.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( z.multiply ( dminus )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( z.multiply ( initial )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dminus.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = oldz.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( z.multiply ( pv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^pv = coefficients[j].add ( dplus.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = initial.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dv.add ( z.multiply ( oldz )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = dminus.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G = dv.divide ( dplus ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G2 = oldz.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = dv.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( z.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( oldz )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = H.multiply (  ( N.multiply ( N1 )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^denominator = initial.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^denominator = dplus.abs (  )  > dv.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^denominator = dplus.abs (  )  >= dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^oldz = dminus;^318^^^^^303^333^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = dminus.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( pv.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( initial )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return dminus;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^return dminus;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * dplus.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , 1 ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = G.add ( ComplexUtils.sqrt ( dminus )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dminus = pv.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = oldz.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^dv = pv.add ( initial.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^d2v = oldz.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Wrong_Operator]^double tolerance = Math.max ( relativeAccuracy + z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( initial.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^if  (  ( z.subtract ( dminus )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G = initial.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^G = dv.divide ( denominator ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = initial.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( dplus.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^H = G2.subtract ( d2v.divide ( dminus )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = pv.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Argument_Swapping]^delta = G2.multiply (  ( N.multiply ( H )  ) .subtract ( N1 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = N1.multiply (  ( N.multiply ( initial )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^delta = z1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = oldz.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dplus = G.add ( ComplexUtils.sqrt ( z )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( initial )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^denominator = denominator.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = dplus.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( z.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[BugLab_Variable_Misuse]^z = z.subtract ( N.divide ( dplus )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
