[BugLab_Variable_Misuse]^setWindowSize ( windowSize ) ;^55^^^^^52^56^setWindowSize ( window ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[BugLab_Variable_Misuse]^return window;^63^^^^^62^64^return windowSize;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getWindowSize [RETURN_TYPE] int   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[BugLab_Argument_Swapping]^System.arraycopy ( copiedArray.getElements (  ) , 0, eDA,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[BugLab_Wrong_Literal]^System.arraycopy ( eDA.getElements (  ) , windowSize, copiedArray,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[BugLab_Variable_Misuse]^return eDA.getElement ( windowSize ) ;^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Argument_Swapping]^return index.getElement ( eDA ) ;^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Variable_Misuse]^if  ( window != INFINITE_WINDOW )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Argument_Swapping]^if  ( INFINITE_WINDOW != windowSize )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Wrong_Operator]^if  ( windowSize < INFINITE_WINDOW )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Variable_Misuse]^if  ( getN (  )  == window )  {^100^^^^^98^108^if  ( getN (  )  == windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Wrong_Operator]^if  ( getN (  )  != windowSize )  {^100^^^^^98^108^if  ( getN (  )  == windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Variable_Misuse]^} else if  ( getN (  )  < window )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Wrong_Operator]^} else if  ( getN (  )  <= windowSize )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Wrong_Operator]^} else if  ( getN (  )  == windowSize )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[BugLab_Variable_Misuse]^if  ( window < 1 )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^if  ( windowSize <= 1 )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Variable_Misuse]^if  ( window != INFINITE_WINDOW )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Argument_Swapping]^if  ( INFINITE_WINDOW != windowSize )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^if  ( windowSize == INFINITE_WINDOW )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^if  ( windowSize <= INFINITE_WINDOW )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Variable_Misuse]^this.windowSize = window;^127^^^^^120^135^this.windowSize = windowSize;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Argument_Swapping]^if  ( eDA != INFINITE_WINDOW && windowSize < windowSize.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Argument_Swapping]^if  ( windowSize != eDA && windowSize < INFINITE_WINDOW.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^if  ( windowSize != INFINITE_WINDOW || windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^if  ( windowSize >= INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^if  ( windowSize != INFINITE_WINDOW && windowSize <= eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Variable_Misuse]^eDA.discardFrontElements ( eDA.getNumElements (  )  - window ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Argument_Swapping]^eDA.discardFrontElements ( windowSize.getNumElements (  )  - eDA ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^eDA.discardFrontElements ( eDA.getNumElements (  )   <=  windowSize ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Wrong_Operator]^eDA.discardFrontElements ( eDA.getNumElements (  )   &  windowSize ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[BugLab_Argument_Swapping]^return eDA.evaluate ( stat.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
