[buglab_swap_variables]^System.arraycopy ( copiedArray.getElements (  ) , 0, eDA,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[buglab_swap_variables]^System.arraycopy ( eDA.getElements (  ) , 0,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[buglab_swap_variables]^return index.getElement ( eDA ) ;^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[buglab_swap_variables]^if  ( INFINITE_WINDOW != windowSize )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[buglab_swap_variables]^if  ( INFINITE_WINDOW != windowSize )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[buglab_swap_variables]^if  ( eDA != INFINITE_WINDOW && windowSize < windowSize.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[buglab_swap_variables]^if  ( INFINITE_WINDOW != windowSize && windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[buglab_swap_variables]^eDA.discardFrontElements ( windowSize.getNumElements (  )  - eDA ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[buglab_swap_variables]^return eDA.evaluate ( stat.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[buglab_swap_variables]^return stat.evaluate ( eDA.getValues (  ) .start (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
