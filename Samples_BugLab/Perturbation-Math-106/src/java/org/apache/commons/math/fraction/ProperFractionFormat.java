[BugLab_Variable_Misuse]^this ( wholeFormat,  ( NumberFormat ) format.clone (  ) ,  ( NumberFormat ) format.clone (  )  ) ;^58^^^^^57^59^this ( format,  ( NumberFormat ) format.clone (  ) ,  ( NumberFormat ) format.clone (  )  ) ;^[CLASS] ProperFractionFormat  [METHOD] <init> [RETURN_TYPE] NumberFormat)   NumberFormat format [VARIABLES] long  serialVersionUID  NumberFormat  format  wholeFormat  boolean  
[BugLab_Variable_Misuse]^super ( wholeFormat, denominatorFormat ) ;^72^^^^^68^74^super ( numeratorFormat, denominatorFormat ) ;^[CLASS] ProperFractionFormat  [METHOD] <init> [RETURN_TYPE] NumberFormat)   NumberFormat wholeFormat NumberFormat numeratorFormat NumberFormat denominatorFormat [VARIABLES] long  serialVersionUID  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  boolean  
[BugLab_Variable_Misuse]^super ( numeratorFormat, wholeFormat ) ;^72^^^^^68^74^super ( numeratorFormat, denominatorFormat ) ;^[CLASS] ProperFractionFormat  [METHOD] <init> [RETURN_TYPE] NumberFormat)   NumberFormat wholeFormat NumberFormat numeratorFormat NumberFormat denominatorFormat [VARIABLES] long  serialVersionUID  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  boolean  
[BugLab_Argument_Swapping]^super ( denominatorFormat, numeratorFormat ) ;^72^^^^^68^74^super ( numeratorFormat, denominatorFormat ) ;^[CLASS] ProperFractionFormat  [METHOD] <init> [RETURN_TYPE] NumberFormat)   NumberFormat wholeFormat NumberFormat numeratorFormat NumberFormat denominatorFormat [VARIABLES] long  serialVersionUID  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  boolean  
[BugLab_Variable_Misuse]^setWholeFormat ( numeratorFormat ) ;^73^^^^^68^74^setWholeFormat ( wholeFormat ) ;^[CLASS] ProperFractionFormat  [METHOD] <init> [RETURN_TYPE] NumberFormat)   NumberFormat wholeFormat NumberFormat numeratorFormat NumberFormat denominatorFormat [VARIABLES] long  serialVersionUID  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  boolean  
[BugLab_Wrong_Literal]^pos.setBeginIndex ( whole ) ;^89^^^^^86^108^pos.setBeginIndex ( 0 ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Wrong_Literal]^pos.setEndIndex ( den ) ;^90^^^^^86^108^pos.setEndIndex ( 0 ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^int whole = den / den;^94^^^^^86^108^int whole = num / den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^int whole = num / num;^94^^^^^86^108^int whole = num / den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^int whole = den / num;^94^^^^^86^108^int whole = num / den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Wrong_Operator]^int whole = num + den;^94^^^^^86^108^int whole = num / den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^num = whole % den;^95^^^^^86^108^num = num % den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^num = num % whole;^95^^^^^86^108^num = num % den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^num = den % num;^95^^^^^86^108^num = num % den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Wrong_Operator]^num = num  >  den;^95^^^^^86^108^num = num % den;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^if  ( num != 0 )  {^97^^^^^86^108^if  ( whole != 0 )  {^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Wrong_Operator]^if  ( whole == 0 )  {^97^^^^^86^108^if  ( whole != 0 )  {^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^num = Math.abs ( whole ) ;^100^^^^^86^108^num = Math.abs ( num ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^getWholeFormat (  ) .format ( num, toAppendTo, pos ) ;^98^^^^^86^108^getWholeFormat (  ) .format ( whole, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getWholeFormat (  ) .format ( pos, toAppendTo, whole ) ;^98^^^^^86^108^getWholeFormat (  ) .format ( whole, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getWholeFormat (  ) .format ( whole, pos, toAppendTo ) ;^98^^^^^86^108^getWholeFormat (  ) .format ( whole, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Variable_Misuse]^getNumeratorFormat (  ) .format ( whole, toAppendTo, pos ) ;^102^^^^^86^108^getNumeratorFormat (  ) .format ( num, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getNumeratorFormat (  ) .format ( pos, toAppendTo, num ) ;^102^^^^^86^108^getNumeratorFormat (  ) .format ( num, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getNumeratorFormat (  ) .format ( toAppendTo, num, pos ) ;^102^^^^^86^108^getNumeratorFormat (  ) .format ( num, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getNumeratorFormat (  ) .format ( num, pos, toAppendTo ) ;^102^^^^^86^108^getNumeratorFormat (  ) .format ( num, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getDenominatorFormat (  ) .format ( toAppendTo, den, pos ) ;^104^105^^^^86^108^getDenominatorFormat (  ) .format ( den, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Argument_Swapping]^getDenominatorFormat (  ) .format ( pos, toAppendTo, den ) ;^104^105^^^^86^108^getDenominatorFormat (  ) .format ( den, toAppendTo, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] format [RETURN_TYPE] StringBuffer   Fraction fraction StringBuffer toAppendTo FieldPosition pos [VARIABLES] StringBuffer  toAppendTo  boolean  Fraction  fraction  FieldPosition  pos  long  serialVersionUID  int  den  num  whole  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  
[BugLab_Wrong_Operator]^if  ( ret == null )  {^133^^^^^118^148^if  ( ret != null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^parseAndIgnoreWhitespace ( pos, source ) ;^140^^^^^125^155^parseAndIgnoreWhitespace ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^Number whole = getWholeFormat (  ) .parse ( pos, source ) ;^143^^^^^128^158^Number whole = getWholeFormat (  ) .parse ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^if  ( num == null )  {^144^^^^^129^159^if  ( whole == null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^if  ( whole != null )  {^144^^^^^129^159^if  ( whole == null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( w ) ;^148^^^^^133^163^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( startIndex ) ;^148^^^^^133^163^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^parseAndIgnoreWhitespace ( pos, source ) ;^153^^^^^138^168^parseAndIgnoreWhitespace ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^Number num = getNumeratorFormat (  ) .parse ( pos, source ) ;^156^^^^^141^171^Number num = getNumeratorFormat (  ) .parse ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^if  ( whole == null )  {^157^^^^^142^172^if  ( num == null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^if  ( num != null )  {^157^^^^^142^172^if  ( num == null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( w ) ;^161^^^^^146^176^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^if  ( whole.intValue (  )  < 0 )  {^165^^^^^150^180^if  ( num.intValue (  )  < 0 )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^if  ( num.intValue (  )  == 0 )  {^165^^^^^150^180^if  ( num.intValue (  )  < 0 )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Literal]^if  ( num.intValue (  )  < startIndex )  {^165^^^^^150^180^if  ( num.intValue (  )  < 0 )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( startIndex ) ;^167^^^^^152^182^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( w ) ;^167^^^^^152^182^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^char c = parseNextCharacter ( pos, source ) ;^173^^^^^158^188^char c = parseNextCharacter ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^return new Fraction ( whole.intValue (  ) , 1 ) ;^178^^^^^163^193^return new Fraction ( num.intValue (  ) , 1 ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Literal]^return new Fraction ( num.intValue (  ) , 2 ) ;^178^^^^^163^193^return new Fraction ( num.intValue (  ) , 1 ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( startIndex ) ;^186^^^^^171^201^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setErrorIndex ( n ) ;^187^^^^^172^202^pos.setErrorIndex ( startIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^parseAndIgnoreWhitespace ( pos, source ) ;^192^^^^^177^207^parseAndIgnoreWhitespace ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^Number den = getDenominatorFormat (  ) .parse ( pos, source ) ;^195^^^^^180^210^Number den = getDenominatorFormat (  ) .parse ( source, pos ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^if  ( whole == null )  {^196^^^^^181^211^if  ( den == null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^if  ( den != null )  {^196^^^^^181^211^if  ( den == null )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( w ) ;^200^^^^^185^215^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^if  ( whole.intValue (  )  < 0 )  {^204^^^^^189^219^if  ( den.intValue (  )  < 0 )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^if  ( den.intValue (  )  <= 0 )  {^204^^^^^189^219^if  ( den.intValue (  )  < 0 )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Literal]^if  ( den.intValue (  )  < w )  {^204^^^^^189^219^if  ( den.intValue (  )  < 0 )  {^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( w ) ;^206^^^^^191^221^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^pos.setIndex ( startIndex ) ;^206^^^^^191^221^pos.setIndex ( initialIndex ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^int w = num.intValue (  ) ;^210^^^^^195^225^int w = whole.intValue (  ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^int n = whole.intValue (  ) ;^211^^^^^196^226^int n = num.intValue (  ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^int d = whole.intValue (  ) ;^212^^^^^197^227^int d = den.intValue (  ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^return new Fraction (  (  ( Math.abs ( startIndex )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^return new Fraction (  (  ( Math.abs ( w )  * startIndex )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^return startIndexew Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^return new Fraction (  (  ( Math.abs ( d )  * w )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^return dew Fraction (  (  ( Math.abs ( w )  * n )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^return + new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^return new Fraction (  <<  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^return new Fraction (  (  ( Math.abs ( w )  - d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Argument_Swapping]^return wew Fraction (  (  ( Math.abs ( n )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^return / new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Variable_Misuse]^return new Fraction (  (  ( Math.abs ( n )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^213^^^^^198^228^return new Fraction (  (  ( Math.abs ( w )  * d )  + n )  * MathUtils.sign ( w ) , d ) ;^[CLASS] ProperFractionFormat  [METHOD] parse [RETURN_TYPE] Fraction   String source ParsePosition pos [VARIABLES] boolean  Number  den  num  whole  char  c  Fraction  ret  String  source  long  serialVersionUID  int  d  initialIndex  n  startIndex  w  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  ParsePosition  pos  
[BugLab_Wrong_Operator]^if  ( format != null )  {^223^^^^^222^228^if  ( format == null )  {^[CLASS] ProperFractionFormat  [METHOD] setWholeFormat [RETURN_TYPE] void   NumberFormat format [VARIABLES] long  serialVersionUID  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  boolean  
[BugLab_Variable_Misuse]^this.wholeFormat = wholeFormat;^227^^^^^222^228^this.wholeFormat = format;^[CLASS] ProperFractionFormat  [METHOD] setWholeFormat [RETURN_TYPE] void   NumberFormat format [VARIABLES] long  serialVersionUID  NumberFormat  denominatorFormat  format  numeratorFormat  wholeFormat  boolean  
