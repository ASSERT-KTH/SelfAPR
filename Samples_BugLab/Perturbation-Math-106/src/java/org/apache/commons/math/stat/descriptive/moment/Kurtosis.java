[BugLab_Wrong_Literal]^incMoment = false;^60^^^^^59^62^incMoment = true;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] Kurtosis()   [VARIABLES] FourthMoment  moment  boolean  incMoment  long  serialVersionUID  
[BugLab_Wrong_Literal]^incMoment = true;^70^^^^^69^72^incMoment = false;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] FourthMoment)   FourthMoment m4 [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.moment = moment;^71^^^^^69^72^this.moment = m4;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] FourthMoment)   FourthMoment m4 [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( moment.getN (  )  >= 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.getN (  )  > 4 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^if  ( moment.n <= 3 && variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^if  ( moment.n < 3 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^if  ( moment.n <= 3 || variance > 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.n <= 3 || variance < 00E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.n <= 3 || variance < 20E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.n <= 3 || variance < 10E-0 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  * (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  &  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n +  ( n + 1 )  + moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis + = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n  &&  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis - = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 - moment.m2 - moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 - moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  ^  1 )  )  / (  ( n  ^  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis / = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  ==  1 )  )  / (  ( n  ==  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  >=  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^kurtosis = ( n *  ( n  )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 -  * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n - )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4  * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  - (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  !=  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n  !=  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 / moment.m2 / moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  >=  1 )  )  / (  ( n  >=  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  ||  1 )  )  / (  ( n  ||  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m1 * moment.m1 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -1 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^double variance = moment.m2 +  ( double )   ( moment.n - 1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^double variance = moment.m2 /  ( double )   ( moment.n  &  1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^double variance = moment.m2 /  ( double )   ( moment.n  ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^if  ( moment.n <= 3 || variance <= 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.n <= 2 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.n <= 3 || variance < 10E-30 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^if  ( moment.n <= 4 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n /  ( n + 1 )  / moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n  <  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 + moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  !=  1 )  )  / (  ( n  !=  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  >>  1 )  )  / (  ( n  >>  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  >>  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  ||  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m3 * moment.m3 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -3 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  + (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n -  ( n + 1 )  - moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n  >>  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  <<  1 )  )  / (  ( n  <<  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  &  1 )  )  / (  ( n  &  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  <  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Literal]^kurtosis = ( n *  ( n + 3 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 3 )  )  / (  ( n - 3 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^double variance = moment.m2 -  ( double )   ( moment.n - 1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Wrong_Operator]^double variance = moment.m2 /  ( double )   ( moment.n  >=  1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Variable_Misuse]^if  ( m4.getN (  )  > 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Variable_Misuse]^return variance;^103^^^^^89^104^return kurtosis;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[BugLab_Variable_Misuse]^return m4.getN (  ) ;^122^^^^^121^123^return moment.getN (  ) ;^[CLASS] Kurtosis  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( test ( values, begin, length )  || length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^if  ( test ( values, begin, length )  && length < 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^if  ( test ( values, begin, length )  && length > i )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^if  ( test ( values, begin, length )  && length > 4 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^for  ( int i = length; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^for  ( int i = begin; i < begin + begin; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^for  ( beginnt i = i; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^for  &  ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^for  !=  ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^accum3 += Math.pow (  ( mean[i] - values ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]  &  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^accum3 += Math.pow (  ( values[i] - termTwo ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]  |  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]   instanceof   mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^accum3 /= Math.pow ( termTwo, 4.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^kurt =  ( stdDev * accum3 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^kurt =  ( coefficientOne * n0 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^kurt =  ( coefficientOne * accum3 )  - stdDev;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^kurt =  ( termTwo * accum3 )  - coefficientOne;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^kurt =  ( coefficientOne * termTwo )  - accum3;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^kurt =  ( coefficientOne * accum3 )   >  termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^kurt =  ( coefficientOne - accum3 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^double n0 = i;^164^^^^^149^179^double n0 = length;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^double coefficientOne = ( stdDev *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  +  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double + coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0   instanceof   1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double / coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0  !=  1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0  >  2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0  &  3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double coefficientOne = ( n0 *  ( n0  )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - i )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0  )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^double termTwo = (  ( 3 * Math.pow ( stdDev - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  +  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double - termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0  ==  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double + termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0  <  2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0  ||  3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( i * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - i )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - i, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, length.0 )  )  /  (  ( n0 - length )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^variance.incrementAll ( values, length, length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^variance.incrementAll ( values, length, begin ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]  &&  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^(  ( 3 * Math.pow ( stdDev - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^(  ( 3 * Math.pow ( n0  >  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^(  ( 3 * Math.pow ( n0 , 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^for  ( int i = begin; i > begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^for  <<  ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^accum3 += Math.pow (  ( values[i] - n0 ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]  !=  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]  <  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^kurt =  ( coefficientOne * termTwo )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^kurt =  ( accum3 * coefficientOne )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^kurt =  ( coefficientOne * accum3 )   ^  termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^double coefficientOne = ( termTwo *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0  >  1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double - coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0  ^  1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0  &&  2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0  >  3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double coefficientOne = ( n0 *  ( n0 + i )  )  /  (  ( n0 - i )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 -  )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  *  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0   instanceof   1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double / termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0  >  2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0  &&  3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0  )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - begin, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0  )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^double termTwo = (  ( length * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - length )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^if  ( test ( values, length, length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^if  ( test ( values, begin, i )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^if  ( test ( begin, values, length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^if  ( test ( values, length, begin )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^variance.incrementAll ( values, begin, i ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Argument_Swapping]^variance.incrementAll ( length, begin, values ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^accum3 += Math.pow (  ( values[i]  <=  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^accum3 /= Math.pow ( mean, 4.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Operator]^(  ( 3 * Math.pow ( n0  ||  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Wrong_Literal]^(  ( 3 * Math.pow ( n0 - begin, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[BugLab_Variable_Misuse]^return termTwo;^174^^^^^159^189^return kurt;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
