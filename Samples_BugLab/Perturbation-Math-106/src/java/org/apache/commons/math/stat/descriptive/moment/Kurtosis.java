[buglab_swap_variables]^for  ( int i = length; i < begin + begin; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^for  ( beginnt i = i; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^accum3 += Math.pow (  ( mean[i] - values ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^kurt =  ( termTwo * accum3 )  - coefficientOne;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^kurt =  ( coefficientOne * termTwo )  - accum3;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^variance.incrementAll ( begin, values, length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^variance.incrementAll (  begin, length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^variance.incrementAll ( values, length, begin ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^variance.incrementAll ( values,  length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^variance.incrementAll ( values, begin ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^kurt =  ( accum3 * coefficientOne )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^if  ( test ( begin, values, length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^if  ( test (  begin, length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^if  ( test ( values, length, begin )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^if  ( test ( values,  length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[buglab_swap_variables]^if  ( test ( values, begin )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
