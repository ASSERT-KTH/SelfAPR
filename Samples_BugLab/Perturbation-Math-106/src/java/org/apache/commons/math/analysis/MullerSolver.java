[BugLab_Wrong_Literal]^super ( f, , 1E-6 ) ;^45^^^^^44^46^super ( f, 100, 1E-6 ) ;^[CLASS] MullerSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[BugLab_Variable_Misuse]^if  ( f.value ( max )  == 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^if  ( min.value ( f )  == 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Wrong_Operator]^if  ( f.value ( min )  != 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^if  ( f.value ( min )  == 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^if  ( max.value ( f )  == 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Wrong_Operator]^if  ( f.value ( max )  != 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^if  ( f.value ( min )  == 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^if  ( initial.value ( f )  == 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Wrong_Operator]^if  ( f.value ( initial )  != 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifyBracketing ( initial, max, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifyBracketing ( min, initial, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^verifyBracketing ( f, max, min ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^verifyBracketing ( max, min, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^verifyBracketing ( min, f, max ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifySequence ( initial, initial, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifySequence ( min, max, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifySequence ( min, initial, min ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^verifySequence ( max, initial, min ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^verifySequence ( initial, min, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^verifySequence ( min, max, initial ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^if  ( isBracketing ( min, min, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^if  ( isBracketing ( initial, min, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^return solve ( min, max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^return solve ( initial, min ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^return solve ( max, initial ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^return solve ( max, initial ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^return solve ( min, max ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^return solve ( initial, min ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^if  ( isBracketing ( max, initial, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^if  ( isBracketing ( min, max, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^if  ( isBracketing ( min, f, initial )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^x0 = x1; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = min; y0 = f.value ( x1 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = min; y0 = 0.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x0 = min; y0 = x0.value ( f ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = min; y0 = f.value ( x2 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = y0; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = max; y2 = f.value ( xm ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x2 = max; y2 = x2.value ( f ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = max; y2 = f.value ( x0 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( ym + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( x0 + xplus ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x1 = 0.5 *  ( x2 + x0 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 + = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 = 0.5 *  ( x0   instanceof   x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( y ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = x1.value ( f ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x0 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = null.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( x1 == 0.0 )  { return min; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( y0 == 0.0 )  { return xminus; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^if  ( min == 0.0 )  { return y0; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( y0 != 0.0 )  { return min; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( y0 == 0.0 )  { return x1; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( xplus == 0.0 )  { return max; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( y2 == 0.0 )  { return x1; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^if  ( max == 0.0 )  { return y2; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( y2 < 0.0 )  { return max; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^verifyBracketing ( min, xm, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^verifyBracketing ( max, min, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^verifyBracketing ( min, f, max ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^verifyBracketing ( f, max, min ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^while  ( i > maximalIterationCount )  {^125^^^^^110^140^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^while  ( i < maximalIterationCount )  {^125^^^^^110^140^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( xm - oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - xminus )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - oldx )  <= xplus )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( tolerance - oldx )  <= x )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( x - tolerance )  <= oldx )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x - oldx )  < tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  &  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( x1, i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y )  < functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( xminus, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( xminus )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x1 )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  <= 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  |  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x1; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = y2;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x1; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = xplus;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x0; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = xm;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = x0;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( xm + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( x0 + xm ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x1 = 0.5 *  ( x2 + x0 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 / = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 = 0.5 *  ( x0  ==  x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( xplus ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y1 = x1.value ( f ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( y1 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( x0 + y ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^double xm = 0.5 *  ( x2 + x0 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double + xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double xm = 0.5 *  ( x0  ||  x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = f.value ( xminus ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^double ym = xm.value ( f ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( x0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( xminus )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( xm ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x < xm ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x < x1 ? x2 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x0 = x0 < x1 ? x : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x0 = x < x0 ? x1 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x0 = x > x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = xm < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x2 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x1 ? xm : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x1 ? y0 : xm;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y0 = y1 < x1 ? y0 : x;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y0 = x < y0 ? x1 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y0 = x < x1 ? y1 : y0;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^y0 = x > x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xminus > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > xm ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > x1 ? y1 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x2 = x1 > x ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x2 = x2 > x1 ? x : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x2 = x >= x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = xminus > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > ym ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x1 ? x2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x1 ? y2 : y0;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y2 = y1 > x1 ? y2 : x;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y2 = x1 > x ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y2 = y2 > x1 ? x : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y2 = x > y1 ? y2 : x1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^y2 = x >= x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = xm; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = x; x11 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^oldx = x2;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( xminus )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x1 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^if  ( MathUtils.sign ( ym )  + MathUtils.sign ( y0 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  > 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  >>  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x1; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = x0;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = y0; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = x2;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( x2 - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( y1 - x1 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( y1 - y0 )  /  ( y1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( y1 - y0 )  /  ( x1 - xminus ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d01 =  ( x1 - y0 )  /  ( y1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d01 =  ( y1 - x1 )  /  ( y0 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d01 =  ( y1 - y0 )  /  ( x0 - x1 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d01 =  ( y1 - y0 )  -  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d01 =  ( y1  <=  y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d01 =  ( y1 - y0 )  /  ( x1  |  x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d12 =  ( xminus - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d12 =  ( y2 - xm )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d12 =  ( y2 - y1 )  /  ( x0 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d12 =  ( y2 - y1 )  /  ( x2 - xm ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d12 =  ( x2 - y1 )  /  ( y2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d12 =  ( y2 - x1 )  /  ( x2 - y1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d12 =  ( y2 - x2 )  /  ( y1 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d12 =  ( x1 - y1 )  /  ( x2 - y2 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d12 =  ( y2 - y1 )  +  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d12 =  ( y2  <=  y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d12 =  ( y2 - y1 )  /  ( x2  >  x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d012 =  ( xminus - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d012 =  ( d12 - y1 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d012 =  ( d12 - d01 )  /  ( y - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d012 =  ( d12 - d01 )  /  ( x2 - xplus ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d012 =  ( x0 - d01 )  /  ( x2 - d12 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d012 =  ( d12 - x0 )  /  ( x2 - d01 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d012 =  ( d12 - x2 )  /  ( d01 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d012 =  ( d12 - d01 )  /  ( x0 - x2 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d012 =  ( d12 - d01 )  -  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d012 =  ( d12  ||  d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d012 =  ( d12 - d01 )  /  ( x2  >  x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = y0 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = d01 +  ( y - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = d01 +  ( x1 - xm )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = d01 +  ( x1 - x0 )  * y0;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^c1 = d012 +  ( x1 - x0 )  * d01;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^c1 = x1 +  ( d01 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^c1 = d01 +  ( x0 - x1 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^c1 = d01 +  ( x1 - d012 )  * x0;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^c1 = d01 +  >=  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^c1 / = d01 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^c1 = d01 +  ( x1  &&  x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^delta = x1 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^delta = c1 * c1 - 4 * y1 * x2;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^delta = y1 * c1 - 4 * c1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^delta = c1 * c1 - 4 * d012 * y1;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^delta = d012 * c1 - 4 * y1 * c1;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta = c1 * c1  ^  4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta = c1 / c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta / = c1 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta = c1 * c1 - 4 / y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Literal]^delta = c1 * c1  * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = x1 +  ( -2.0 * y1 )  /  ( x2 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( x2 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xplus = delta +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( x1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xplus = y1 +  ( -2.0 * x1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xplus = c1 +  ( -2.0 * y1 )  /  ( x1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xplus = x1 +  ( -2.0 * delta )  /  ( c1 + Math.sqrt ( y1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xplus = x1 +  >=  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xplus = x1 +  ( -2.0 * y1 )  *  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xplus = x1 +  ( -2.0 + y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xminus = xm +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xminus = x1 +  ( -2.0 * xminus )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xminus = x1 +  ( -2.0 * y1 )  /  ( x2 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( xplus )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xminus = delta +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( x1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xminus = x1 +  ( -2.0 * c1 )  /  ( y1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xminus = x1 +  ( -2.0 * y1 )  /  ( delta - Math.sqrt ( c1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xminus = x1 +  &  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xminus = x1 +  ( -2.0 * y1 )  +  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xminus = x1 +  ( -2.0 + y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1  >>  Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( ym, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xm, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xplus, xplus )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xplus, x2 )  ? xplus : x1;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x = isSequence ( xplus, x0, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x = isSequence ( x2, xplus, x0 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x = isSequence ( x0, xminus, x2 )  ? xplus : xplus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y = f.value ( xminus ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y = x.value ( f ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( xplus ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^tolerance = Math.max ( x * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^tolerance = Math.max ( absoluteAccuracy * Math.abs ( x ) , relativeAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^tolerance - = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x < xminus ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x < x1 ? y0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x0 = x1 < x ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x0 = x <= x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x2 < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x1 ? x1 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y0 = x1 < x ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y0 = x < y1 ? y0 : x1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y0 = y0 < x1 ? x : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^y0 = x == x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x2 > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > x0 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > x1 ? xm : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = y1 > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x2 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x1 ? y0 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x1 ? y2 : x1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y2 = x > y2 ? x1 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = xminus; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = x; x01 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^oldx = xm;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x1; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = y;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x2; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( xm + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = 0.5 *  ( x0 + xm ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x1 = 0.5 *  ( x2 + x0 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 - = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 = 0.5 *  ( x0  <  x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( x0 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^y1 = x1.value ( f ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^boolean bisect =  ( x1 < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^boolean bisect =  ( x < xm &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^boolean bisect =  ( x < x1 &&  ( x1 - x2 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x1 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^boolean bisect =  ( x2 < x1 &&  ( x1 - x0 )  > 0.95 *  ( x - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^boolean bisect =  ( x < x0 &&  ( x1 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^boolean bisect =  ( x0 < x1 &&  ( x1 - x )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  && ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 ||  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x > x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  == 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1  ||  x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean / bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2   instanceof   x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2   instanceof   x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x >= x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  < 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2  !=  x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean - bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  >>  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  >>  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x != x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( ym + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( x0 + xminus ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^double xm = 0.5 *  ( x2 + x0 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double - xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double xm = 0.5 *  ( x0  !=  x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = f.value ( xplus ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^double ym = xm.value ( f ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( xminus )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( xminus )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( xm, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, y, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xplus, y1 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y = f.value ( x1 ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^tolerance / = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( xm ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( ym - oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - y )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( oldx - x )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  <=  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( xm, i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( x1, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = f.value ( x2 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( x2 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( xplus ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - x2 )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - oldx )  <= x2 )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  >  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( x2, i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x2 )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( x2, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  > 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  <  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = y0; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = xplus;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = y2; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = y1;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = y1; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = y2;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = xm;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 + = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 = 0.5 *  ( x0  <  x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( x2 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( x1 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( x0 + ym ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double / xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double xm = 0.5 *  ( x0   instanceof   x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = f.value ( x1 ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( x1 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x2 )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = 2.value ( x1 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x2 < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x < x1 ? xminus : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x0 = x == x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x0 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x1 ? y0 : x1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^y0 = x <= x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x1 > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > x2 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > x1 ? x1 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x2 = x > x2 ? x1 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x2 = x == x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x0 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x1 ? y2 : x0;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x0 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  <= 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ||  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = x2;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x2; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm; y2 = x1;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( xminus - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( y1 - x2 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( y1 - y0 )  /  ( xm - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d01 =  ( y1 - y0 )  /  ( x1 - xm ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d01 =  ( x0 - y0 )  /  ( x1 - y1 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d01 =  ( y1 - y0 )  /  ( x1  <=  x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d12 =  ( y2 - y )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d12 =  ( y2 - y1 )  /  ( x2 - x0 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d12 =  ( y2 - y1 )  *  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d12 =  ( y2  <<  y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d12 =  ( y2 - y1 )  /  ( x2  <  x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d012 =  ( d12 - y )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^d012 =  ( d12 - d01 )  /  ( x2 - xm ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^d012 =  ( x2 - d01 )  /  ( d12 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d012 =  ( d12 - d01 )  +  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d012 =  ( d12   instanceof   d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^d012 =  ( d12 - d01 )  /  ( x2  ==  x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = x2 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = d01 +  ( xminus - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = d01 +  ( x1 - y1 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^c1 = d01 +  ( x1 - x0 )  * x2;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^c1 = d01 +  ( d012 - x0 )  * x1;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^c1 = d01 +   instanceof   ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^c1 + = d01 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^c1 = d01 +  ( x1  !=  x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^delta = xm * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^delta = c1 * c1 - 4 * y2 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^delta = c1 * c1 - 4 * y1 * y0;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta = c1 * c1  ==  4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta = c1 + c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta - = c1 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^delta = c1 * c1 - 4 - y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Literal]^delta = c1 * c1 - i * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = xplus +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = x1 +  ( -2.0 * xminus )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = x1 +  ( -2.0 * y1 )  /  ( xm + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( y )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xplus = x1 +  ( -2.0 * c1 )  /  ( y1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xplus = x1 +   instanceof   ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xplus = x1 +  ( -2.0 / y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xplus = x1 +  <  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( xm )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xminus = c1 +  ( -2.0 * y1 )  /  ( x1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^xminus = y1 +  ( -2.0 * x1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xminus = x1 +  >>  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1  <<  Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( y2, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, ym, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xplus, y )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xplus, x2 )  ? xplus : x0;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x = isSequence ( x0, x2, xplus )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^x = isSequence ( x0, xplus, xminus )  ? xplus : x2;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y = f.value ( xm ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( y ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = ym < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x < x1 ? ym : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x1 < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x1 ? x2 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y0 = x < x1 ? y0 : x0;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xm > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = x > y ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x2 > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y2 = x > x1 ? x0 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^y2 = x < x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x1 = x; y21 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^oldx = x1;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x2 = xminus; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = y0; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = xm; y0 = y;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^x1 = 0.5 *  ( x0  >>  x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^return null;^146^^^^^131^161^return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^boolean bisect =  ( x < x1 &&  ( x1 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Argument_Swapping]^boolean bisect =  ( x < x1 &&  ( x1 - x2 )  > 0.95 *  ( x0 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x <= x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  >= 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1  <=  x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  ==  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  ==  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2  >>  x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  !=  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  !=  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x < x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double xm = 0.5 *  ( x0 + x1 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double + xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^double xm = 0.5 *  ( x0  ^  x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = f.value ( x1 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = 2.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x = isSequence ( x0, xplus, x1 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  &&  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^setResult ( xplus, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^double ym = f.value ( x0 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^if  ( MathUtils.sign ( x0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( x2 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[BugLab_Variable_Misuse]^x0 = x; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = min; y0 = f.value ( q ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x0 = min; y0 = x0.value ( f ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = min; y0 = f.value ( tolerance ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = max; y1 = f.value ( q ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x1 = max; y1 = x1.value ( f ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = max; y1 = f.value ( x0 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = 0.5 *  ( q + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = 0.5 *  ( x0 + x ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x2 = 0.5 *  ( x1 + x0 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x2 + = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x2 = 0.5 *  ( x0  &&  x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = x2.value ( f ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( tolerance ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( tolerance == 0.0 )  { return min; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 == 0.0 )  { return tolerance; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( min == 0.0 )  { return y0; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( y0 != 0.0 )  { return min; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 == 0.0 )  { return x; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 == 0.0 )  { return x1; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( tolerance == 0.0 )  { return max; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y1 == 0.0 )  { return y2; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( max == 0.0 )  { return y1; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( y1 != 0.0 )  { return max; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y1 == 0.0 )  { return x0; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y1 == 0.0 )  { return x2; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^verifyBracketing ( y, max, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^verifyBracketing ( min, x0, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^verifyBracketing ( f, max, min ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^verifyBracketing ( min, f, max ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^int i = i;^226^^^^^211^241^int i = 1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( i <= y2imalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i < maximalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i > maximalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( q == x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( x == tolerance || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( x == x1 || x == x1 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^while  ( x1 == x || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^while  ( x == x2 || x == x1 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^while  ( x2 == x1 || x == x )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( x == x1 && x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( x != x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( x == x1 || x != x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x >= 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta < 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( x * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^denominator = Math.sqrt ( delta * B - B ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B  <<  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B + B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( x0 * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( B * B - y ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B  &  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B / B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.abs ( x0 )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.abs ( dplus )  > Math.abs ( x0 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^denominator = Math.abs ( dminus )  > Math.abs ( dplus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.abs ( dplus )  == Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = x + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = B + Math.sqrt ( x0 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double dplus = delta + Math.sqrt ( B ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = x2 - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = B - Math.sqrt ( x1 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double dminus = delta - Math.sqrt ( B ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double dminus = B  &&  Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = B + Math.sqrt ( x ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = B - Math.sqrt ( tolerance ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.abs ( dplus )  > Math.abs ( x )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y1 != 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( denominator <= 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( denominator !=  )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x + Math.random (  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = min + Math.random (  )  *  ( x - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = max + Math.random (  )  *  ( min - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  ||  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x / = min + Math.random (  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  )  *  ( max  &  min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( x == y0 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( x >= x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x0 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * x0 *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * C *  ( x2 - tolerance )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * C *  ( x2 - x1 )  / y1;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = C - 2.0 * x2 *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = x2 - 2.0 * C *  ( x2 - denominator )  / x1;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = x2 - 2.0 * denominator *  ( x2 - x1 )  / C;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2  &  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2 - x1 )  - denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x + = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 - C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2  ==  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( q - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - oldx )  <= x0 )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( oldx - x )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( tolerance - oldx )  <= x )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x - oldx )  < tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  !=  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y )  < functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^q =  ( q - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^q =  ( x2 - x )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^q =  ( x2 - x1 )  /  ( x1 - tolerance ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^q =  ( x1 - x2 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^q =  ( x2 - x0 )  /  ( x1 - x1 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^q =  ( x2 - x1 )  *  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^q =  ( x2  ==  x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^q =  ( x2 - x1 )  /  ( x1  <  x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^A = q *  ( y1 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * tolerance ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^A = y0 *  ( y2 -  ( 1 + q )  * y1 + q * q ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^A = q *  ( y0 -  ( 1 + q )  * y1 + q * y2 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^A = q *  ( y2 -  ( 1 + q )  * y0 + q * y1 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A / = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  &&  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  ( y2  ==   ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A + = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  ( y2 -  ( 1  &&  q )  * y1  &&  q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  ( y2 -  ( 1 + q )  * y1 + q + y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^A = q *  ( y2 -  ( 2 + q )  * y2 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * y2 -  ( 1 + x )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * tolerance -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * x2 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * x0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^B =  ( 2*q + 1 )  * q -  ( 1 + y2 )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y0 + q * q * y1;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^B =  ( 2*q + 1 )  * y2 -  ( 1 + y0 )  *  ( 1 + q )  * y1 + q * q * q;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  &  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2  >>   ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B / =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ||  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B + =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  /  ( 1 + q )  / y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1  &  q )  *  ( 1  &  q )  * y1  &  q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1  ^  q )  *  ( 1  ^  q )  * y1  ^  q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B - =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q + q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^B =  ( *q + 1 )  * y -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^B =  ( 2*q +  )  * y2 -  (  + q )  *  (  + q )  * y + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^B =  ( 2*q  )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^C =  ( 1 + tolerance )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^C =  ( 1 + q )  * x;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^C =  ( 1 + y2 )  * q;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^C / =  ( 1 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^C =  ( 1  &&  q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^C =  ( i + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x0 * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = B * B - 4 * x2 * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = B * B - 4 * A * x;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta = C * B - 4 * A * B;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta = B * B - 4 * C * A;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = B * B  ==  4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = B / B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta + = B * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = B * B - 4 / A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^delta = B * B  * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.abs ( x )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.abs ( dplus )  > Math.abs ( y2 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.abs ( dplus )  >= Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( x0 * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( B * B - x0 ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^denominator = Math.sqrt ( delta * B - B ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B   instanceof   delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B - B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * x *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * C *  ( x2 - x1 )  / y0;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = x2 - 2.0 * x1 *  ( x2 - C )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2  &&  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2 - x1 )  * denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x - = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 / C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2  >=  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = y + Math.random (  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = min + Math.random (  )  *  ( x0 - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = max + Math.random (  )  *  ( min - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  <  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x / = min + Math.random (  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  )  *  ( max  <<  min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y = f.value ( tolerance ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^y = x.value ( f ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( tolerance ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^tolerance = Math.max ( x * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^tolerance = Math.max ( absoluteAccuracy * Math.abs ( x ) , relativeAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^tolerance - = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = x0; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = x1; y0 = q;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = tolerance; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x2; y1 = q;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = x; q2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldx = q;^272^^^^^257^287^oldx = x;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = x1 + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = B + Math.sqrt ( y ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = x1 - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = B - Math.sqrt ( x2 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double dminus = B  &  Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = B + Math.sqrt ( x1 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( y * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( B * B - x ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B  <=  delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y = null.value ( x ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( q ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x0 - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - x0 )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  >>  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( tolerance, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y, i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( y2 == x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 >= 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( delta > 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( y * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( B * B - x1 ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B  ^  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B - B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.abs ( dplus )  > Math.abs ( x1 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.abs ( dplus )  < Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = x2 + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = x - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = B - Math.sqrt ( x0 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double dminus = B  ^  Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y != 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( denominator == 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = min + Math.random (  )  *  ( x1 - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (   instanceof   )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  )  *  ( max  <=  min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^while  ( x == x || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = q - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * x2 *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * C *  ( x2 - x1 )  / x;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = x1 - 2.0 * C *  ( x2 - x2 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x = denominator - 2.0 * C *  ( x2 - x1 )  / x2;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2  >=  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2  ^  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x2 - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - x2 )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - oldx )  <= x1 )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( x - tolerance )  <= oldx )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x - oldx )  == tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x   instanceof   oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^return null;^261^^^^^246^276^return result;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y0, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x0 )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y )  <= 4 )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^q =  ( x - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^q =  ( x2 - y2 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^q =  ( x2 - x1 )  /  ( x1 - y1 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^q =  ( x2 - x1 )  +  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^q =  ( x2  <<  x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^q =  ( x2 - x1 )  /  ( x1  &  x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^A = x *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^A = q *  ( y2 -  ( 1 + q )  * x + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * x0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^A = y1 *  ( y2 -  ( 1 + q )  * q + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^A = q *  ( y1 -  ( 1 + q )  * y2 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  >>  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  ( y2  <   ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^A = q *  ( y2 -  ( 1  >>  q )  * y1  >>  q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^A = q *  ( y2 -  ( i + q )  * yi + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * y2 -  ( 1 + y )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y2 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * x2;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^B =  ( 2*q + 1 )  * y2 -  ( 1 + y1 )  *  ( 1 + q )  * q + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^B =  ( 2*q + 1 )  * y0 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y2;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =   instanceof   ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2  !=   ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ^  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  +  ( 1 + q )  + y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1  !=  q )  *  ( 1  !=  q )  * y1  !=  q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1  <<  q )  *  ( 1  <<  q )  * y1  <<  q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^C =  ( 1 + x2 )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^C =  ( 1 + q )  * tolerance;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^C + =  ( 1 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^C =  ( 1  |  q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^C =  ( 2 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x2 * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = B * B - 4 * x * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta = A * B - 4 * B * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = B * B  <<  4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = B * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B  !=  delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B / B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = x2 - 2.0 * C *  ( x2 - x1 )  / y;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2  ==  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2 - x1 )  + denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 + C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = x2 - 2.0 * C *  ( x2  ||  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x += null;^248^^^^^233^263^x += absoluteAccuracy;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x = min + Math.random (  )  *  ( x - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  !=  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x = min + Math.random (  )  *  ( max  !=  min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y = f.value ( x2 ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^tolerance + = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = x; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = x1; y0 = y2;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x2; y1 = x2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y1; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldx = y2;^272^^^^^257^287^oldx = x;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = B + Math.sqrt ( y2 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = y2 - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = B - Math.sqrt ( y0 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dplus = B + Math.sqrt ( tolerance ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dminus = B - Math.sqrt ( y1 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( x * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^denominator = Math.sqrt ( B * B - x1 ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^denominator = Math.sqrt ( B * B  >=  delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x - x1 )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( x  ^  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( x2 )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( x2, i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
