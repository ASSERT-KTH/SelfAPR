[buglab_swap_variables]^if  ( min.value ( f )  == 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( max.value ( f )  == 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( initial.value ( f )  == 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifyBracketing ( max, min, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifyBracketing (  max, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifyBracketing ( min, f, max ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifyBracketing ( min,  f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifyBracketing ( min, max ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifySequence ( max, initial, min ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifySequence (  initial, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifySequence ( min, max, initial ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifySequence ( min,  max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifySequence ( min, initial ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( isBracketing (  initial, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( isBracketing ( min,  f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( isBracketing ( min, initial )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve ( max, initial ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve (  max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve ( initial ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve ( initial, min ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve (  initial ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve ( min ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( isBracketing ( f, initial, min )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( isBracketing ( initial, min, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^if  ( isBracketing ( min, f, initial )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^x0 = min; y0 = x0.value ( f ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x2 = max; y2 = x2.value ( f ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x1 = 0.5 *  ( x2 + x0 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = x1.value ( f ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^if  ( min == 0.0 )  { return y0; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^if  ( max == 0.0 )  { return y2; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^verifyBracketing ( max, min, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^verifyBracketing (  max, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^verifyBracketing ( min,  f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^verifyBracketing ( min, f, max ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^verifyBracketing ( min, max ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^if  ( Math.abs ( oldx - x )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^if  ( Math.abs ( tolerance - oldx )  <= x )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^setResult ( i, x ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^setResult (  i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^setResult ( x ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^setResult ( i, x ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^setResult (  i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^setResult ( x ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x1 = 0.5 *  ( x2 + x0 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y1 = x1.value ( f ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^double xm = 0.5 *  ( x2 + x0 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^double ym = xm.value ( f ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x0 = x1 < x ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x0 = x < x0 ? x1 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y0 = y1 < x1 ? y0 : x;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y0 = x1 < x ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y0 = y0 < x1 ? x : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y0 = x < y1 ? y0 : x1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x2 = x2 > x1 ? x : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x2 = x1 > x ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x2 = x > x2 ? x1 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y2 = y2 > x1 ? x : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y2 = x > y2 ? x1 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y2 = x > y1 ? y2 : x1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^if  ( MathUtils.sign ( ym )  + MathUtils.sign ( y0 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d01 =  ( x1 - y0 )  /  ( y1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d01 =  ( y1 - x0 )  /  ( x1 - y0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d01 =  ( y1 - x1 )  /  ( y0 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d12 =  ( x1 - y1 )  /  ( x2 - y2 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d12 =  ( y2 - x1 )  /  ( x2 - y1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d12 =  ( y2 - x2 )  /  ( y1 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d012 =  ( d01 - d12 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d012 =  ( d12 - x0 )  /  ( x2 - d01 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d012 =  ( d12 - x2 )  /  ( d01 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d012 =  ( x0 - d01 )  /  ( x2 - d12 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^c1 = x0 +  ( x1 - d01 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^c1 = d01 +  ( d012 - x0 )  * x1;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^c1 = d01 +  ( x1 - d012 )  * x0;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^c1 = d012 +  ( x1 - x0 )  * d01;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^delta = d012 * c1 - 4 * y1 * c1;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^delta = c1 * c1 - 4 * d012 * y1;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xplus = delta +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( x1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xplus = y1 +  ( -2.0 * x1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xplus = c1 +  ( -2.0 * y1 )  /  ( x1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xminus = c1 +  ( -2.0 * y1 )  /  ( x1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xminus = y1 +  ( -2.0 * x1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xminus = x1 +  ( -2.0 * c1 )  /  ( y1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xminus = delta +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( x1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( x2, xplus, x0 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence (  xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( xplus, x0, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( x0,  x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( x0, xplus, xminus )  ? xplus : x2;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( x0, xplus )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( x0, xminus, x2 )  ? xplus : xplus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y = x.value ( f ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^tolerance = Math.max ( x * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^tolerance = Math.max ( absoluteAccuracy * Math.abs ( x ) , relativeAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x )  ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y0 = x < x1 ? y1 : y0;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y2 = x > x1 ? y1 : y2;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y2 = y1 > x1 ? y2 : x;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x1 = 0.5 *  ( x2 + x0 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y1 = x1.value ( f ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^boolean bisect =  ( x0 < x1 &&  ( x1 - x )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^boolean bisect =  ( x1 < x &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^boolean bisect =  ( x < x1 &&  ( x1 - x2 )  > 0.95 *  ( x0 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^boolean bisect =  ( x2 < x1 &&  ( x1 - x0 )  > 0.95 *  ( x - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^double xm = 0.5 *  ( x2 + x0 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^double ym = xm.value ( f ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x = isSequence ( x0, x2, xplus )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^if  ( MathUtils.sign ( ym )  + MathUtils.sign ( y0 )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x0 = x0 < x1 ? x : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d01 =  ( x0 - y0 )  /  ( x1 - y1 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d12 =  ( x2 - y1 )  /  ( y2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^d012 =  ( d12 - d01 )  /  ( x0 - x2 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^c1 = d01 +  ( x0 - x1 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xplus = x1 +  ( -2.0 * c1 )  /  ( y1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xplus = x1 +  ( -2.0 * y1 )  /  ( delta + Math.sqrt ( c1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^xminus = x1 +  ( -2.0 * y1 )  /  ( delta - Math.sqrt ( c1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y0 = x < y0 ? x1 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^y2 = x1 > x ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^boolean bisect =  ( x < x0 &&  ( x1 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[buglab_swap_variables]^x0 = min; y0 = x0.value ( f ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x1 = max; y1 = x1.value ( f ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x2 = 0.5 *  ( x1 + x0 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = x2.value ( f ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( min == 0.0 )  { return y0; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( max == 0.0 )  { return y1; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyBracketing ( max, min, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyBracketing (  max, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyBracketing ( min,  f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyBracketing ( f, max, min ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyBracketing ( min, max ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^while  ( maximalIterationCount <= i )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^while  ( x1 == x || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^while  ( x == x2 || x == x1 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^while  ( x2 == x1 || x == x )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^denominator = Math.sqrt ( delta * B - B ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^denominator = Math.abs ( dminus )  > Math.abs ( dplus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^double dplus = delta + Math.sqrt ( B ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^double dminus = delta - Math.sqrt ( B ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = max + Math.random (  )  *  ( min - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = denominator - 2.0 * C *  ( x2 - x1 )  / x2;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = x2 - 2.0 * x1 *  ( x2 - C )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = x1 - 2.0 * C *  ( x2 - x2 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = x2 - 2.0 * denominator *  ( x2 - x1 )  / C;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( Math.abs ( oldx - x )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( i, x ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult (  i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( x ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( i, x ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult (  i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( x ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^q =  ( x1 - x2 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^q =  ( x2 - x0 )  /  ( x1 - x1 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^A = y1 *  ( y2 -  ( 1 + q )  * q + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^A = q *  ( y1 -  ( 1 + q )  * y2 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^A = q *  ( y2 -  ( 1 + q )  * y0 + q * y1 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^A = y0 *  ( y2 -  ( 1 + q )  * y1 + q * q ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^B =  ( 2*q + 1 )  * q -  ( 1 + y2 )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^B =  ( 2*q + 1 )  * y0 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y2;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y0 + q * q * y1;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^B =  ( 2*q + 1 )  * y2 -  ( 1 + y0 )  *  ( 1 + q )  * y1 + q * q * q;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^C =  ( 1 + y2 )  * q;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^delta = C * B - 4 * A * B;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^delta = A * B - 4 * B * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^delta = B * B - 4 * C * A;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^denominator = Math.sqrt ( delta * B - B ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = x2 - 2.0 * C *  ( x2 - denominator )  / x1;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = max + Math.random (  )  *  ( min - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^y = x.value ( f ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^tolerance = Math.max ( x * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^tolerance = Math.max ( absoluteAccuracy * Math.abs ( x ) , relativeAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x )  ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^x = C - 2.0 * x2 *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( Math.abs ( tolerance - oldx )  <= x )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^q =  ( x0 - x1 )  /  ( x1 - x2 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^A = y2 *  ( q -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[buglab_swap_variables]^B =  ( 2*q + 1 )  * y2 -  ( 1 + y1 )  *  ( 1 + q )  * q + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
