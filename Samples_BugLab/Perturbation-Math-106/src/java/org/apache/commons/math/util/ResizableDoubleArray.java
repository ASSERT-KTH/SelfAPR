[BugLab_Wrong_Literal]^public static final int MULTIPLICATIVE_MODE = -1;^80^^^^^75^85^public static final int MULTIPLICATIVE_MODE = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[BugLab_Wrong_Literal]^protected int initialCapacity = 15;^109^^^^^104^114^protected int initialCapacity = 16;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[BugLab_Wrong_Literal]^protected int numElements = 1;^120^^^^^115^125^protected int numElements = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[BugLab_Wrong_Literal]^protected int startIndex = this;^128^^^^^123^133^protected int startIndex = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[BugLab_Variable_Misuse]^setInitialCapacity ( startIndex ) ;^155^^^^^154^157^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int)   int initialCapacity [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setInitialCapacity ( numElements ) ;^183^^^^^181^186^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setContractionCriteria ( contractionCriteria +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^this.expansionFactor = contractionCriteria;^209^^^^^207^213^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setContractionCriteria ( expansionFactor ) ;^210^^^^^207^213^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setInitialCapacity ( startIndex ) ;^211^^^^^207^213^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^this.expansionFactor = contractionCriteria;^238^^^^^236^243^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setContractionCriteria ( expansionFactor ) ;^239^^^^^236^243^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setInitialCapacity ( startIndex ) ;^240^^^^^236^243^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^setExpansionMode ( startIndex ) ;^241^^^^^236^243^setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^if  (  ( initialCapacity + numElements )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Variable_Misuse]^if  (  ( startIndex + initialCapacity )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Variable_Misuse]^if  (  ( startIndex + numElements )  > initialCapacity )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Argument_Swapping]^if  (  ( numElements + startIndex )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Argument_Swapping]^if  (  ( startIndex + internalArray.length )  > numElements )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Argument_Swapping]^if  (  ( internalArray.length + numElements )  > startIndex )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Argument_Swapping]^if  (  ( startIndex + internalArray )  > numElements.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Wrong_Operator]^if  (  ( startIndex + numElements )  >= internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Wrong_Operator]^if  (  ( startIndex  ==  numElements )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Variable_Misuse]^internalArray[initialCapacity +  ( numElements - 1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Variable_Misuse]^internalArray[startIndex +  ( initialCapacity - 1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Argument_Swapping]^internalArray[startIndex +  ( value - 1 ) ] = numElements;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Wrong_Operator]^internalArray[startIndex +  ^  ( numElements - 1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Wrong_Operator]^internalArray[startIndex +  ( numElements  <<  1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Wrong_Literal]^internalArray[startIndex +  ( numElements  ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[BugLab_Variable_Misuse]^if  (  ( numElements +  ( numElements + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^if  (  ( startIndex +  ( initialCapacity + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^if  (  ( startIndex +  ( numElements + 1 )  )  > numElements )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Argument_Swapping]^if  (  ( internalArray.length +  ( numElements + 1 )  )  > startIndex )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Argument_Swapping]^if  (  ( numElements +  ( startIndex + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Argument_Swapping]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Operator]^if  (  ( startIndex +  ( numElements + 1 )  )  < internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Operator]^if  >  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Operator]^if  (  ( startIndex +  ( numElements  ==  1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Literal]^if  (  ( startIndex +  ( numElements + ADDITIVE_MODE )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^internalArray[startIndex +  ( numElements - 1 ) ] = discarded;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^internalArray[initialCapacity +  ( numElements - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^internalArray[startIndex +  ( initialCapacity - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Argument_Swapping]^internalArray[startIndex +  ( value - 1 ) ] = numElements;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Operator]^internalArray[startIndex +  >=  ( numElements - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Operator]^internalArray[startIndex +  ( numElements  ==  1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Wrong_Literal]^internalArray[startIndex +  ( numElements  ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^return value;^293^^^^^277^294^return discarded;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[BugLab_Variable_Misuse]^if  ( expansionFactor < expansionFactor )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Argument_Swapping]^if  ( expansionFactor < contractionCritera )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^if  ( contractionCritera <= expansionFactor )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  >  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  <  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  ^  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never "  &  "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.   instanceof   This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  >=  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never "  >=  "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^if  ( expansionFactor <= 1.0 )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^if  ( contractionCriteria < 1.0 )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  &&  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  >>  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  &  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or "  <  "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  >  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  ||  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or "  &&  "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^if  ( contractionCriteria <= 1.0 )  {^330^^^^^308^335^if  ( expansionFactor <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^if  ( expansionFactor < 1.0 )  {^330^^^^^308^335^if  ( expansionFactor <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^numElements = numElements;^342^^^^^341^344^numElements = 0;^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^double[] tempArray = new double[startIndex + 1];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^double[] tempArray = new double[numElements + ADDITIVE_MODE];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy ( tempArray, startIndex, tempArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy ( internalArray, startIndex, tempArray, 0, initialCapacity ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy ( tempArray, startIndex, internalArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy ( internalArray, numElements, tempArray, 0, startIndex ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^System.arraycopy ( internalArray, startIndex, tempArray, ADDITIVE_MODE, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^internalArray = internalArray;^356^^^^^351^360^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^startIndex = 1;^359^^^^^351^360^startIndex = 0;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^if  ( startIndex > numElements )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^if  ( i > startIndex )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Argument_Swapping]^if  ( numElements > i )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^if  ( i >= numElements )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^} else startIndexf  ( i < 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^} else if  ( i == 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^} else if  ( i < i )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^numElements -= startIndex;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^numElements = i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^startIndex += startIndex;^383^^^^^372^388^startIndex += i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^numElements -= initialCapacity;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Variable_Misuse]^} else numElementsf  ( i < 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^} else if  ( i <= 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^} else if  ( i < -1 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Operator]^numElements += i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[BugLab_Wrong_Literal]^int newSize = 1;^405^^^^^398^416^int newSize = 0;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^if  ( MULTIPLICATIVE_MODE == expansionMode )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Wrong_Operator]^if  ( expansionMode != MULTIPLICATIVE_MODE )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize = startIndex + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize = tempArray.length + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize = internalArray.length + Math.round ( contractionCriteria ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize = internalArray + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize = expansionFactor.length + Math.round ( internalArray ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize = expansionFactor + Math.round ( internalArray.length ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize =  ( int )  Math.ceil ( startIndex * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize =  ( int )  Math.ceil ( tempArray.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize =  ( int )  Math.ceil ( internalArray * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize =  ( int )  Math.ceil ( expansionFactor.length * internalArray ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Wrong_Operator]^newSize =  ( int )  Math.ceil ( internalArray.length - expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize =  ( int )  Math.ceil ( numElements * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize =  ( int )  Math.ceil ( internalArray.length * contractionCriteria ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize =  ( int )  Math.ceil ( expansionFactor * internalArray.length ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize =  ( int )  Math.ceil ( internalArray.length.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Wrong_Operator]^newSize =  ( int )  Math.ceil ( internalArray.length / expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^newSize = internalArray.length.length + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^newSize =  ( int )  Math.ceil ( newSize * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy ( internalArray, 0, tempArray, 0, newSize ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy ( tempArray, 0, internalArray, 0, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy ( internalArray.length, 0, tempArray, 0, internalArray ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Wrong_Literal]^System.arraycopy ( internalArray, i, tempArray, i, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Wrong_Literal]^System.arraycopy ( internalArray, -1, tempArray, -1, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^internalArray = internalArray;^415^^^^^398^416^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy ( internalArray, 0, tempArray, 0, newSize ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy ( tempArray, 0, internalArray, 0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy ( internalArray, 0, internalArray.length, 0, tempArray ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^System.arraycopy ( internalArray, -1, tempArray, -1, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^System.arraycopy ( internalArray, , tempArray, , internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^internalArray = internalArray;^427^^^^^423^428^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return expansionFactor;^443^^^^^442^444^return contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] getContractionCriteria [RETURN_TYPE] float   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( size >= numElements )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( index >= initialCapacity )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  ( numElements >= index )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( index > numElements )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^} else if  ( numElements >= 0 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^} else if  ( index == 0 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return tempArray[startIndex + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return internalArray[size + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return index[startIndex + internalArray];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^String msg = "The startIndex specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^String msg = "The index specified: "  ||  index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^} else if  ( index > 0 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return internalArray[startIndex + numElements];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return internalArray[newSize + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return internalArray[startIndex + startIndex];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return internalArray[numElements + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^String msg = "The size specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^String msg = "The index specified: "  >  index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy (  internalArray, startIndex, tempArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy (  tempArray, startIndex, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy (  internalArray, initialCapacity, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^System.arraycopy (  internalArray, startIndex, elementArray, 0, initialCapacity ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy (  elementArray, startIndex, internalArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy (  internalArray, numElements, elementArray, 0, startIndex ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^System.arraycopy (  numElements, startIndex, elementArray, 0, internalArray ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^System.arraycopy (  internalArray, startIndex, elementArray, i, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return tempArray;^480^^^^^476^481^return elementArray;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return contractionCriteria;^496^^^^^495^497^return expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] getExpansionFactor [RETURN_TYPE] float   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return numElements;^507^^^^^506^508^return expansionMode;^[CLASS] ResizableDoubleArray  [METHOD] getExpansionMode [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( size ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( tempArray.length ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( internalArray ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( internalArray.length.length ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( size ) ;^529^^^^^528^530^return  ( numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getNumElements [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( tempArray ) ;^544^^^^^543^545^return  ( internalArray ) ;^[CLASS] ResizableDoubleArray  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^checkContractExpand ( expansionFactor, getExpansionFactor (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( startIndex < 0 )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( index <= 0 )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^if  ( index < expansionMode )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( newSize + 1 > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( index + 1 > size )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  ( numElements + 1 > index )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( index + 1 >= numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( index  <=  1 > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^if  ( index  > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^numElements = newSize + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^numElements = index ;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^numElements = startIndex + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^numElements = index + initialCapacity;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( startIndex + newSize )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( size + index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( startIndex + index )  >= newSize )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( startIndex + index )  >= tempArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( startIndex + internalArray.length )  >= index )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( internalArray.length + index )  >= startIndex )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( startIndex + index )  >= internalArray.length.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  (  ( startIndex + index )  > internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  (  ( startIndex  <=  index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  <<  (  ( startIndex + index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  &&  (  ( startIndex + index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( startIndex +  ( size + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( newSize +  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^expandTo ( index +  ( startIndex + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^expandTo ( startIndex +  >>  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^expandTo ( startIndex +  ( index  >=  1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^expandTo ( startIndex +  ( index + size )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( startIndex +  ( newSize + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^expandTo ( startIndex +  |  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^expandTo ( startIndex +  ( index  |  1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^expandTo ( startIndex +  ( index  )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^internalArray[initialCapacity + index] = value;^581^^^^^570^582^internalArray[startIndex + index] = value;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^checkContractExpand ( getContractionCriteria (  ) , contractionCriteria ) ;^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^this.expansionFactor = contractionCriteria;^598^^^^^595^599^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( numElements != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( expansionMode != size && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != startIndex )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  ( ADDITIVE_MODE != MULTIPLICATIVE_MODE && expansionMode != expansionMode )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  ( MULTIPLICATIVE_MODE != expansionMode && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  ( expansionMode != ADDITIVE_MODE && expansionMode != MULTIPLICATIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( expansionMode != MULTIPLICATIVE_MODE || expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( expansionMode >= MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode == ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^this.expansionMode = newSize;^613^^^^^608^614^this.expansionMode = expansionMode;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( size > 0 )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( initialCapacity >= 0 )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Literal]^if  ( initialCapacity > 1 )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^String msg = "The initial capacity supplied: " + numElements + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^String msg = "The initial capacity supplied: "  ^  initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^this.initialCapacity = startIndex;^625^^^^^623^632^this.initialCapacity = initialCapacity;^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^this.initialCapacity = numElements;^625^^^^^623^632^this.initialCapacity = initialCapacity;^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^String msg = "The initial capacity supplied: "  |  initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( i <= 0 )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( startIndex + startIndex )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( initialCapacity + i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( startIndex + i )  > initialCapacity )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  (  ( startIndex + i )  > tempArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( startIndex + internalArray )  > i.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( i + startIndex )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( startIndex + internalArray.length )  > i )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^if  (  ( startIndex + i )  > internalArray.length.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  (  ( startIndex + i )  >= internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  (  ( startIndex  <<  i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  (  ( startIndex  >  i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( startIndex + newSize ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( numElements + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^expandTo ( i + startIndex ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^expandTo ( startIndex  <=  i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( startIndex + size ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^expandTo ( size + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^expandTo ( startIndex  |  i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^numElements = startIndex;^658^^^^^642^659^numElements = i;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( newSize == MULTIPLICATIVE_MODE )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^if  ( expansionMode == newSize )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^if  ( expansionMode >= MULTIPLICATIVE_MODE )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( startIndex - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( tempArray.length - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( internalArray.length - newSize )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( internalArray.length - numElements )  > expansionFactor;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( numElements - internalArray.length )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( numElements.length - internalArray )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( contractionCriteria - numElements )  > internalArray.length;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length - numElements )  < contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length  >  numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( newSize / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( tempArray.length / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( internalArray.length / newSize )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( internalArray.length / numElements )  > expansionFactor;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( numElements / internalArray.length )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( internalArray.length.length / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( internalArray.length / contractionCriteria )  > numElements;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length / numElements )  >= contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length - numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( startIndex / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( internalArray.length / size )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( contractionCriteria.length / numElements )  > internalArray;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length + numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( initialCapacity - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return  ( internalArray.length - startIndex )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( internalArray - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( contractionCriteria.length - numElements )  > internalArray;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Argument_Swapping]^return  ( internalArray.length - contractionCriteria )  > numElements;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length - numElements )  >= contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Wrong_Operator]^return  ( internalArray.length   instanceof   numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[BugLab_Variable_Misuse]^return size;^685^^^^^684^686^return startIndex;^[CLASS] ResizableDoubleArray  [METHOD] start [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
