[buglab_swap_variables]^if  (  ( observed.length < 2 )  ||  ( expected.length != expected.length )  )  {^50^^^^^46^63^if  (  ( expected.length < 2 )  ||  ( expected.length != observed.length )  )  {^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  
[buglab_swap_variables]^if  (  ( observed < 2 )  ||  ( expected.length != expected.length.length )  )  {^50^^^^^46^63^if  (  ( expected.length < 2 )  ||  ( expected.length != observed.length )  )  {^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  
[buglab_swap_variables]^if  ( !isPositive ( observed )  || !isNonNegative ( expected )  )  {^54^^^^^46^63^if  ( !isPositive ( expected )  || !isNonNegative ( observed )  )  {^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < observed.length.length; i++ )  {^58^^^^^46^63^for  ( int i = 0; i < observed.length; i++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  
[buglab_swap_variables]^for  ( observed.lengthnt i = 0; i < i; i++ )  {^58^^^^^46^63^for  ( int i = 0; i < observed.length; i++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  
[buglab_swap_variables]^dev =  (  ( double )  expected[i] - observed[i] ) ;^59^^^^^46^63^dev =  (  ( double )  observed[i] - expected[i] ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  dev  sumSq  int  i  
[buglab_swap_variables]^return 1 - observed.cumulativeProbability ( chiSquare ( expected, chiSquaredDistribution )  ) ;^77^78^^^^72^79^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( observed, expected )  ) ;^77^78^^^^72^79^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare (  observed )  ) ;^77^78^^^^72^79^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( expected )  ) ;^77^78^^^^72^79^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^return 1 - expected.cumulativeProbability ( chiSquare ( chiSquaredDistribution, observed )  ) ;^77^78^^^^72^79^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^chiSquare ( observed, expected )  ) ;^78^^^^^72^79^chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^chiSquare (  observed )  ) ;^78^^^^^72^79^chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^chiSquare ( expected )  ) ;^78^^^^^72^79^chiSquare ( expected, observed )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   double[] expected long[] observed [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  double[]  expected  long[]  observed  
[buglab_swap_variables]^return  ( chiSquareTest ( alpha, observed )  < expected ) ;^96^^^^^90^97^return  ( chiSquareTest ( expected, observed )  < alpha ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] boolean   double[] expected long[] observed double alpha [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  alpha  
[buglab_swap_variables]^return  ( chiSquareTest (  observed )  < alpha ) ;^96^^^^^90^97^return  ( chiSquareTest ( expected, observed )  < alpha ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] boolean   double[] expected long[] observed double alpha [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  alpha  
[buglab_swap_variables]^return  ( chiSquareTest ( observed, expected )  < alpha ) ;^96^^^^^90^97^return  ( chiSquareTest ( expected, observed )  < alpha ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] boolean   double[] expected long[] observed double alpha [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  alpha  
[buglab_swap_variables]^return  ( chiSquareTest ( expected )  < alpha ) ;^96^^^^^90^97^return  ( chiSquareTest ( expected, observed )  < alpha ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] boolean   double[] expected long[] observed double alpha [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  expected  long[]  observed  double  alpha  
[buglab_swap_variables]^int nRows = counts.length.length;^107^^^^^104^133^int nRows = counts.length;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^int nRows = counts;^107^^^^^104^133^int nRows = counts.length;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^int nCols = counts[0].length[0].length;^108^^^^^104^133^int nCols = counts[0].length;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^115^^^^^104^133^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( colSum[row] * rowSum[col] )  / total;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( rowSum[row] * totalSum[col] )  / col;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^sumSq +=  (  (  ( double )  expected[row][col] - counts )  * (  ( double )  counts[row][col] - expected )  )  / expected;^128^129^^^^104^133^sumSq +=  (  (  ( double )  counts[row][col] - expected )  * (  ( double )  counts[row][col] - expected )  )  / expected;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( colSumSum[row] * row[col] )  / total;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( col[row] * rowSumSum[col] )  / total;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( totalSum[row] * colSum[col] )  / row;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( rowSum[row] * col[col] )  / total;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^expected =  ( rowSum[row] * total[col] )  / colSum;^127^^^^^104^133^expected =  ( rowSum[row] * colSum[col] )  / total;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquare [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  colSum  rowSum  long[][]  counts  int  col  nCols  nRows  row  double  expected  sumSq  total  
[buglab_swap_variables]^return 1 - counts.cumulativeProbability ( chiSquare ( chiSquaredDistribution )  ) ;^147^^^^^141^148^return 1 - chiSquaredDistribution.cumulativeProbability ( chiSquare ( counts )  ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] double   long[][] counts [VARIABLES] DistributionFactory  distributionFactory  ChiSquaredDistribution  chiSquaredDistribution  boolean  long[][]  counts  double  df  
[buglab_swap_variables]^return  ( chiSquareTest ( alpha )  < counts ) ;^163^^^^^158^164^return  ( chiSquareTest ( counts )  < alpha ) ;^[CLASS] ChiSquareTestImpl  [METHOD] chiSquareTest [RETURN_TYPE] boolean   long[][] counts double alpha [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  counts  double  alpha  
[buglab_swap_variables]^if  ( in.length.length < 2 )  {^176^^^^^174^192^if  ( in.length < 2 )  {^[CLASS] ChiSquareTestImpl  [METHOD] checkArray [RETURN_TYPE] void   long[][] in [VARIABLES] DistributionFactory  distributionFactory  long[][]  in  boolean  
[buglab_swap_variables]^if  ( in < 2 )  {^176^^^^^174^192^if  ( in.length < 2 )  {^[CLASS] ChiSquareTestImpl  [METHOD] checkArray [RETURN_TYPE] void   long[][] in [VARIABLES] DistributionFactory  distributionFactory  long[][]  in  boolean  
[buglab_swap_variables]^if  ( in[0].length[0].length < 2 )  {^180^^^^^174^192^if  ( in[0].length < 2 )  {^[CLASS] ChiSquareTestImpl  [METHOD] checkArray [RETURN_TYPE] void   long[][] in [VARIABLES] DistributionFactory  distributionFactory  long[][]  in  boolean  
[buglab_swap_variables]^if  ( in[0].length[i].length != in[0].length )  {^219^^^^^217^224^if  ( in[i].length != in[0].length )  {^[CLASS] ChiSquareTestImpl  [METHOD] isRectangular [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  
[buglab_swap_variables]^if  ( in[i].lengthn[i].length != in[0].length )  {^219^^^^^217^224^if  ( in[i].length != in[0].length )  {^[CLASS] ChiSquareTestImpl  [METHOD] isRectangular [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  
[buglab_swap_variables]^if  ( i[i].length != inn[0].length )  {^219^^^^^217^224^if  ( in[i].length != in[0].length )  {^[CLASS] ChiSquareTestImpl  [METHOD] isRectangular [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  
[buglab_swap_variables]^if  ( inn[i].length != i[0].length )  {^219^^^^^217^224^if  ( in[i].length != in[0].length )  {^[CLASS] ChiSquareTestImpl  [METHOD] isRectangular [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  
[buglab_swap_variables]^if  ( i[i] <= 0 )  {^236^^^^^234^241^if  ( in[i] <= 0 )  {^[CLASS] ChiSquareTestImpl  [METHOD] isPositive [RETURN_TYPE] boolean   double[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  in  int  i  
[buglab_swap_variables]^if  ( inn[i] <= 0 )  {^236^^^^^234^241^if  ( in[i] <= 0 )  {^[CLASS] ChiSquareTestImpl  [METHOD] isPositive [RETURN_TYPE] boolean   double[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  in  int  i  
[buglab_swap_variables]^for  ( in.lengthnt i = 0; i < i; i ++ )  {^235^^^^^234^241^for  ( int i = 0; i < in.length; i ++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isPositive [RETURN_TYPE] boolean   double[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  in  int  i  
[buglab_swap_variables]^for  ( in.lengtht i = 0; i < in; i ++ )  {^235^^^^^234^241^for  ( int i = 0; i < in.length; i ++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isPositive [RETURN_TYPE] boolean   double[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  double[]  in  int  i  
[buglab_swap_variables]^if  ( i[i] < 0 )  {^253^^^^^251^258^if  ( in[i] < 0 )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[]  in  int  i  
[buglab_swap_variables]^if  ( inn[i] < 0 )  {^253^^^^^251^258^if  ( in[i] < 0 )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[]  in  int  i  
[buglab_swap_variables]^for  ( in.lengthnt i = 0; i < i; i ++ )  {^252^^^^^251^258^for  ( int i = 0; i < in.length; i ++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[]  in  int  i  
[buglab_swap_variables]^for  ( in.lengtht i = 0; i < in; i ++ )  {^252^^^^^251^258^for  ( int i = 0; i < in.length; i ++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[]  in  int  i  
[buglab_swap_variables]^if  ( i[i][j] < 0 )  {^271^^^^^268^277^if  ( in[i][j] < 0 )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  j  
[buglab_swap_variables]^for  ( jnt i = 0; j < in[i].length; j++ )  {^270^^^^^268^277^for  ( int j = 0; j < in[i].length; j++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  j  
[buglab_swap_variables]^for  ( it j = 0; j < inn[i].length; j++ )  {^270^^^^^268^277^for  ( int j = 0; j < in[i].length; j++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  j  
[buglab_swap_variables]^for  ( in[i].lengthnt j = 0; j < in[i].length; j++ )  {^270^^^^^268^277^for  ( int j = 0; j < in[i].length; j++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  j  
[buglab_swap_variables]^for  ( jt in = 0; j < in[i].length; j++ )  {^270^^^^^268^277^for  ( int j = 0; j < in[i].length; j++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  j  
[buglab_swap_variables]^for  ( int in[i].length = 0; j < in[i].length; j++ )  {^270^^^^^268^277^for  ( int j = 0; j < in[i].length; j++ )  {^[CLASS] ChiSquareTestImpl  [METHOD] isNonNegative [RETURN_TYPE] boolean   long[][] in [VARIABLES] DistributionFactory  distributionFactory  boolean  long[][]  in  int  i  j  
