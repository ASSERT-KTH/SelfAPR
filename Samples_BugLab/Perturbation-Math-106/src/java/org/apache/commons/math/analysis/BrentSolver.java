[buglab_swap_variables]^return solve ( max, min ) ;^62^^^^^59^63^return solve ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve (  max ) ;^62^^^^^59^63^return solve ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^return solve ( min ) ;^62^^^^^59^63^return solve ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[buglab_swap_variables]^verifyInterval ( max, min ) ;^85^^^^^70^100^verifyInterval ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyInterval (  max ) ;^85^^^^^70^100^verifyInterval ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^verifyInterval ( min ) ;^85^^^^^70^100^verifyInterval ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^y0 = x0.value ( f ) ;^94^^^^^79^109^y0 = f.value ( x0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^y1 = x1.value ( f ) ;^95^^^^^80^110^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( y1 * y0 >= 0 )  {^98^^^^^83^113^if  ( y0 * y1 >= 0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y0 + "," + max + "]" + "  Values: [" + min + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + max + "," + min + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y1 + "," + y0 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y1 + "," + max + "]" + "  Values: [" + y0 + "," + min + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y0 + "]" + "  Values: [" + max + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y1 + "]" + "  Values: [" + y0 + "," + max + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double delta = x0 - x1;^107^^^^^92^122^double delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( i, x1 ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult (  i ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( x1 ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( Math.abs ( tolerance )  <= dx )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( i, x1 ) ;^131^^^^^116^146^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult (  i ) ;^131^^^^^116^146^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^setResult ( x1 ) ;^131^^^^^116^146^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  (  ( Math.abs ( tolerance )  < oldDelta )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r2 *  ( dx * r1 *  ( r1 - r3 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( x1 * r1 *  ( r1 - r2 )  -  ( dx - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r1 *  ( dx * r3 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r1 *  ( r1 - x1 )  -  ( r2 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r1 *  ( r1 - x0 )  -  ( x1 - r2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p1 =  ( r3 - 1.0 )  *  ( r2 - 1.0 )  *  ( r1 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p1 =  ( r2 - 1.0 )  *  ( r1 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double r1 = y2 / y0;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double r2 = y2 / y1;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 * dx;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * dx >= 1.5 * p * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * p >= 1.5 * dx * tolerance - Math.abs ( p1 * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( oldDelta * p1 )  || p >= Math.abs ( 0.5 * tolerance * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^delta = p1 / p;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r2 *  ( dx * r1 *  ( r1 - r3 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = dx *  ( r3 * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( r1 * dx *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r2 *  ( r1 - r1 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r1 *  ( r1 - x1 )  -  ( r2 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x0 - x1 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p1 =  ( r3 - 1.0 )  *  ( r2 - 1.0 )  *  ( r1 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p1 =  ( r1 - 1.0 )  *  ( r3 - 1.0 )  *  ( r2 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^delta = p1 / p;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double r3 = y0 / y1;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double r1 = y2 / y0;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double r2 = y2 / y1;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p >= Math.abs ( 0.5 * p1 * oldDelta )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = x0 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - r3 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = dx *  ( r3 * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r2 *  ( r1 - r1 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = x1 *  ( dx * r1 *  ( r1 - r2 )  -  ( r3 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * p1 >= 1.5 * dx * p - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * p >= 1.5 * dx * oldDelta - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * p1 * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * p >= 1.5 * tolerance * p1 - Math.abs ( dx * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * oldDelta >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * p * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^x1 = tolerance - 0.5 * x1;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^x1 = tolerance + 0.5 * x1;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^x1 = delta + x1;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  (  ( y2 > 0 )  ==  ( y1 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^delta = x0 - x1;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = x1 *  ( dx * r1 *  ( r1 - r2 )  -  ( r3 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( r2 * r1 *  ( r1 - dx )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * x0 *  ( r1 - r2 )  -  ( x1 - r1 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p1 =  ( r2 - 1.0 )  *  ( r1 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^y1 = x1.value ( f ) ;^182^^^^^167^197^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double dx =  ( x1 - x2 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double tolerance = Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double tolerance = Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 )  ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^Math.max ( relativeAccuracy * Math.abs ( x1 )  ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( Math.abs ( y1 )  < Math.abs ( y2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( x2 == x0 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( x0 * r1 *  ( r1 - r2 )  -  ( x1 - dx )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r1 *  ( dx * r3 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( x0 * r1 *  ( r1 - r2 )  -  ( x1 - dx )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( dx * r1 *  ( r1 - x0 )  -  ( x1 - r2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p = r3 *  ( r1 * dx *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^p1 =  ( r1 - 1.0 )  *  ( r3 - 1.0 )  *  ( r2 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * tolerance >= 1.5 * dx * p1 - Math.abs ( p * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( 2.0 * p >= 1.5 * p1 * dx - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^if  ( Math.abs ( tolerance )  > delta )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[buglab_swap_variables]^Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
