[BugLab_Variable_Misuse]^return solve ( initial, max ) ;^62^^^^^59^63^return solve ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^return solve ( min, initial ) ;^62^^^^^59^63^return solve ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Argument_Swapping]^return solve ( max, min ) ;^62^^^^^59^63^return solve ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[BugLab_Variable_Misuse]^verifyInterval ( tolerance, max ) ;^85^^^^^70^100^verifyInterval ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^verifyInterval ( min, x2 ) ;^85^^^^^70^100^verifyInterval ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^verifyInterval ( max, min ) ;^85^^^^^70^100^verifyInterval ( min, max ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double x0 = tolerance;^90^^^^^75^105^double x0 = min;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double x1 = y0;^91^^^^^76^106^double x1 = max;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = f.value ( tolerance ) ;^94^^^^^79^109^y0 = f.value ( x0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^y0 = x0.value ( f ) ;^94^^^^^79^109^y0 = f.value ( x0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = f.value ( r3 ) ;^94^^^^^79^109^y0 = f.value ( x0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( x0 ) ;^95^^^^^80^110^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^y1 = x1.value ( f ) ;^95^^^^^80^110^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( y2 ) ;^95^^^^^80^110^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( r3 * y1 >= 0 )  {^98^^^^^83^113^if  ( y0 * y1 >= 0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y0 * x1 >= 0 )  {^98^^^^^83^113^if  ( y0 * y1 >= 0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( y0 * y1 > 0 )  {^98^^^^^83^113^if  ( y0 * y1 >= 0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( y0 / y1 >= 0 )  {^98^^^^^83^113^if  ( y0 * y1 >= 0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  ( y1 * y1 >= 1 )  {^98^^^^^83^113^if  ( y0 * y1 >= 0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + x1 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y2 + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + x2 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y2 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y0 + "," + max + "]" + "  Values: [" + min + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y0 + "]" + "  Values: [" + max + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y1 + "," + max + "]" + "  Values: [" + y0 + "," + min + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  |  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >>  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  &  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <<  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  |  "  Endpoints: ["  |  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  >>  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + tolerance + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + r2 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + x0 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y1 + "]" + "  Values: [" + y0 + "," + max + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "   instanceof   Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ^  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  !=  "  Endpoints: ["  !=  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  <<  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + x0 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + tolerance + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y2 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + r2 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  !=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ==  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  <=  "  Endpoints: ["  <=  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  ||  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + x2 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + tolerance + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + tolerance + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  &&  "  Endpoints: ["  &&  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  >=  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^99^100^101^102^^84^114^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double y2 = r2;^106^^^^^91^121^double y2 = y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double delta = tolerance - x0;^107^^^^^92^122^double delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double delta = x1 - r3;^107^^^^^92^122^double delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double delta = x0 - x1;^107^^^^^92^122^double delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double delta = x1  ==  x0;^107^^^^^92^122^double delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double oldDelta = x0;^108^^^^^93^123^double oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i <= maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i == maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^while  ( i > maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( tolerance )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.abs ( tolerance )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y2 )  > Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = r2;^113^^^^^98^128^x0 = x1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y1;^115^^^^^100^130^x2 = x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = r3;^116^^^^^101^131^y0 = y1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = tolerance;^117^^^^^102^132^y1 = y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = r3;^118^^^^^103^133^y2 = y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( r3 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y1 )  == functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( y0, i ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x1 ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  <= tolerance )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( dx )  <= r3 )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( dx )  < tolerance )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( r3, i ) ;^131^^^^^116^146^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^setResult ( i, x1 ) ;^131^^^^^116^146^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( x2 )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( oldDelta )  < x1 )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( tolerance )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( x1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  (  ( Math.abs ( y1 )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( oldDelta )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( Math.abs ( oldDelta )  < tolerance )  && ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( Math.abs ( oldDelta )  <= tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  < Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( y2 == x2 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( x2 == x0 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( x0 != x2 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = tolerance *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * tolerance *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - x1 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( r3 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = x1 *  ( dx * r1 *  ( r1 - r2 )  -  ( r3 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = dx *  ( r3 * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( r1 * dx *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( r2 * r1 *  ( r1 - dx )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * x1 *  ( r1 - r2 )  -  ( r1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * x0 *  ( r1 - r2 )  -  ( x1 - r1 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p / = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  ||  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p - = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx - r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  <  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  &  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2  ==  1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( x2 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( x2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( tolerance - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p1 =  ( r3 - 1.0 )  *  ( r2 - 1.0 )  *  ( r1 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p1 =  ( r1 - 1.0 )  *  ( r3 - 1.0 )  *  ( r2 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 - =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 + =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  >>  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2   instanceof   1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  ==  1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = tolerance / y2;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = y0 / x2;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double r1 = y2 / y0;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r1 = y0 + y2;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = x1 / y2;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double r2 = y2 / y1;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r2 = y1 - y2;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = y0 * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = dx * x1;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 * dx;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p / = dx * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 = 1.0 - x0;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0  <=  r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x2 > 0.0 )  {^154^^^^^139^169^if  ( p > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( p >= 0.0 )  {^154^^^^^139^169^if  ( p > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = -p;^157^^^^^154^158^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^r3 = -p1;^155^^^^^140^170^p1 = -p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * x1 >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * y0 * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * x1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( r3 * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * y0 * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * p >= 1.5 * p1 * dx - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * p >= 1.5 * tolerance * p1 - Math.abs ( dx * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * p >= 1.5 * dx * oldDelta - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * p1 * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  && p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p > 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 / p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1  &&  Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 - dx - p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 / dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance + p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 - oldDelta - p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 / oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if - ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = tolerance;^167^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x0 / p1;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = p / tolerance;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta = p1 / p;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = p + p1;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = 0.5 * dx;^164^^^^^159^169^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x1;^165^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = tolerance * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = dx * tolerance;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p - = dx * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 = 1.0 - tolerance;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0   instanceof   r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = tolerance *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( x0 * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r3 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( tolerance - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - y0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = x0 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - r3 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = dx *  ( r3 * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * r2 *  ( r1 - r1 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * r1 *  ( r1 - x1 )  -  ( r2 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = x1 *  ( dx * r1 *  ( r1 - r2 )  -  ( r3 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * x0 *  ( r1 - r2 )  -  ( x1 - r1 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p - = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  <<  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p / = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx / r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  ||  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  >>  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2  <  1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( x0 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( tolerance - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( y1 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p1 =  ( r3 - 1.0 )  *  ( r2 - 1.0 )  *  ( r1 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p1 =  ( r2 - 1.0 )  *  ( r1 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p1 =  ( r1 - 1.0 )  *  ( r3 - 1.0 )  *  ( r2 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 - =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 + =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  >  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2  >  1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  &&  1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^tolerance = -p;^157^^^^^142^172^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta - = 0.5 * dx;^164^^^^^149^179^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = tolerance;^167^^^^^152^182^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x0 / p1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = p / tolerance;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta = p1 / p;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = p * p1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r3 = r2 / y0;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r3 = y1 / tolerance;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double r3 = y0 / y1;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r3 = y1 + y0;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = x0 / y2;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = y0 / tolerance;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double r1 = y2 / y0;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r1 = y0 * y2;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = r3 / y2;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y1 / x0;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double r2 = y2 / y1;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r2 = y1 + y2;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * x0 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * p >= 1.5 * dx * tolerance - Math.abs ( p1 * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance - p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p >= Math.abs ( 0.5 * y0 * p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p >= Math.abs ( 0.5 * oldDelta * x0 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p >= Math.abs ( 0.5 * p1 * oldDelta )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p >= Math.abs ( 0.5 - oldDelta - p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p >= Math.abs ( 0.5 / oldDelta * p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y0;^137^^^^^122^152^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = 0.5 * dx;^137^^^^^122^152^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = y0;^138^^^^^123^153^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( r3 == x2 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x0 == y2 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( x0 >= x2 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = y0 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( y2 * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * x1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - y0 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( tolerance - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - r2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x0 - x1 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p + = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1   instanceof   r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  |  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  &&  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2  ||  1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( x0 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p1 =  ( r2 - 1.0 )  *  ( r1 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 / =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  <  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2  ||  1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  &&  1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = y0 / r3;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r1 = y0 * y2;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = r3 / y2;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y1 / r3;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = y2 * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0  >=  r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x0 > 0.0 )  {^154^^^^^139^169^if  ( p > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( p < 0.0 )  {^154^^^^^139^169^if  ( p > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = -p;^157^^^^^154^158^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * x2 * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * y2 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( x0 * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * x2 * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * dx >= 1.5 * p * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p == 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 + p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1  <<  Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 / dx / p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance / p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 / oldDelta / p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = tolerance / p1;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = p / y0;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = p * p1;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * x2;^164^^^^^159^169^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta - = 0.5 * dx;^164^^^^^159^169^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x0;^165^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( delta )  > x1 )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( delta )  >= tolerance )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( x2 > 0.0 )  {^177^^^^^162^192^} else if  ( dx > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^} else if  ( dx >= 0.0 )  {^177^^^^^162^192^} else if  ( dx > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( x0 <= 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^} else if  ( dx < 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x0 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 - 0.5 * r3;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x1 = tolerance - 0.5 * x1;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  !=  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 - = x1 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = r2 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 - 0.5 * x0;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  <<  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 + = x1 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = r2 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + 0.5 * y2;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x1 = tolerance + 0.5 * x1;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 - = x1 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( tolerance <= 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^} else if  ( dx > 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = r3 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  <  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 / = x1 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x2 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + 0.5 * x0;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 / = x1 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 - 0.5 * r2;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x0 + delta;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + r3;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^x1 = delta + x1;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^} else if  ( dx < 0.0 )  {^177^^^^^162^192^} else if  ( dx > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( y2 <= 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  >  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  ||  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + 0.5 * x2;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( r3 <= 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 - 0.5 * x2;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( tolerance > 0 )  ==  ( y2 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( y1 > 0 )  ==  ( x2 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 > 0 )  !=  ( y2 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 >= 0 )  ==  ( y2 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 > 0 )  ==  ( y2 == 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  (  ( y1 > i )  ==  ( y2 > i )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = x1;^184^^^^^169^199^x2 = x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = x0;^185^^^^^170^200^y2 = y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x1 - r2;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^delta = x0 - x1;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = x1  <<  x0;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = r3;^187^^^^^172^202^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = tolerance;^113^^^^^98^128^x0 = x1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x0;^114^^^^^99^129^x1 = x2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = r3;^115^^^^^100^130^x2 = x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = tolerance;^116^^^^^101^131^y0 = y1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = r2;^117^^^^^102^132^y1 = y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = x2;^118^^^^^103^133^y2 = y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * x0;^137^^^^^122^152^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x0;^138^^^^^123^153^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 = 1.0 - r2;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0  ==  r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = x2 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * x1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - x2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x2 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - y1 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r2 *  ( dx * r1 *  ( r1 - r3 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( r1 * dx *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r1 *  ( dx * r3 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * x1 *  ( r1 - r2 )  -  ( r1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p + = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  ==  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  <=  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  &&  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2  >  1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( tolerance - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( x0 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( tolerance - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  >=  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2  ^  1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3   instanceof   1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = -p;^157^^^^^142^172^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * r3;^164^^^^^149^179^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta / = 0.5 * dx;^164^^^^^149^179^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x0;^165^^^^^150^180^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x1;^167^^^^^152^182^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = p / x1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = r2;^173^^^^^158^188^y0 = y1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = y2 + delta;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + x2;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = r3 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + 0.5 * r2;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 - 0.5 * y2;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  >=  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( r2 ) ;^182^^^^^167^197^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^y1 = x1.value ( f ) ;^182^^^^^167^197^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = y1;^184^^^^^169^199^x2 = x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = r2;^185^^^^^170^200^y2 = y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = r2 - x0;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x1 - y2;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x2;^187^^^^^172^202^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dx =  ( r3 - x1 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dx =  ( x2 - r3 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double dx =  ( x1 - x2 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double dx =  ( x2  |  x1 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * Math.abs ( r2 ) , absoluteAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , 0 ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double - tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = r3 / y2;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = y0 / r3;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y1 / tolerance;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r2 = y1 * y2;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( r2 )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.abs ( r3 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( r2 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( r2, i ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^Math.max ( relativeAccuracy * Math.abs ( r2 ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^Math.max / ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^Math.max ( relativeAccuracy * Math.abs ( x2 ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y0 )  <= tolerance )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( x0, i ) ;^131^^^^^116^146^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( tolerance )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^( Math.abs ( y0 )  <= Math.abs ( r3 )  )  )  {^135^^^^^120^150^( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( x1 * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * r3 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p >= Math.abs ( 0.5 / oldDelta / p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p >= Math.abs ( 0.5 - oldDelta * p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( r3 )  > tolerance )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = f.value ( tolerance ) ;^182^^^^^167^197^y1 = f.value ( x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.abs ( y0 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( y1 )  < Math.abs ( y2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y2 )  <= Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = r3;^114^^^^^99^129^x1 = x2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y0 = x0;^116^^^^^101^131^y0 = y1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y0 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( functionValueAccuracy )  <= y1 )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( y1 )  < functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^setResult ( r3, i ) ;^124^^^^^109^139^setResult ( x1, i ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( tolerance )  <= tolerance )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( dx )  <= x1 )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( tolerance )  <= dx )  {^130^^^^^115^145^if  ( Math.abs ( dx )  <= tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^return null;^132^^^^^117^147^return result;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( y1 )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( x2 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( tolerance )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x0 == tolerance )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( tolerance * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * y0 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( r2 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - r3 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = x0 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - r3 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * r2 *  ( r1 - r1 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r2 *  ( dx * r1 *  ( r1 - r3 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( x1 * r1 *  ( r1 - r2 )  -  ( dx - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  ==  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx + r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  >>  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2   instanceof   1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( x0 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( x0 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  |  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  &  1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = x2 / y2;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = y0 / tolerance;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y2 / y2;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y1 / x2;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = x1 * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p + = dx * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 = 1.0 - x2;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0  &&  r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^r3 = -p;^157^^^^^154^158^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^tolerance = -p1;^155^^^^^140^170^p1 = -p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * tolerance - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( x2 * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * x0 * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * tolerance >= 1.5 * dx * p1 - Math.abs ( p * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * oldDelta >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * p * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 - p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 + dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 - oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x1;^167^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = p - p1;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = tolerance;^165^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = x0 * r3;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = x0 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( tolerance * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * tolerance *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r3 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - y2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( x1 * r1 *  ( r1 - r2 )  -  ( dx - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1   instanceof   r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx + r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  !=  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  ||  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( x1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( x2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  <=  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2  <  1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  ^  1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = -p1;^155^^^^^140^170^p1 = -p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^r3 = -p;^157^^^^^142^172^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta + = 0.5 * dx;^164^^^^^149^179^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = r3;^165^^^^^150^180^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = r3;^167^^^^^152^182^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = tolerance / p1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = p + p1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r3 = y1 / y2;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r1 = y2 / y2;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r1 = y0 - y2;^149^^^^^134^164^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y1 / x2;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r2 = y1 - y2;^150^^^^^135^165^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * y0 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p >= Math.abs ( 0.5 * tolerance * p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p >= Math.abs ( 0.5 * oldDelta * y0 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p >= Math.abs ( 0.5 + oldDelta + p1 )  )  {^160^^^^^145^175^p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * r3;^137^^^^^122^152^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta - = 0.5 * dx;^137^^^^^122^152^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = tolerance;^138^^^^^123^153^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x0 == x0 )  {^143^^^^^128^158^if  ( x0 == x2 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = x0 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - tolerance )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * r1 *  ( r1 - x0 )  -  ( x1 - r2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( x0 * r1 *  ( r1 - r2 )  -  ( x1 - dx )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  !=  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2  ^  1.0 )  ) ;^151^^^^^143^153^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( x1 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( x2 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  ^  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2  ==  1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  >=  1.0 ) ;^152^^^^^143^153^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r1 = y0 - y2;^149^^^^^143^153^double r1 = y0 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r2 = y1 / y1;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r2 = y1 + y2;^150^^^^^143^153^double r2 = y1 / y2;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = dx * y2;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0  ||  r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( x1 > 0.0 )  {^154^^^^^139^169^if  ( p > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y1 = -p1;^155^^^^^140^170^p1 = -p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * tolerance * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * p >= 1.5 * oldDelta * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * dx * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( 2.0 * p1 >= 1.5 * dx * p - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 * dx * p1  |  Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( 2.0 * p >= 1.5 - dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if / ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^144^174^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = r3;^167^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = y0 / p1;^168^^^^^159^169^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x2;^165^^^^^159^169^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( tolerance )  > tolerance )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( delta )  > r3 )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^if  ( Math.abs ( tolerance )  > delta )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  ( Math.abs ( delta )  < tolerance )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( x1 > 0.0 )  {^177^^^^^162^192^} else if  ( dx > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  ^  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1   instanceof   0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 + = x1 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x2 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = y1 - 0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  &&  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( x0 > 0.0 )  {^177^^^^^162^192^} else if  ( dx > 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^} else if  ( y1 <= 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^} else if  ( dx == 0.0 )  {^179^^^^^164^194^} else if  ( dx <= 0.0 )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  ==  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x0 + 0.5 * tolerance;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  |  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( y1 > 0 )  ==  ( x0 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^if  (  ( y1 > 0 )  <  ( y2 > 0 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Literal]^if  (  ( y1 > 1 )  ==  ( y2 > 1 )  )  {^183^^^^^168^198^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = r2;^184^^^^^169^199^x2 = x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = x1  !=  x0;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = y2;^187^^^^^172^202^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = r3;^113^^^^^98^128^x0 = x1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = x2;^115^^^^^100^130^x2 = x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^y2 = r2;^118^^^^^103^133^y2 = y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * x1;^137^^^^^122^152^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = dx * x0;^145^^^^^130^160^p = dx * r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 = 1.0  !=  r3;^146^^^^^131^161^p1 = 1.0 - r3;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * y2 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - x1 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( y0 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( r2 * r1 *  ( r1 - dx )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^p = r3 *  ( dx * r1 *  ( r1 - x0 )  -  ( x1 - r2 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1  |  r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1  <  x0 )  *  ( r2 - 1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2  >=  1.0 )  ) ;^151^^^^^136^166^p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( x0 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 / =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1  <  1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2  !=  1.0 )  *  ( r3 - 1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3  >  1.0 ) ;^152^^^^^137^167^p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x2 = -p;^157^^^^^142^172^p = -p;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = 0.5 * y2;^164^^^^^149^179^delta = 0.5 * dx;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x2;^167^^^^^152^182^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x1 / p1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = p - p1;^168^^^^^153^183^delta = p / p1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x0 = y2;^172^^^^^157^187^x0 = x1;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = r3 + delta;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + tolerance;^176^^^^^161^191^x1 = x1 + delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^x1 = x1 + 0.5 * y0;^178^^^^^163^193^x1 = x1 + 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^x1 = x1  >>  0.5 * tolerance;^180^^^^^165^195^x1 = x1 - 0.5 * tolerance;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^delta = x1 - tolerance;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^delta = x1  &  x0;^186^^^^^171^201^delta = x1 - x0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^oldDelta = x0;^187^^^^^172^202^oldDelta = delta;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^return 4;^125^^^^^110^140^return result;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double dx =  ( x0 - x1 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double dx =  ( x2  >>  x1 ) ;^127^^^^^112^142^double dx =  ( x2 - x1 ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^double tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double / tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^128^129^^^^113^143^double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r3 = tolerance / y0;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^double r3 = y1 / r2;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^double r3 = y1 - y0;^140^^^^^125^155^double r3 = y1 / y0;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  < Math.abs ( r2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Argument_Swapping]^Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Wrong_Operator]^Math.max - ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^Math.max ( relativeAccuracy * Math.abs ( tolerance ) , absoluteAccuracy ) ;^129^^^^^114^144^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  (  ( Math.abs ( x0 )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^134^135^^^^119^149^if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^( Math.abs ( r2 )  <= Math.abs ( y1 )  )  )  {^135^^^^^120^150^( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^( Math.abs ( y0 )  <= Math.abs ( y0 )  )  )  {^135^^^^^120^150^( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
[BugLab_Variable_Misuse]^if  ( Math.abs ( y2 )  > tolerance )  {^175^^^^^160^190^if  ( Math.abs ( delta )  > tolerance )  {^[CLASS] BrentSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  
